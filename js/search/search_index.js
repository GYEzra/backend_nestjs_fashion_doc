var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Address.html",[0,0.203,1,2.176]],["body/classes/Address.html",[0,0.245,1,3.375,2,1.073,3,0.126,4,0.126,5,0.101,6,3.874,7,0.493,8,1.566,9,4.4,10,6.525,11,5.941,12,6.525,13,2.142,14,0.852,15,0.01,16,1.208,17,1.843,18,5.442,19,2.096,20,1.02,21,5.217,22,5.217,23,5.217,24,5.217,25,2.838,26,2.727,27,2.638,28,5.217,29,0.253,30,4.507,31,2.522,32,2.838,33,1.384,34,2.079,35,3.649,36,3.425,37,0.179,38,4.181,39,2.838,40,2.838,41,1.282,42,3.874,43,4.593,44,0.007,45,0.007]],["title/controllers/AddressesController.html",[46,1.306,47,3.211]],["body/controllers/AddressesController.html",[0,0.205,3,0.106,4,0.106,5,0.085,7,0.412,13,2.085,14,0.737,15,0.01,16,1.115,17,1.66,20,0.919,29,0.284,37,0.106,44,0.007,45,0.007,46,1.318,47,4.426,48,1.318,49,3.844,50,2.045,51,3.844,52,1.581,53,2.587,54,1.622,55,5.247,56,2.308,57,2.378,58,4.366,59,4.542,60,2.864,61,2.866,62,2.999,63,3.982,64,4.366,65,1.934,66,1.153,67,1.578,68,5.961,69,1.934,70,2.59,71,4.366,72,4.366,73,2.611,74,2.999,75,4.366,76,2.866,77,3.242,78,4.366,79,2.322,80,2.478,81,7.292,82,5.072,83,3.037,84,2.892,85,4.366,86,2.892,87,3.115,88,2.375,89,2.282,90,1.508,91,0.709,92,4.028,93,3.844,94,1.691,95,4.146,96,1.796,97,2.118,98,2.375,99,2.197,100,0.945,101,2.282,102,1.691,103,2.045,104,2.197,105,4.366,106,4.366,107,1.796,108,1.742,109,2.375,110,2.375,111,1.934,112,2.385,113,4.366,114,2.375,115,2.282,116,4.366,117,4.366,118,2.478,119,2.478,120,4.366,121,4.366,122,2.592,123,2.375,124,2.592,125,4.366]],["title/modules/AddressesModule.html",[126,1.147,127,2.693]],["body/modules/AddressesModule.html",[0,0.272,1,2.912,3,0.14,4,0.14,5,0.112,15,0.01,29,0.285,31,2.176,33,1.535,37,0.14,42,5.317,44,0.008,45,0.008,47,5.774,48,2.162,66,0.915,91,0.94,92,5.297,93,5.094,126,2.062,127,5.37,128,2.309,129,2.455,130,2.62,131,2.62,132,2.455,133,3.52,134,3.52,135,5.094,136,5.094,137,5.094,138,3.242,139,2.62,140,2.62,141,5.787,142,5.787,143,2.912,144,5.094,145,2.807,146,3.025,147,5.094]],["title/injectables/AddressesService.html",[92,2.566,148,0.96]],["body/injectables/AddressesService.html",[0,0.183,1,3.212,3,0.094,4,0.094,5,0.075,7,0.368,11,5.116,13,1.423,14,0.79,15,0.01,16,1.232,19,0.932,20,0.984,29,0.272,33,1.032,34,1.207,37,0.094,38,3.119,41,1.352,44,0.006,45,0.006,52,1.46,53,2.591,54,1.497,55,4.844,56,2.131,57,2.195,59,4.733,63,1.888,65,2.072,66,1.235,67,1.69,69,2.016,79,1.239,82,5.55,90,1.344,91,0.632,92,3.266,94,1.507,95,3.827,96,1.601,111,2.072,112,2.485,144,3.426,148,1.221,149,1.464,150,3.426,151,5.503,152,2.195,153,2.195,154,3.892,155,3.627,156,3.892,157,5.503,158,5.503,159,3.937,160,3.892,161,2.577,162,5.503,163,6.69,164,3.892,165,4.475,166,5.503,167,3.892,168,2.669,169,3.892,170,2.394,171,2.876,172,3.892,173,3.123,174,3.892,175,2.31,176,2.034,177,1.888,178,1.888,179,1.823,180,2.034,181,1.888,182,2.707,183,3.426,184,3.892,185,1.888,186,3.892,187,3.892,188,5.503,189,1.823,190,2.263,191,3.426,192,4.41,193,3.892,194,3.892,195,3.892,196,3.892,197,2.707,198,3.426,199,3.892,200,3.892,201,1.705]],["title/classes/AllExceptionsFilter.html",[0,0.203,202,3.465]],["body/classes/AllExceptionsFilter.html",[0,0.252,2,1.105,3,0.13,4,0.13,5,0.104,7,0.508,14,0.691,15,0.01,20,0.861,29,0.257,37,0.13,41,2.007,44,0.008,45,0.008,52,1.813,65,1.813,66,1.081,67,1.479,69,1.426,91,0.873,107,2.211,108,2.145,153,2.145,190,2.211,202,5.479,203,4.732,204,3.88,205,7.518,206,6.025,207,5.376,208,8.35,209,5.376,210,6.837,211,7.518,212,7.912,213,5.376,214,6.837,215,5.077,216,6.019,217,7.912,218,3.191,219,5.376,220,4.732,221,5.376,222,5.376,223,5.376,224,4.732,225,5.376,226,5.376,227,5.376,228,5.376,229,6.837,230,5.376,231,6.837,232,4.309,233,5.376,234,5.376,235,4.732,236,5.376,237,1.964,238,5.376]],["title/controllers/AppController.html",[46,1.306,239,3.211]],["body/controllers/AppController.html",[0,0.32,3,0.165,4,0.165,5,0.132,15,0.01,29,0.232,37,0.165,44,0.009,45,0.009,46,2.384,48,2.057,91,1.107,239,5.863,240,5.998]],["title/modules/AppModule.html",[126,1.147,241,3.211]],["body/modules/AppModule.html",[0,0.175,3,0.09,4,0.09,5,0.072,15,0.01,19,0.893,29,0.301,33,0.989,34,1.156,37,0.09,41,0.916,44,0.006,45,0.006,48,1.611,53,1.126,90,1.288,91,0.605,111,0.989,126,1.653,127,4.666,128,1.487,129,1.582,130,1.688,131,1.688,132,1.582,133,2.822,134,1.688,138,2.416,139,1.688,140,1.688,143,1.876,145,3.024,177,1.808,178,1.808,218,2.212,239,4.628,241,6.689,242,3.281,243,3.281,244,3.281,245,4.918,246,4.805,247,4.666,248,4.918,249,4.918,250,4.666,251,4.666,252,4.447,253,4.666,254,4.666,255,4.251,256,4.666,257,5.211,258,5.211,259,5.211,260,2.988,261,3.728,262,3.728,263,4.698,264,4.467,265,2.322,266,3.728,267,3.728,268,3.728,269,3.728,270,3.728,271,3.728,272,3.728,273,3.728,274,3.728,275,3.728,276,3.728,277,3.728,278,3.728,279,5.336,280,3.728,281,3.281,282,5.336,283,3.728,284,3.728,285,5.336,286,3.728,287,4.277,288,3.728,289,3.728,290,3.728,291,3.728,292,3.728,293,2.322,294,3.281,295,3.728,296,3.281,297,3.728,298,3.728,299,3.728,300,5.336,301,3.728,302,2.988,303,3.728,304,3.728]],["title/injectables/AppService.html",[148,0.96,257,3.007]],["body/injectables/AppService.html",[0,0.305,3,0.157,4,0.157,5,0.126,7,0.614,15,0.01,16,1.086,20,0.818,29,0.222,37,0.157,44,0.008,45,0.008,52,2.037,69,1.723,91,1.055,111,1.723,148,1.704,149,2.443,257,5.341,305,5.718,306,8.448,307,6.496,308,6.496,309,6.496]],["title/classes/ApplyAddressDto.html",[0,0.203,310,3.211]],["body/classes/ApplyAddressDto.html",[0,0.341,2,1.219,3,0.144,4,0.144,5,0.115,7,0.56,8,1.697,14,0.6,15,0.01,16,1.028,17,1.35,20,0.747,27,2.314,29,0.248,37,0.144,44,0.008,45,0.008,63,3.526,100,1.283,237,2.167,310,5.397,311,6.398,312,4.403,313,7.401,314,3.693,315,7.268,316,2.443,317,3.799,318,4.527,319,3.799,320,5.929,321,3.291,322,2.656,323,3.291,324,4.771,325,5.929,326,2.9,327,4.527,328,2.516,329,3.799,330,2.23,331,2.365,332,2.296]],["title/classes/ApplyPromotionDto.html",[0,0.203,333,3.211]],["body/classes/ApplyPromotionDto.html",[0,0.304,2,1.332,3,0.157,4,0.157,5,0.126,15,0.01,29,0.262,37,0.157,41,1.884,44,0.008,45,0.008,54,1.763,100,1.402,326,2.585,333,5.694,334,5.704,335,4.812,336,3.359,337,4.443,338,7.668,339,4.551,340,4.812,341,4.036,342,4.507]],["title/controllers/AuthController.html",[46,1.306,343,3.211]],["body/controllers/AuthController.html",[0,0.191,3,0.098,4,0.098,5,0.079,7,0.383,13,2.085,14,0.752,15,0.01,17,1.609,19,1.358,20,0.891,29,0.286,37,0.098,41,0.997,44,0.006,45,0.006,46,1.225,48,1.225,50,1.901,52,1.503,53,2.474,60,2.865,62,2.852,65,1.875,66,1.117,67,1.529,69,1.875,70,2.32,86,1.969,87,2.121,91,0.659,99,2.042,100,0.878,101,2.121,102,1.572,103,1.901,104,2.042,107,1.669,108,1.619,111,1.875,112,2.136,115,2.121,343,4.208,344,3.573,345,3.573,346,5.667,347,4.989,348,5.234,349,4.989,350,4.059,351,4.059,352,2.962,353,2.962,354,5.667,355,4.989,356,5.248,357,4.059,358,4.059,359,5.505,360,4.059,361,4.059,362,4.402,363,4.195,364,4.542,365,4.059,366,6.545,367,4.059,368,6.173,369,4.059,370,5.667,371,4.059,372,3.573,373,5.357,374,4.059,375,4.208,376,3.942,377,4.208,378,4.059,379,4.059,380,3.573,381,4.067,382,3.253,383,3.014,384,3.53,385,3.014,386,4.059,387,4.059,388,3.876,389,3.573,390,2.823,391,4.059,392,4.989,393,4.208,394,3.253,395,4.059,396,4.059,397,4.059,398,5.667,399,4.059,400,4.059,401,4.059,402,4.059,403,4.059,404,4.059,405,5.667,406,4.059,407,4.059,408,4.059,409,4.059,410,4.059,411,4.059,412,4.059,413,4.059]],["title/modules/AuthModule.html",[126,1.147,245,2.838]],["body/modules/AuthModule.html",[0,0.236,3,0.121,4,0.121,5,0.097,15,0.01,19,1.202,29,0.299,37,0.121,44,0.007,45,0.007,48,1.975,53,1.516,91,0.815,126,1.93,128,2.003,129,2.13,130,2.273,131,2.273,132,2.13,133,3.295,134,2.273,138,2.962,139,2.273,140,2.273,145,3.53,245,5.746,255,4.653,256,5.107,263,5.759,264,5.061,265,3.127,296,4.419,302,4.023,343,5.404,381,5.107,382,4.023,414,4.419,415,4.419,416,5.02,417,5.703,418,5.02,419,5.02,420,5.02,421,5.02,422,5.02,423,3.295,424,5.02,425,4.023,426,4.858,427,5.02,428,4.023,429,4.419,430,2.624,431,3.727,432,5.02,433,5.02,434,5.02,435,5.02,436,4.419,437,4.419,438,5.02,439,4.419,440,5.02]],["title/injectables/AuthService.html",[148,0.96,381,2.693]],["body/injectables/AuthService.html",[0,0.164,1,2.566,3,0.085,4,0.085,5,0.068,7,0.331,9,4.17,13,2.045,14,0.742,15,0.01,16,1.165,19,0.839,20,0.924,29,0.278,37,0.085,41,1.975,44,0.006,45,0.006,52,1.353,53,2.486,65,1.945,66,1.159,67,1.587,69,1.863,70,1.812,79,1.624,91,0.569,108,2.637,111,1.945,112,2.476,148,1.132,149,1.317,153,2.035,159,1.987,165,3.989,179,1.64,180,1.83,181,1.698,185,3.206,189,1.64,190,1.44,264,4.969,265,2.181,347,4.49,348,2.806,349,4.49,356,2.6,359,5.275,366,5.819,372,4.49,373,4.887,381,3.177,383,2.6,384,3.177,390,2.435,425,2.806,428,2.806,429,3.082,430,3.957,431,2.6,436,3.082,439,3.082,441,3.082,442,5.1,443,5.1,444,5.1,445,3.501,446,4.161,447,7.57,448,3.501,449,5.1,450,3.501,451,4.49,452,5.1,453,3.501,454,5.1,455,3.501,456,3.501,457,5.1,458,3.596,459,3.501,460,3.082,461,1.762,462,2.6,463,2.806,464,2.298,465,3.414,466,2.806,467,2.806,468,3.501,469,4.49,470,3.501,471,3.501,472,3.501,473,3.501,474,2.022,475,3.501,476,3.501,477,3.501,478,3.082,479,3.501,480,3.082,481,5.1,482,2.992,483,5.1,484,5.1,485,5.1,486,3.501,487,3.501,488,3.501,489,3.501,490,4.822,491,3.501,492,5.1,493,5.1,494,3.501,495,3.501,496,3.501,497,3.501,498,3.501,499,5.1,500,3.501,501,3.501,502,3.501,503,3.501,504,3.501]],["title/classes/Cart.html",[0,0.203,505,2.454]],["body/classes/Cart.html",[0,0.209,1,3.45,2,0.916,3,0.108,4,0.108,5,0.086,7,0.421,8,1.411,13,2.132,14,0.888,15,0.01,16,1.216,17,1.75,19,1.942,20,0.968,25,4.181,26,4.31,27,2.523,29,0.277,30,4.311,31,2.272,32,2.423,33,1.181,34,1.873,35,3.287,36,2.924,37,0.166,39,2.423,40,3.73,41,1.094,44,0.007,45,0.007,147,3.921,159,3.429,161,2.83,339,4.07,505,3.429,506,3.308,507,4.769,508,4.769,509,6.857,510,5.136,511,4.454,512,2.528,513,4.454,514,5.045,515,4.454,516,4.454,517,4.454,518,3.728,519,3.57,520,2.924,521,4.454,522,4.454,523,3.921,524,2.328,525,3.57,526,3.966,527,3.763,528,3.586,529,4.454,530,3.308,531,3.921]],["title/injectables/CartExistsRule.html",[148,0.96,258,3.007]],["body/injectables/CartExistsRule.html",[0,0.318,3,0.128,4,0.128,5,0.103,7,0.501,14,0.755,15,0.01,16,1.057,19,1.623,20,0.941,29,0.269,37,0.128,44,0.007,45,0.007,52,1.797,53,2.376,65,1.981,66,1.244,67,1.616,69,1.797,70,1.883,91,0.861,107,2.18,111,1.981,112,1.734,148,1.504,149,1.993,153,2.115,170,1.734,179,2.483,181,2.571,204,3.008,206,4.248,258,4.713,330,1.993,332,2.624,532,6.929,533,4.248,534,5.965,535,4.448,536,5.301,537,4.938,538,4.666,539,5.965,540,6.929,541,4.666,542,4.666,543,5.965,544,4.666,545,5.965,546,5.965,547,5.301,548,4.248,549,3.687,550,4.666,551,4.666,552,4.248,553,5.301]],["title/classes/CartItemDto.html",[0,0.203,554,2.838]],["body/classes/CartItemDto.html",[0,0.239,2,0.717,3,0.084,4,0.084,5,0.068,7,0.329,8,1.188,14,0.74,15,0.01,16,1.175,17,1.502,19,1.58,20,0.831,27,2.467,29,0.225,37,0.084,44,0.006,45,0.006,100,0.755,161,2.382,170,2.395,201,2.63,237,3.12,316,2.017,321,3.508,322,2.973,323,3.315,326,2.798,328,2.976,329,1.823,330,1.311,331,3.091,332,2.555,524,1.823,526,3.94,527,3.739,528,3.563,554,3.338,555,6.175,556,3.07,557,3.739,558,2.886,559,3.744,560,4.811,561,5.754,562,5.754,563,3.395,564,3.2,565,3.016,566,3.227,567,3.563,568,3.487,569,3.984,570,3.487,571,2.795,572,4.05,573,4.05,574,4.477,575,3.487,576,3.487,577,3.07,578,4.477,579,4.076,580,4.556,581,6.435,582,2.59,583,3.776,584,3.776,585,3.487,586,4.589,587,4.589,588,3.07,589,4.477,590,3.487,591,4.811,592,5.754,593,3.487,594,3.487,595,3.2,596,3.776,597,2.426,598,2.426,599,2.07,600,3.776,601,2.59,602,2.795,603,3.09,604,3.07,605,2.59,606,3.07,607,3.07,608,3.07,609,3.07]],["title/controllers/CartsController.html",[46,1.306,610,3.211]],["body/controllers/CartsController.html",[0,0.162,3,0.083,4,0.083,5,0.067,7,0.326,13,1.805,14,0.737,15,0.01,16,1.212,17,1.66,20,0.919,29,0.283,37,0.083,44,0.006,45,0.006,46,1.041,48,1.041,50,1.614,52,1.337,53,2.542,54,1.372,56,2.309,60,2.33,61,2.262,62,2.537,63,2.446,65,1.934,66,1.153,67,1.578,69,1.934,70,2.48,86,2.446,87,3.649,89,1.801,90,1.191,91,0.56,94,1.335,95,2.397,97,3.654,98,1.875,99,1.734,100,0.746,101,1.801,102,1.335,103,1.614,104,1.734,107,1.417,108,1.375,109,1.875,110,1.875,111,1.934,112,2.283,114,1.875,115,1.801,123,1.875,152,2.011,168,1.672,170,2.619,171,1.801,310,5.594,317,2.635,318,3.14,319,4.118,333,5.594,342,2.397,352,2.635,353,2.635,388,2.993,505,1.956,537,3.539,551,3.034,554,5.07,572,3.429,573,3.429,610,3.744,611,3.034,612,3.034,613,4.439,614,5.248,615,5.962,616,3.034,617,3.447,618,4.041,619,3.885,620,3.447,621,3.034,622,3.447,623,4.563,624,3.447,625,3.447,626,3.447,627,3.447,628,3.31,629,3.447,630,3.034,631,5.072,632,3.447,633,2.762,634,3.447,635,5.775,636,5.962,637,4.872,638,3.447,639,3.744,640,3.447,641,3.034,642,3.034,643,3.447,644,3.447,645,2.397,646,3.034,647,2.762,648,3.447,649,3.447,650,3.447,651,3.447,652,3.447,653,1.956,654,1.956,655,3.447,656,3.447,657,3.447,658,3.447,659,3.447,660,3.383,661,3.447,662,3.447,663,3.447,664,3.447,665,5.042,666,3.447,667,3.447,668,3.447,669,3.447,670,3.447]],["title/modules/CartsModule.html",[126,1.147,246,2.693]],["body/modules/CartsModule.html",[0,0.248,3,0.128,4,0.128,5,0.103,15,0.01,29,0.292,31,1.989,33,1.403,37,0.128,44,0.007,45,0.007,48,2.043,66,0.836,91,0.859,126,1.979,127,5.179,128,2.11,129,2.245,130,2.395,131,2.395,132,2.245,133,3.378,134,3.378,138,3.064,139,2.395,140,2.395,143,2.662,145,3.283,146,2.765,246,5.519,252,4.935,253,5.179,505,3.002,530,5.025,537,5.234,610,5.541,641,4.657,671,4.657,672,4.657,673,4.657,674,5.29,675,5.29,676,5.29,677,4.657,678,5.29,679,5.29,680,4.657,681,5.29]],["title/injectables/CartsService.html",[148,0.96,537,2.566]],["body/injectables/CartsService.html",[0,0.089,1,1.588,3,0.046,4,0.046,5,0.037,7,0.179,13,0.491,14,0.761,15,0.01,16,1.174,19,1.563,20,0.87,29,0.246,33,0.503,34,0.588,37,0.046,41,1.942,44,0.003,45,0.003,52,0.837,53,2.434,54,1.103,56,1.57,65,1.832,66,1.117,67,1.495,69,1.785,70,2.011,79,2.249,90,0.655,91,0.308,92,2.804,94,0.735,108,1.617,111,1.874,112,2.679,148,0.701,149,0.713,152,1.259,153,1.259,155,2.469,159,3.819,161,1.478,163,4.159,165,2.57,168,1.531,170,2.395,171,1.65,175,1.126,176,0.992,177,0.92,178,0.92,179,0.889,180,0.992,181,0.92,185,3.493,189,3.056,190,3.167,191,1.67,201,2.63,313,4.618,339,3.995,461,0.955,505,4.787,507,5.093,508,3.649,518,2.292,525,1.521,526,3.443,527,3.915,528,3.731,535,1.245,537,1.873,554,4.126,557,1.966,563,0.831,613,2.779,614,2.779,616,2.779,621,2.779,630,2.779,631,3.938,635,4.984,642,1.67,646,1.67,647,1.521,677,1.67,682,1.67,683,3.157,684,3.157,685,3.157,686,3.157,687,3.157,688,1.897,689,4.053,690,2.943,691,4.053,692,3.568,693,2.57,694,1.897,695,3.157,696,1.897,697,1.897,698,3.157,699,1.897,700,3.157,701,1.897,702,1.897,703,1.897,704,3.157,705,1.897,706,3.157,707,1.897,708,3.157,709,1.897,710,1.897,711,1.897,712,1.67,713,1.521,714,1.521,715,1.67,716,3.938,717,1.521,718,1.897,719,2.53,720,1.126,721,1.897,722,1.897,723,1.897,724,1.897,725,1.897,726,6.002,727,1.897,728,4.159,729,4.159,730,1.897,731,1.897,732,1.897,733,1.67,734,1.67,735,4.618,736,3.157,737,3.157,738,7.064,739,4.053,740,6.218,741,7.064,742,5.246,743,4.053,744,3.157,745,1.897,746,3.157,747,1.897,748,1.897,749,1.897,750,5.744,751,1.897,752,3.157,753,1.897,754,1.897,755,3.157,756,3.157,757,1.897,758,1.897,759,1.897,760,1.897,761,3.157,762,1.897,763,1.897,764,1.897,765,1.897,766,1.897,767,1.897,768,1.897,769,1.897,770,5.038,771,1.897,772,2.977,773,4.053,774,3.157,775,1.897,776,4.053,777,1.897,778,3.157,779,3.157,780,3.568,781,3.157,782,1.897,783,4.159,784,1.897,785,4.159,786,1.897,787,4.159,788,3.157,789,1.897,790,1.897,791,1.897,792,1.897,793,1.897,794,1.897,795,1.897,796,1.897,797,1.897,798,1.521,799,1.897,800,1.32]],["title/controllers/CategoriesController.html",[46,1.306,801,3.211]],["body/controllers/CategoriesController.html",[0,0.183,3,0.094,4,0.094,5,0.076,7,0.369,13,2.231,14,0.703,15,0.01,16,1.149,17,1.668,20,0.923,29,0.281,37,0.094,44,0.006,45,0.006,46,1.179,48,1.179,50,1.828,52,1.463,53,2.592,54,1.501,56,2.135,57,2.551,60,2.924,62,2.774,65,1.843,66,1.098,67,1.503,69,1.944,70,2.603,73,3.682,74,2.774,79,1.756,80,2.215,84,2.675,86,2.675,87,2.882,88,2.123,89,2.04,90,1.348,91,0.634,94,1.511,96,1.605,97,3.102,98,2.123,99,1.964,100,0.845,101,2.04,102,1.511,103,1.828,104,1.964,107,1.605,108,1.557,109,3,110,2.123,111,1.944,112,2.397,115,2.882,118,2.215,119,3.129,122,2.317,123,3,124,2.317,152,2.2,168,1.894,170,2.272,171,2.04,352,3.631,353,3.631,388,3.795,645,2.715,653,2.215,654,2.215,660,2.215,801,4.095,802,3.436,803,3.436,804,3.044,805,3.436,806,4.993,807,3.903,808,3.903,809,3.903,810,5.132,811,3.903,812,3.128,813,3.129,814,3.903,815,3.903,816,3.903,817,5.554,818,3.903,819,3.903,820,3.982,821,3.436,822,4.419,823,3.128,824,3.903,825,3.903,826,3.903,827,3.903,828,3.903,829,3.903,830,3.903]],["title/modules/CategoriesModule.html",[126,1.147,247,2.693]],["body/modules/CategoriesModule.html",[0,0.272,3,0.14,4,0.14,5,0.112,15,0.01,29,0.285,31,2.176,33,1.535,37,0.14,44,0.008,45,0.008,48,2.162,66,0.915,91,0.94,126,2.062,128,2.309,129,2.455,130,2.62,131,2.62,132,2.455,133,3.52,134,3.52,138,3.242,139,2.62,140,2.62,143,2.912,145,2.807,146,3.025,247,5.37,801,5.774,820,5.559,821,5.094,831,5.094,832,5.094,833,5.094,834,5.787,835,5.787,836,3.435,837,5.317,838,5.094,839,5.094]],["title/injectables/CategoriesService.html",[148,0.96,820,2.693]],["body/injectables/CategoriesService.html",[0,0.16,3,0.082,4,0.082,5,0.066,7,0.321,8,1.165,13,2.03,14,0.734,15,0.01,16,1.111,19,0.814,20,0.969,29,0.272,33,0.901,34,1.053,37,0.082,41,1.843,44,0.005,45,0.005,52,1.324,53,2.536,54,1.358,56,1.932,57,2.359,60,2.835,65,1.841,66,1.147,67,1.502,69,1.925,79,2.541,80,1.928,90,1.174,91,0.552,94,1.316,96,1.397,102,1.316,111,1.841,112,2.61,114,3.217,148,1.107,149,1.278,152,1.991,153,1.991,155,3.406,165,4.342,168,2.421,170,2.373,171,2.608,175,2.017,176,1.776,177,1.648,178,1.648,179,1.591,180,1.776,181,1.648,185,3.367,189,3.251,190,2.984,201,1.489,204,1.928,215,2.523,218,2.017,332,1.316,461,1.71,474,1.987,693,3.947,713,2.723,804,2.855,805,4.393,806,4.763,817,5.351,820,3.108,822,3.999,836,4.307,838,2.991,840,2.991,841,5.388,842,3.398,843,6.01,844,4.99,845,4.99,846,3.398,847,3.398,848,3.398,849,3.398,850,3.398,851,3.398,852,2.723,853,3.398,854,3.398,855,3.398,856,2.723,857,4.393,858,6.516,859,3.398,860,3.398,861,4.99,862,3.398,863,1.538,864,3.51,865,3.398,866,5.205,867,4.99,868,4.99,869,3.398,870,1.442,871,2.991,872,3.398,873,3.398,874,3.398,875,3.398,876,1.538,877,3.398]],["title/classes/Category.html",[0,0.203,836,2.566]],["body/classes/Category.html",[0,0.215,2,0.943,3,0.111,4,0.111,5,0.089,7,0.433,8,1.439,14,0.894,15,0.01,16,1.19,17,1.935,18,3.189,19,1.667,20,1.071,25,3.786,27,1.46,29,0.21,30,4.811,31,2.317,32,2.494,33,1.216,34,1.91,35,3.352,37,0.168,39,2.494,40,3.786,41,1.127,44,0.007,45,0.007,66,1.1,79,2.216,316,2.339,474,2.339,512,3.949,798,5.577,836,3.657,837,3.405,852,3.675,863,3.15,870,2.953,876,3.15,878,3.405,879,3.637,880,3.949,881,3.949,882,3.15,883,4.348,884,4.585,885,4.348,886,4.585,887,4.585,888,4.585,889,4.585,890,4.585,891,3.1,892,4.585,893,4.585,894,4.585,895,4.585,896,4.037]],["title/modules/CommonModule.html",[126,1.147,897,3.465]],["body/modules/CommonModule.html",[0,0.32,3,0.165,4,0.165,5,0.132,15,0.01,29,0.232,37,0.165,44,0.009,45,0.009,91,1.107,126,2.094,128,2.718,897,6.328,898,6.813]],["title/classes/CreateAddressDto.html",[0,0.203,59,2.693]],["body/classes/CreateAddressDto.html",[0,0.255,2,0.787,3,0.093,4,0.093,5,0.074,7,0.362,8,1.27,9,3.755,10,5.57,11,5.071,12,5.57,14,0.804,15,0.01,16,1.253,17,1.568,19,1.65,20,0.868,27,2.53,29,0.186,37,0.093,44,0.006,45,0.006,59,3.389,63,3.342,100,0.829,197,5.527,198,4.789,237,2.904,312,2.844,316,2.671,318,3.389,321,3.598,322,2.904,323,3.598,326,2.903,328,3.087,330,1.44,331,3.17,363,4.487,558,3.909,564,3.342,565,2.823,566,3.083,567,4.089,580,4.29,595,3.53,603,3.227,899,5.832,900,4.36,901,4.36,902,4.709,903,5.109,904,3.389,905,4.154,906,3.83,907,4.789,908,5.614,909,6.655,910,4.36,911,4.789,912,3.83,913,5.441,914,5.441,915,4.789,916,6.889,917,3.83,918,4.789,919,4.789,920,4.789,921,4.789,922,4.789,923,4.789,924,3.784,925,3.83]],["title/classes/CreateCartDto.html",[0,0.203,631,3.007]],["body/classes/CreateCartDto.html",[0,0.343,2,1.04,3,0.122,4,0.122,5,0.098,7,0.478,8,1.535,14,0.811,15,0.01,17,1.152,19,1.75,20,0.637,26,2.644,27,2.093,29,0.274,37,0.122,44,0.007,45,0.007,73,2.88,74,3.308,100,1.094,237,2.402,316,1.7,319,3.436,321,2.976,322,2.402,323,2.976,326,2.623,328,2.789,330,1.902,331,2.623,505,2.87,507,5.818,526,4.315,527,4.095,528,3.902,554,5.261,557,4.095,561,4.882,562,4.882,563,3.2,565,2.335,566,2.908,571,4.054,572,3.436,573,3.436,592,4.882,600,3.756,601,3.756,602,4.054,603,2.369,619,3.189,631,4.572,639,4.882,647,4.054,926,5.787,927,4.453,928,5.058,929,4.453,930,5.058,931,5.058,932,5.058,933,5.269,934,6.574,935,4.054,936,5.058,937,5.058,938,6.43,939,4.054,940,4.054]],["title/classes/CreateCategoryDto.html",[0,0.203,806,2.838]],["body/classes/CreateCategoryDto.html",[0,0.291,2,0.951,3,0.112,4,0.112,5,0.09,7,0.437,8,1.447,14,0.707,15,0.01,16,1.223,17,1.591,19,1.108,20,0.881,27,2.551,29,0.211,37,0.112,44,0.007,45,0.007,66,1.294,67,1.615,73,3.729,100,1.001,237,2.728,314,4.353,316,2.885,317,3.902,321,3.628,322,2.928,323,3.628,326,2.979,328,2.63,329,3.653,330,1.739,331,2.788,332,2.4,563,3.271,564,2.244,565,2.201,566,2.331,567,2.745,595,3.622,603,2.166,798,6.239,806,4.068,810,5.587,903,3.678,905,3.239,941,6.572,942,3.707,943,3.497,944,3.86,945,4.625,946,5.456,947,5.456,948,5.456,949,5.456,950,5.456,951,4.311,952,3.517,953,4.625,954,4.625]],["title/classes/CreateOrderDto.html",[0,0.203,955,2.838]],["body/classes/CreateOrderDto.html",[0,0.273,2,0.868,3,0.102,4,0.102,5,0.082,7,0.399,8,1.36,14,0.674,15,0.01,16,1.152,17,1.518,19,1.395,20,0.84,27,2.482,29,0.257,37,0.102,44,0.006,45,0.006,63,3.487,67,1.26,100,0.913,170,2.55,237,2.849,314,3.627,316,2.62,319,4.453,321,3.254,322,2.849,323,3.254,324,2.77,326,2.868,327,3.627,328,2.829,329,3.044,330,1.587,331,2.868,332,1.634,524,2.206,549,4.05,559,2.395,564,2.825,565,2.77,566,2.703,569,3.168,595,2.825,599,2.505,602,3.382,603,2.727,619,3.95,902,3.627,905,3.757,908,4.324,943,2.727,944,2.629,955,3.822,956,6.327,957,3.382,958,5.869,959,4.951,960,4.951,961,5.823,962,3.382,963,4.22,964,4.22,965,6.327,966,5.823,967,4.667,968,6.327,969,4.05,970,3.456,971,3.715,972,3.134,973,5.343,974,4.667,975,6.864,976,6.864,977,5.118,978,5.118,979,4.22,980,3.715,981,3.382,982,3.134,983,3.382,984,3.715]],["title/classes/CreatePermissionDto.html",[0,0.203,985,2.838]],["body/classes/CreatePermissionDto.html",[0,0.271,2,0.857,3,0.101,4,0.101,5,0.081,7,0.394,8,1.348,14,0.723,15,0.01,16,1.226,17,1.628,19,1.712,20,0.901,27,2.584,29,0.197,37,0.101,44,0.006,45,0.006,66,1.047,100,0.902,126,2.186,235,5.081,237,2.966,314,4.453,316,2.728,321,3.675,322,2.966,323,2.613,326,2.995,328,3.185,330,1.567,331,2.852,564,3.213,565,2.883,566,3.052,567,3.931,595,3.642,603,3.516,813,4.407,836,3.426,903,4.61,905,4.243,985,3.789,986,6.609,987,3.34,988,5.913,989,5.732,990,5.081,991,4.277,992,3.789,993,5.772,994,5.772,995,4.167,996,4.167,997,5.73,998,5.772,999,4.015,1000,5.772,1001,4.167,1002,4.167,1003,4.167,1004,5.081,1005,5.081,1006,4.167]],["title/classes/CreateProductDto.html",[0,0.203,1007,2.838]],["body/classes/CreateProductDto.html",[0,0.159,2,0.425,3,0.05,4,0.05,5,0.084,7,0.195,8,0.791,14,0.758,15,0.01,16,1.2,17,1.617,19,1.767,20,0.895,26,3.086,27,2.575,29,0.147,37,0.05,44,0.004,45,0.004,66,0.681,67,1.277,73,2.851,100,0.447,161,2.332,170,1.931,201,3.037,237,3.089,316,2.553,317,3.086,321,3.552,322,3.045,323,3.552,324,2.224,326,2.892,327,2.111,328,2.761,329,2.873,330,0.777,331,3.226,332,2.807,362,2.111,524,1.081,558,2.443,559,2.826,560,3.451,561,5.148,562,5.148,563,3.176,564,3.024,565,2.983,566,3.197,567,2.011,569,3.944,571,4.732,572,4.169,573,4.169,574,2.983,577,2.983,578,4.384,579,2.716,580,3.934,581,5.557,582,2.516,583,3.698,584,3.698,586,3.464,587,4.526,588,1.82,589,2.983,591,3.451,592,5.148,595,3.024,596,3.197,597,1.438,598,1.438,599,1.227,603,2.92,604,2.983,605,2.516,607,1.82,608,1.82,609,1.82,619,3.363,800,2.995,810,3.875,903,3.862,929,2.983,933,3.451,938,2.983,939,2.716,940,4.732,943,2.332,944,3.102,946,1.82,947,1.82,948,1.82,949,1.82,950,1.82,951,3.464,952,3.934,962,1.657,1007,2.224,1008,6.381,1009,1.657,1010,3.79,1011,3.79,1012,3.79,1013,3.79,1014,3.79,1015,3.79,1016,5.4,1017,3.79,1018,5.904,1019,5.904,1020,5.904,1021,4.106,1022,2.067,1023,2.067,1024,4.98,1025,2.067,1026,2.067,1027,2.067,1028,5.904,1029,4.384,1030,2.067,1031,2.983,1032,2.357,1033,2.516,1034,2.067,1035,2.067,1036,3.389,1037,2.716,1038,2.983,1039,2.983,1040,2.067,1041,3.389,1042,4.384,1043,2.067,1044,2.067,1045,2.067,1046,2.067,1047,6.933,1048,2.716,1049,2.067,1050,2.983,1051,2.067,1052,2.067,1053,2.067,1054,2.067,1055,2.067,1056,2.067]],["title/classes/CreatePromotionDto.html",[0,0.203,341,2.693]],["body/classes/CreatePromotionDto.html",[0,0.212,2,0.454,3,0.054,4,0.054,5,0.043,7,0.209,8,0.836,14,0.822,15,0.01,16,1.143,17,1.571,19,1.653,20,0.869,27,2.532,29,0.177,37,0.054,44,0.004,45,0.004,67,0.774,100,0.478,161,3.128,197,2.489,201,2.27,237,3.05,316,2.733,317,4.25,319,2.357,321,3.45,322,2.951,323,3.209,326,2.827,328,2.833,329,2.357,330,0.831,331,3.173,332,2.359,335,1.641,339,2.676,341,2.229,362,3.227,363,2.124,524,1.155,558,3.915,559,2.94,564,3.111,565,2.906,566,2.866,567,1.312,569,3.314,579,2.868,580,4.022,582,1.641,583,2.657,584,2.657,586,3.604,587,3.604,595,2.187,596,2.657,597,1.537,598,1.537,599,1.312,603,3.004,605,1.641,619,3.944,623,4.237,628,5.221,813,2.031,883,4.246,891,3.065,905,3.983,915,5.362,935,1.772,943,2.427,944,1.377,969,2.489,970,2.676,1038,3.15,1039,1.946,1042,3.969,1050,1.946,1057,6.239,1058,3.613,1059,3.136,1060,3.613,1061,3.613,1062,3.969,1063,3.613,1064,3.613,1065,3.348,1066,3.348,1067,4.523,1068,6.87,1069,6.87,1070,3.348,1071,2.558,1072,2.211,1073,2.211,1074,3.578,1075,2.211,1076,3.578,1077,2.211,1078,6.239,1079,4.562,1080,3.15,1081,2.211,1082,3.578,1083,2.211,1084,3.348,1085,2.868,1086,3.15,1087,5.362,1088,2.211,1089,2.211,1090,4.562,1091,3.578,1092,3.578,1093,7.11,1094,5.352,1095,5.878,1096,3.578,1097,3.578,1098,3.578,1099,2.211,1100,6.092,1101,6.092,1102,6.092,1103,2.211,1104,2.211,1105,3.15,1106,3.578,1107,5.878,1108,5.878,1109,2.211,1110,3.348,1111,2.868,1112,3.794,1113,3.794,1114,2.211,1115,2.211,1116,3.15,1117,4.508,1118,2.211,1119,2.211,1120,2.211,1121,2.211,1122,1.946,1123,1.946,1124,1.946,1125,1.946,1126,3.578,1127,2.349]],["title/classes/CreateReviewDto.html",[0,0.203,1128,2.838]],["body/classes/CreateReviewDto.html",[0,0.274,2,0.87,3,0.102,4,0.102,5,0.082,7,0.4,8,1.363,14,0.728,15,0.01,16,1.153,17,1.52,19,1.398,20,0.841,27,2.485,29,0.228,34,1.809,37,0.102,44,0.006,45,0.006,67,1.263,100,0.916,161,2.733,170,1.909,201,2.557,237,3.058,314,3.635,316,2.623,321,3.533,322,2.63,323,3.259,324,2.779,326,2.871,327,3.635,328,2.834,329,3.05,330,1.592,331,2.871,332,2.923,518,3.786,557,4.159,558,2.403,563,2.926,564,2.054,565,2.894,566,3.064,572,3.05,573,3.05,582,3.144,583,4.333,584,4.333,586,4.059,587,5.006,595,2.831,596,4.333,597,2.945,598,2.945,603,3.128,605,3.144,606,3.727,619,3.492,905,3.762,943,2.733,944,2.637,952,4.429,1128,3.831,1129,6.336,1130,3.393,1131,6.646,1132,7.441,1133,5.836,1134,5.836,1135,5.836,1136,5.836,1137,4.234,1138,5.836,1139,4.234,1140,4.234,1141,4.234,1142,6.051,1143,5.836,1144,4.234,1145,4.234,1146,4.234,1147,4.234]],["title/classes/CreateRoleDto.html",[0,0.203,1148,2.838]],["body/classes/CreateRoleDto.html",[0,0.257,2,0.795,3,0.094,4,0.094,5,0.075,7,0.366,8,1.28,14,0.739,15,0.01,16,1.176,17,1.576,19,1.75,20,0.872,26,2.864,27,2.537,29,0.217,34,1.699,37,0.094,44,0.006,45,0.006,66,1.006,73,2.401,74,2.757,100,0.837,170,1.792,237,2.961,314,3.963,316,2.793,317,3.617,321,3.72,322,3.066,323,3.72,326,2.914,327,3.413,328,2.936,329,2.864,330,1.455,331,2.914,332,2.464,482,3.133,558,2.196,564,1.877,565,2.694,566,2.996,567,2.296,595,3.087,603,3.421,813,4.521,891,3.201,903,4.502,905,3.965,924,3.811,933,4.392,939,3.101,940,3.101,943,3.241,944,2.41,991,3.816,999,3.811,1071,4.521,1112,4.724,1113,4.724,1116,4.824,1148,3.597,1149,6.43,1150,3.101,1151,5.1,1152,4.145,1153,5.48,1154,5.916,1155,5.48,1156,3.869,1157,3.869,1158,3.869,1159,3.869,1160,3.811,1161,3.869,1162,5.48,1163,3.869,1164,3.869,1165,3.869,1166,3.869,1167,3.869,1168,3.869,1169,3.869]],["title/classes/CreateUserDto.html",[0,0.203,465,2.454]],["body/classes/CreateUserDto.html",[0,0.23,1,2.93,2,0.68,3,0.08,4,0.08,5,0.064,7,0.313,8,1.143,9,3.456,14,0.802,15,0.01,16,1.237,17,1.563,19,1.541,20,0.865,27,2.525,29,0.167,37,0.08,44,0.005,45,0.005,63,3.121,67,1.059,100,0.716,170,1.6,237,2.975,316,2.665,321,3.457,322,2.79,323,3.457,324,3.212,326,2.867,327,3.048,328,2.913,329,2.558,330,1.244,331,3.164,332,1.281,363,2.904,364,3.922,375,5.337,458,3.167,465,2.777,466,5.76,474,2.566,478,5.125,482,2.913,558,3.896,563,3.474,564,2.825,565,2.712,566,2.983,567,2.904,580,3.651,595,3.121,603,3.216,813,4.501,900,3.922,901,3.922,902,4.007,903,4.266,904,5.071,905,3.991,943,3.366,944,2.061,952,2.777,962,2.652,992,5.344,999,3.403,1071,2.777,1079,4.307,1080,4.307,1154,3.633,1170,2.301,1171,4.893,1172,4.893,1173,4.893,1174,3.922,1175,3.309,1176,4.893,1177,3.309,1178,4.893,1179,4.893,1180,3.309,1181,3.309,1182,3.309,1183,4.893,1184,6.721,1185,6.721,1186,3.309,1187,6.433,1188,4.893,1189,4.893,1190,4.893,1191,4.893,1192,4.307,1193,4.893,1194,4.893,1195,4.307,1196,3.309,1197,4.893,1198,3.309,1199,4.893,1200,4.893,1201,3.309]],["title/controllers/DatabaseController.html",[46,1.306,1202,3.211]],["body/controllers/DatabaseController.html",[0,0.31,3,0.16,4,0.16,5,0.128,15,0.01,29,0.264,37,0.16,44,0.009,45,0.009,46,1.991,48,1.991,50,3.088,91,1.071,107,2.712,108,2.63,1202,5.752,1203,5.804,1204,6.593,1205,5.399,1206,5.804,1207,6.593]],["title/modules/DatabaseModule.html",[126,1.147,248,2.838]],["body/modules/DatabaseModule.html",[0,0.248,3,0.128,4,0.128,5,0.103,13,1.368,15,0.01,29,0.295,31,2.806,33,1.403,36,3.472,37,0.128,44,0.007,45,0.007,48,2.043,66,1.18,91,0.859,126,1.979,128,2.11,129,2.245,130,2.395,131,2.395,132,2.245,133,3.378,134,2.395,138,3.064,139,2.395,140,2.395,143,2.662,145,2.566,146,2.765,248,5.719,430,4.346,431,3.928,446,4.718,467,4.24,482,2.395,991,2.662,1202,5.541,1205,5.458,1206,4.657,1208,4.657,1209,4.657,1210,5.29,1211,5.29,1212,4.707,1213,4.24,1214,4.707,1215,4.707,1216,4.24,1217,3.928,1218,3.928,1219,4.24]],["title/injectables/DatabaseService.html",[148,0.96,1205,2.838]],["body/injectables/DatabaseService.html",[0,0.181,1,2.749,3,0.093,4,0.093,5,0.075,7,0.364,8,1.276,9,3.242,13,1.412,14,0.39,15,0.01,19,1.654,20,0.8,29,0.276,33,1.022,34,1.194,36,2.529,37,0.093,41,2.017,44,0.006,45,0.006,52,1.449,53,1.917,65,1.022,66,1.153,67,0.834,69,1.022,90,1.331,91,0.626,108,2.532,112,2.685,148,1.213,149,1.449,153,2.179,155,4.291,176,2.014,177,1.869,178,1.869,185,3.861,190,2.247,201,2.781,204,2.186,264,5.113,265,2.399,316,1.836,332,1.492,446,3.919,458,3.967,462,4.713,464,3.586,467,3.087,474,1.836,482,2.874,510,2.399,565,1.368,566,1.449,841,5.624,904,2.399,991,1.938,992,2.529,1021,2.679,1071,2.186,1151,4.378,1152,3.919,1160,2.679,1174,4.378,1205,3.586,1213,3.087,1216,3.087,1220,3.391,1221,6.907,1222,3.391,1223,5.588,1224,5.588,1225,6.348,1226,5.463,1227,4.809,1228,3.852,1229,2.679,1230,5.463,1231,2.861,1232,2.861,1233,2.861,1234,5.087,1235,3.087,1236,3.852,1237,3.391,1238,3.391,1239,3.391,1240,5.463,1241,3.852,1242,5.463,1243,3.852,1244,5.463,1245,3.852,1246,5.463,1247,3.852,1248,3.852,1249,3.852,1250,3.852,1251,3.852,1252,3.8,1253,3.391,1254,3.391,1255,3.391,1256,3.391,1257,3.391,1258,3.391,1259,3.391,1260,3.391,1261,3.391,1262,3.391,1263,3.391,1264,3.391,1265,3.391,1266,3.391,1267,3.391,1268,3.391,1269,3.391,1270,3.391,1271,3.391,1272,3.391,1273,3.852,1274,4.809,1275,3.852,1276,4.809,1277,3.391,1278,3.852,1279,3.852,1280,3.852,1281,3.852,1282,3.852,1283,3.852,1284,3.087,1285,3.852,1286,3.852,1287,3.852]],["title/classes/FileUploadDto.html",[0,0.203,1288,3.211]],["body/classes/FileUploadDto.html",[0,0.347,2,1.253,3,0.147,4,0.147,5,0.167,7,0.576,8,1.726,14,0.747,15,0.01,16,1.046,17,1.387,20,0.768,29,0.252,37,0.147,44,0.008,45,0.008,100,1.318,237,2.226,326,2.948,328,3.135,330,2.291,558,3.457,565,2.625,566,2.779,1033,5.487,1288,5.487,1289,6.505,1290,5.363,1291,6.505,1292,7.39,1293,6.093,1294,6.093,1295,5.363,1296,6.093]],["title/controllers/FilesController.html",[46,1.306,1297,3.211]],["body/controllers/FilesController.html",[0,0.241,3,0.124,4,0.124,5,0.143,7,0.484,14,0.786,15,0.01,16,1.04,17,1.51,20,0.836,29,0.281,37,0.124,44,0.007,45,0.007,46,1.548,48,1.548,50,2.401,52,1.759,53,2.22,65,1.759,66,1.048,67,1.435,69,1.759,70,1.821,86,2.487,89,2.68,90,2.539,91,0.833,99,2.579,100,1.109,103,2.401,104,2.579,111,1.759,123,2.789,316,1.723,392,5.838,464,3.365,951,5.735,952,4.568,1033,5.977,1288,4.924,1291,6.471,1295,4.513,1297,4.924,1298,4.513,1299,4.513,1300,5.126,1301,5.126,1302,5.126,1303,5.838,1304,5.126,1305,5.126,1306,5.126,1307,5.126,1308,5.126,1309,5.126,1310,6.632,1311,5.126,1312,5.126,1313,4.513,1314,5.126,1315,4.109,1316,5.315,1317,5.126,1318,5.126,1319,5.126,1320,5.126,1321,5.126,1322,5.126,1323,5.126,1324,5.126,1325,5.126,1326,5.126,1327,5.126,1328,5.126,1329,5.126]],["title/modules/FilesModule.html",[126,1.147,249,2.838]],["body/modules/FilesModule.html",[0,0.29,3,0.15,4,0.15,5,0.12,15,0.01,29,0.273,37,0.15,44,0.008,45,0.008,48,2.25,91,1.003,126,2.122,128,2.465,129,2.621,130,2.797,131,2.797,132,2.621,133,3.623,134,2.797,138,3.374,139,2.797,140,2.797,249,5.671,1297,5.942,1330,5.438,1331,5.438,1332,6.009,1333,6.178,1334,6.178,1335,6.178]],["title/injectables/FilesService.html",[148,0.96,1332,3.007]],["body/injectables/FilesService.html",[0,0.32,3,0.165,4,0.165,5,0.132,15,0.01,29,0.232,37,0.165,44,0.009,45,0.009,91,1.107,148,1.753,149,2.562,1332,5.492,1336,5.998]],["title/interfaces/IUser.html",[60,1.536,1337,2.454]],["body/interfaces/IUser.html",[1,4.119,3,0.143,4,0.143,5,0.115,7,0.559,8,1.695,9,4.859,14,0.865,15,0.01,16,1.286,29,0.202,34,2.25,37,0.143,44,0.008,45,0.008,60,2.578,67,1.771,79,2.607,458,4.454,474,2.751,482,3.707,1337,3.357,1338,4.115,1339,5.208]],["title/classes/JwtAuthGuard.html",[0,0.203,1340,3.465]],["body/classes/JwtAuthGuard.html",[0,0.223,2,0.975,3,0.183,4,0.115,5,0.092,7,0.448,13,2.029,14,0.716,15,0.01,16,0.671,19,1.136,20,0.892,29,0.275,37,0.115,41,1.983,44,0.007,45,0.007,52,1.671,65,1.877,66,1.119,67,1.531,69,1.671,91,0.77,107,1.95,111,1.877,153,1.891,179,2.221,180,2.478,181,2.3,189,2.951,190,2.591,218,2.814,322,1.732,336,2.76,368,5.671,389,4.174,390,3.298,423,3.112,565,1.684,569,2.579,991,2.386,1152,2.69,1340,5.05,1341,6.638,1342,3.8,1343,6.301,1344,6.301,1345,6.301,1346,4.174,1347,7.104,1348,4.741,1349,6.301,1350,6.6,1351,4.741,1352,6.638,1353,6.301,1354,4.741,1355,7.076,1356,4.741,1357,4.174,1358,4.174,1359,3.8,1360,3.8,1361,5.546,1362,4.741,1363,4.174,1364,4.741,1365,4.741,1366,4.741,1367,4.741,1368,6.301,1369,4.741,1370,6.301,1371,4.741,1372,4.174,1373,6.301,1374,4.741,1375,4.741,1376,4.741,1377,4.741]],["title/classes/JwtStrategy.html",[0,0.203,426,3.211]],["body/classes/JwtStrategy.html",[0,0.25,2,1.094,3,0.129,4,0.129,5,0.103,7,0.503,14,0.687,15,0.01,20,0.856,29,0.289,37,0.129,41,1.308,44,0.007,45,0.007,52,1.802,53,2.259,60,2.8,65,1.802,66,1.074,67,1.47,69,1.412,70,1.89,91,0.864,102,2.061,108,2.123,111,1.412,112,1.741,153,2.71,185,2.582,264,5.466,265,3.315,302,4.265,332,2.061,336,2.976,423,3.493,426,5.044,430,4.424,431,3.952,437,4.685,451,5.98,482,2.409,535,4.459,1152,3.02,1360,4.265,1378,4.685,1379,5.98,1380,5.322,1381,5.322,1382,6.793,1383,5.322,1384,4.685,1385,5.322,1386,5.444,1387,5.444,1388,4.685,1389,5.322,1390,5.322,1391,5.322,1392,5.322,1393,5.322,1394,5.322,1395,5.322,1396,5.322]],["title/injectables/LocalAuthGuard.html",[148,0.96,385,3.211]],["body/injectables/LocalAuthGuard.html",[0,0.312,3,0.161,4,0.161,5,0.129,15,0.01,29,0.265,37,0.161,44,0.009,45,0.009,91,1.079,148,1.727,149,2.498,336,3.408,385,5.777,423,4.36,1342,5.324,1358,5.847,1397,5.847,1398,7.78]],["title/injectables/LocalStrategy.html",[148,0.96,417,3.007]],["body/injectables/LocalStrategy.html",[0,0.255,3,0.132,4,0.132,5,0.106,7,0.514,13,1.955,14,0.697,15,0.01,16,1.185,20,0.868,29,0.28,37,0.132,41,1.337,44,0.008,45,0.008,52,1.828,53,2.283,65,1.828,66,1.089,67,1.491,69,1.443,91,0.884,107,2.238,111,1.443,112,1.78,148,1.529,149,2.047,153,2.171,165,3.748,179,2.549,180,2.845,181,2.64,189,2.549,190,2.238,336,3.019,381,5.217,382,4.362,417,4.792,423,3.572,458,4.46,460,4.791,474,1.829,535,4.523,1357,4.791,1360,4.362,1379,6.065,1384,4.791,1386,4.362,1388,4.791,1399,4.791,1400,5.442,1401,5.442,1402,6.89,1403,5.442,1404,4.791,1405,5.442,1406,5.442,1407,5.442,1408,5.442]],["title/classes/LoginUserDto.html",[0,0.203,393,3.211]],["body/classes/LoginUserDto.html",[0,0.307,2,1.345,3,0.158,4,0.158,5,0.127,15,0.01,29,0.263,37,0.158,41,1.895,44,0.008,45,0.008,54,1.781,100,1.416,336,3.379,340,4.859,384,4.076,393,5.727,394,5.245,458,4.196,465,3.713,474,2.592,1170,4.552,1409,6.789]],["title/classes/Order.html",[0,0.203,1410,2.693]],["body/classes/Order.html",[0,0.147,2,0.643,3,0.076,4,0.076,5,0.061,7,0.296,8,1.096,13,1.82,14,0.899,15,0.01,16,1.222,17,1.951,18,5.342,19,2.088,20,1.08,25,3.648,26,3.68,27,2.657,29,0.214,30,4.742,31,1.765,32,1.702,33,0.83,34,1.455,35,2.553,36,2.054,37,0.136,39,1.702,40,3.648,41,0.769,44,0.005,45,0.005,79,1.793,159,2.664,161,3.769,201,2.056,339,3.343,474,1.893,507,3.918,508,3.918,510,4.177,512,3.551,514,3.697,518,3.253,519,2.508,526,3.081,527,2.924,528,2.786,800,3.265,863,2.55,870,2.39,876,2.55,879,2.944,880,3.196,881,3.196,882,2.55,883,3.83,885,3.83,891,2.362,959,4.183,960,4.183,1059,3.918,1218,2.324,1410,2.924,1411,2.324,1412,4.514,1413,4.514,1414,4.514,1415,4.514,1416,4.958,1417,4.958,1418,4.958,1419,5.633,1420,3.129,1421,3.129,1422,3.129,1423,3.129,1424,3.129,1425,3.129,1426,3.129,1427,3.129,1428,3.129,1429,3.129,1430,3.129,1431,3.129,1432,3.129,1433,3.129,1434,3.129,1435,3.129,1436,3.129,1437,3.129,1438,3.129,1439,3.129,1440,3.129,1441,2.508,1442,2.324,1443,2.755]],["title/interfaces/OrderSummary.html",[716,3.007,1337,2.454]],["body/interfaces/OrderSummary.html",[3,0.145,4,0.145,5,0.116,7,0.566,8,1.709,14,0.868,15,0.01,37,0.145,44,0.008,45,0.008,161,4.263,716,5.09,717,4.806,770,6.592,772,4.667,780,7.24,783,7.24,785,7.24,787,7.24,1337,3.403,1338,4.171,1444,5.279]],["title/controllers/OrdersController.html",[46,1.306,1445,3.211]],["body/controllers/OrdersController.html",[0,0.165,3,0.085,4,0.085,5,0.068,7,0.332,13,2.107,14,0.743,15,0.01,16,1.195,17,1.672,20,0.925,29,0.281,37,0.085,44,0.006,45,0.006,46,1.061,48,1.061,50,1.646,52,1.357,53,2.488,54,1.392,57,2.406,60,2.692,61,2.307,62,2.574,65,1.948,66,1.161,67,1.589,69,1.948,70,2.352,73,2.241,74,2.574,83,2.445,84,3.562,86,2.481,87,3.461,88,1.912,89,1.837,91,0.571,94,1.361,96,2.48,97,3.414,98,1.912,99,1.769,100,0.761,101,1.837,102,1.361,103,1.646,104,1.769,107,1.446,108,1.402,109,1.912,110,1.912,111,1.948,112,2.166,115,2.674,118,1.995,119,3.422,152,2.041,168,1.705,170,2.54,173,1.995,319,4.205,352,3.461,353,3.461,633,2.817,653,1.995,654,1.995,660,3.422,720,2.086,804,2.241,955,4.82,970,4.774,977,3.357,978,3.357,1064,2.817,1112,4.125,1113,4.125,1410,2.189,1445,3.798,1446,3.094,1447,2.817,1448,5.308,1449,5.308,1450,3.094,1451,3.515,1452,2.445,1453,3.515,1454,3.515,1455,3.036,1456,3.515,1457,5.402,1458,3.515,1459,3.094,1460,5.402,1461,3.515,1462,3.515,1463,3.094,1464,5.402,1465,5.115,1466,3.515,1467,3.515,1468,1.491,1469,3.958,1470,3.094,1471,4.099,1472,2.189,1473,2.086,1474,4.503,1475,2.61,1476,3.515,1477,3.515,1478,3.515,1479,2.445,1480,2.445,1481,3.515,1482,3.515,1483,3.515,1484,3.515,1485,3.515,1486,3.515]],["title/modules/OrdersModule.html",[126,1.147,250,2.693]],["body/modules/OrdersModule.html",[0,0.263,3,0.136,4,0.136,5,0.109,15,0.01,29,0.288,31,2.107,33,1.486,37,0.136,44,0.008,45,0.008,48,2.119,66,0.886,91,0.91,126,2.032,128,2.235,129,2.377,130,2.537,131,2.537,132,2.377,133,3.469,134,3.469,138,3.177,139,2.537,140,2.537,143,2.819,145,3.404,146,2.929,246,5.256,250,5.439,1410,3.49,1442,5.211,1445,5.69,1469,5.834,1470,4.933,1487,4.933,1488,4.933,1489,5.603,1490,4.933,1491,5.603,1492,5.603,1493,4.933,1494,5.603,1495,5.603]],["title/injectables/OrdersService.html",[148,0.96,1469,2.838]],["body/injectables/OrdersService.html",[0,0.117,3,0.06,4,0.06,5,0.048,7,0.236,13,1.741,14,0.706,15,0.01,16,1.133,19,1.172,20,0.88,29,0.278,33,0.663,34,1.223,37,0.06,41,2.1,44,0.004,45,0.004,52,1.047,53,2.458,54,1.074,57,1.574,60,2.392,65,1.852,66,1.104,67,1.511,69,1.786,70,2.48,79,1.769,90,1.69,91,0.406,92,1.483,94,0.967,96,2.012,102,0.967,108,0.997,111,1.852,112,2.455,114,2.147,148,0.876,149,0.939,152,1.574,153,1.574,155,2.904,159,1.418,168,1.914,170,2.203,173,2.239,175,1.483,176,1.306,177,1.212,178,1.212,179,1.17,180,1.306,181,1.212,182,1.737,183,2.199,185,2.935,189,3.154,190,3.026,192,3.163,293,2.458,339,2.903,461,1.257,474,0.84,505,2.239,507,3.865,508,2.745,518,1.212,524,1.306,526,1.64,527,1.556,528,1.483,537,3.298,563,1.094,712,2.199,716,1.737,720,1.483,728,2.199,729,2.199,733,2.199,734,2.199,735,2.199,740,4.891,750,4.306,772,1.418,800,1.737,804,1.729,864,1.483,870,1.06,879,1.306,955,4.222,958,2.199,959,3.632,960,3.632,982,1.855,983,2.002,1059,1.737,1410,4.988,1412,2.002,1413,2.002,1414,3.92,1415,3.92,1416,2.199,1417,2.199,1418,2.199,1441,2.002,1447,2.002,1448,3.474,1449,3.474,1450,3.474,1457,4.856,1459,3.474,1460,4.856,1463,3.474,1464,4.856,1468,1.674,1469,2.59,1471,3.163,1474,3.474,1475,1.855,1493,2.199,1496,2.199,1497,3.946,1498,2.498,1499,4.891,1500,2.498,1501,3.946,1502,2.498,1503,2.342,1504,2.498,1505,2.498,1506,3.946,1507,2.498,1508,2.498,1509,2.498,1510,2.498,1511,1.556,1512,1.306,1513,1.483,1514,2.498,1515,2.002,1516,2.199,1517,2.002,1518,2.002,1519,2.498,1520,2.498,1521,2.498,1522,2.498,1523,2.498,1524,2.498,1525,3.474,1526,2.199,1527,2.498,1528,2.498,1529,2.498,1530,2.498,1531,2.498,1532,2.498,1533,4.891,1534,1.556,1535,3.046,1536,1.556,1537,1.556,1538,3.046,1539,2.458,1540,3.769,1541,2.458,1542,1.64,1543,1.483,1544,2.458,1545,2.498,1546,2.458,1547,1.556,1548,1.556,1549,5.557,1550,1.556,1551,1.64,1552,1.64,1553,1.556,1554,1.556,1555,2.458,1556,2.498,1557,1.556,1558,1.556,1559,3.946,1560,5.557,1561,3.946,1562,2.498,1563,2.498,1564,2.498,1565,4.891,1566,4.891,1567,3.946,1568,3.946,1569,5.557,1570,2.498,1571,2.498,1572,3.946,1573,2.498,1574,2.498,1575,2.498,1576,3.474,1577,2.498,1578,3.946,1579,2.498]],["title/classes/Permission.html",[0,0.203,991,2.176]],["body/classes/Permission.html",[0,0.212,2,0.928,3,0.109,4,0.109,5,0.088,7,0.427,8,1.424,14,0.896,15,0.01,16,1.21,17,1.946,19,1.082,20,1.077,25,3.756,29,0.208,30,4.846,31,2.293,32,2.456,33,1.198,34,1.89,35,3.317,37,0.167,39,2.456,40,3.756,41,1.109,44,0.007,45,0.007,66,1.092,79,2.198,126,1.831,474,2.32,512,3.918,863,3.126,870,2.929,876,3.126,879,3.609,880,3.918,881,3.918,882,3.126,883,4.329,885,4.329,891,3.068,988,5.127,989,4.802,991,3.068,1215,3.14,1231,3.353,1580,3.353,1581,4.515,1582,4.515,1583,4.515,1584,4.515,1585,4.515,1586,4.515,1587,4.515,1588,4.515,1589,4.515,1590,4.515,1591,4.515,1592,3.975]],["title/controllers/PermissionsController.html",[46,1.306,1593,3.211]],["body/controllers/PermissionsController.html",[0,0.172,3,0.089,4,0.089,5,0.071,7,0.346,13,2.211,14,0.776,15,0.01,16,1.21,17,1.628,20,0.901,27,1.677,29,0.273,37,0.089,44,0.006,45,0.006,46,1.105,48,1.105,50,1.715,52,1.397,53,2.567,54,1.433,56,2.04,57,2.462,60,2.884,62,2.65,65,1.897,66,1.177,67,1.547,69,1.897,70,2.54,73,2.308,74,2.65,84,2.555,86,2.555,87,2.753,88,1.991,89,1.913,90,1.265,91,0.595,94,1.418,96,1.506,97,3.274,98,1.991,99,1.842,100,0.792,101,1.913,102,1.418,103,1.715,104,1.842,107,1.506,108,1.46,109,2.866,110,1.991,111,1.897,112,2.339,115,3.225,118,2.077,119,2.989,122,2.173,123,2.866,124,2.173,152,2.101,168,1.776,170,2.435,171,1.913,173,2.077,316,1.77,331,2.101,332,2.04,352,2.753,353,2.753,362,3.281,566,1.981,653,2.077,654,2.077,660,2.077,804,2.308,813,2.989,823,4.222,985,4.888,1032,3.664,1152,2.077,1252,4.974,1455,3.126,1468,2.618,1472,2.28,1593,3.911,1594,3.223,1595,3.223,1596,6.555,1597,3.661,1598,3.661,1599,3.661,1600,3.661,1601,5.268,1602,4.222,1603,3.664,1604,3.458,1605,3.911,1606,3.911,1607,3.911,1608,3.661,1609,5.268,1610,3.661,1611,3.661,1612,5.268,1613,3.661,1614,3.661,1615,3.661,1616,3.661,1617,5.462,1618,3.661,1619,3.661,1620,3.843,1621,3.223,1622,4.222,1623,3.661,1624,3.661,1625,3.661,1626,2.718,1627,3.223,1628,3.661,1629,3.661,1630,3.661,1631,3.661]],["title/modules/PermissionsModule.html",[126,1.147,251,2.693]],["body/modules/PermissionsModule.html",[0,0.269,3,0.139,4,0.139,5,0.111,15,0.01,29,0.289,31,2.153,33,1.518,37,0.139,44,0.008,45,0.008,48,2.147,66,0.905,91,0.93,126,2.052,128,2.284,129,2.429,130,2.592,131,2.592,132,2.429,133,3.503,134,3.503,138,3.22,139,2.592,140,2.592,143,2.88,145,2.777,146,2.992,251,5.358,255,3.248,991,2.88,1215,4.947,1219,4.588,1593,5.745,1620,5.551,1621,5.039,1632,5.039,1633,5.039,1634,5.039,1635,5.724,1636,5.724,1637,5.039,1638,5.039]],["title/injectables/PermissionsService.html",[148,0.96,1620,2.693]],["body/injectables/PermissionsService.html",[0,0.157,3,0.081,4,0.081,5,0.065,7,0.316,13,2.022,14,0.755,15,0.01,16,1.194,20,0.94,29,0.267,33,0.888,34,1.037,37,0.081,41,1.834,44,0.005,45,0.005,52,1.309,53,2.589,54,1.343,56,1.911,57,1.968,60,2.825,65,1.98,66,1.18,67,1.615,69,1.914,70,2.563,79,2.49,90,2.025,91,0.544,94,1.296,96,1.376,102,1.296,111,1.914,112,2.557,114,3.188,148,1.095,149,1.258,152,1.968,153,1.968,155,3.381,165,2.684,170,2.256,171,2.579,173,2.8,175,1.986,176,1.749,177,1.623,178,1.623,179,1.567,180,1.749,181,1.623,185,1.623,189,1.567,190,1.376,293,3.073,461,1.684,474,1.97,563,1.466,772,1.899,804,2.162,863,1.515,864,3.479,870,1.42,876,1.515,879,1.749,882,1.515,985,4.737,988,2.485,989,2.328,991,3.47,1152,1.899,1224,4.344,1231,2.485,1239,2.946,1468,2.094,1503,2.929,1511,2.084,1512,1.749,1513,1.986,1534,2.084,1535,3.651,1536,2.084,1537,2.084,1538,4.029,1539,3.073,1540,4.495,1541,3.073,1542,2.197,1543,1.986,1544,3.073,1546,3.073,1547,2.084,1548,2.084,1550,2.084,1551,2.197,1552,2.197,1553,2.084,1554,2.084,1555,3.651,1557,2.084,1558,2.084,1595,4.344,1617,5.327,1620,3.073,1622,3.954,1637,2.946,1639,2.946,1640,4.934,1641,3.346,1642,3.346,1643,4.934,1644,3.346,1645,3.346,1646,3.346,1647,3.239,1648,3.346,1649,3.346,1650,3.346,1651,4.934,1652,3.346,1653,3.346,1654,3.346,1655,3.346,1656,3.346,1657,3.346,1658,3.346,1659,3.346,1660,3.346,1661,3.346,1662,4.934,1663,3.346,1664,3.346]],["title/classes/Product.html",[0,0.203,518,2.098]],["body/classes/Product.html",[0,0.168,2,0.737,3,0.087,4,0.087,5,0.07,7,0.339,8,1.212,14,0.897,15,0.01,16,1.233,17,1.961,18,4.649,19,2.053,20,1.085,25,4.023,26,3.865,27,2.573,29,0.208,30,4.797,31,1.952,32,1.951,33,0.951,34,1.609,35,2.823,37,0.148,39,1.951,40,3.637,41,0.881,44,0.006,45,0.006,66,0.964,79,1.942,161,3.131,316,2.05,474,2.05,510,4.164,512,3.461,514,3.407,518,2.518,800,4.242,836,4.389,839,3.157,863,2.761,870,2.588,876,2.761,879,3.188,880,3.461,881,3.461,882,2.761,883,4.023,885,4.023,891,2.611,1010,5.369,1012,5.369,1013,5.369,1014,5.369,1015,5.369,1016,4.888,1017,5.369,1665,2.663,1666,3.586,1667,3.586,1668,3.586,1669,3.586,1670,3.586,1671,3.586,1672,3.586,1673,3.586,1674,3.586,1675,3.586,1676,3.586,1677,3.586,1678,3.586,1679,3.586,1680,3.586,1681,4.569,1682,3.586,1683,3.586,1684,3.586,1685,3.586,1686,3.586,1687,2.874,1688,3.586,1689,2.663,1690,3.157]],["title/injectables/ProductExistsRule.html",[148,0.96,259,3.007]],["body/injectables/ProductExistsRule.html",[0,0.315,3,0.127,4,0.127,5,0.101,7,0.494,14,0.75,15,0.01,16,1.108,19,1.609,20,0.935,29,0.267,37,0.127,44,0.007,45,0.007,52,1.781,53,2.364,65,1.968,66,1.238,67,1.605,69,1.781,70,1.857,91,0.849,107,2.15,111,1.968,112,1.71,148,1.491,149,1.966,153,2.085,170,2.196,179,2.448,181,2.536,204,2.966,206,4.19,259,4.671,330,1.966,332,2.6,533,4.19,534,5.912,535,4.408,538,4.602,539,5.912,540,6.893,541,4.602,542,4.602,543,5.912,544,4.602,545,5.912,546,5.912,548,4.19,549,3.636,550,4.602,552,4.19,565,1.857,572,2.732,573,2.732,693,4.509,1127,3.431,1691,6.893,1692,5.228,1693,5.228,1694,5.228,1695,5.228,1696,3.636]],["title/controllers/ProductsController.html",[46,1.306,1697,3.211]],["body/controllers/ProductsController.html",[0,0.18,3,0.093,4,0.093,5,0.074,7,0.361,13,2.225,14,0.735,15,0.01,16,1.185,17,1.656,20,0.916,29,0.286,37,0.093,44,0.006,45,0.006,46,1.155,48,1.155,50,1.791,52,1.442,53,2.528,54,1.479,56,2.105,57,2.522,60,2.911,61,2.51,62,2.735,65,1.929,66,1.15,67,1.574,69,1.929,70,2.246,73,2.381,74,2.735,76,2.51,77,2.84,79,2.406,80,2.17,83,2.66,84,2.637,86,2.637,87,2.841,88,2.081,89,1.999,90,1.321,91,0.621,94,1.481,96,1.573,97,3.34,98,2.081,99,1.924,100,0.828,101,1.999,102,1.481,103,1.791,104,1.924,107,1.573,108,1.526,109,2.081,110,2.081,111,1.929,112,2.252,115,2.841,118,2.17,119,2.17,122,2.27,123,2.081,124,2.27,152,2.168,165,2.957,352,2.841,353,2.841,388,3.752,518,1.855,572,4.284,573,4.284,645,2.66,653,2.17,654,2.17,660,2.17,693,3.439,720,2.27,804,2.381,812,3.065,1007,4.96,1452,2.66,1455,3.226,1468,1.623,1472,2.382,1473,2.27,1479,2.66,1480,2.66,1647,2.51,1697,4.036,1698,3.367,1699,3.367,1700,3.367,1701,3.825,1702,3.065,1703,3.825,1704,3.825,1705,3.825,1706,5.525,1707,3.825,1708,3.367,1709,3.367,1710,4.356,1711,3.065,1712,3.825,1713,3.825,1714,3.825,1715,3.825,1716,3.825,1717,3.825,1718,3.825]],["title/modules/ProductsModule.html",[126,1.147,252,2.566]],["body/modules/ProductsModule.html",[0,0.265,3,0.137,4,0.137,5,0.11,15,0.01,29,0.293,31,2.125,33,1.499,37,0.137,44,0.008,45,0.008,48,2.13,66,0.893,91,0.918,126,2.04,128,2.254,129,2.398,130,2.558,131,2.558,132,2.398,133,3.483,134,3.483,138,3.194,139,2.558,140,2.558,143,2.843,145,2.741,146,2.954,247,3.52,252,5.091,254,3.52,518,2.741,693,4.84,1689,5.239,1697,5.712,1709,4.975,1711,4.529,1719,4.975,1720,4.975,1721,4.975,1722,5.651,1723,5.651,1724,5.651,1725,5.651,1726,5.651,1727,4.975]],["title/injectables/ProductsService.html",[148,0.96,693,2.352]],["body/injectables/ProductsService.html",[0,0.125,3,0.064,4,0.064,5,0.052,7,0.251,8,0.968,13,1.894,14,0.758,15,0.01,16,1.218,20,0.962,29,0.26,33,0.705,34,0.824,37,0.064,41,2.035,44,0.005,45,0.005,52,1.099,53,2.564,54,1.386,56,1.604,57,2.031,60,2.661,65,1.943,66,1.184,67,1.585,69,1.943,70,2.533,76,2.72,79,2.43,80,2.351,90,1.759,91,0.432,94,1.029,96,1.093,102,1.029,111,1.892,112,2.6,114,2.77,148,0.92,149,1,152,1.653,153,1.653,155,3.005,165,2.254,168,2.01,170,1.355,175,1.578,176,1.389,177,1.29,178,1.29,179,1.245,180,1.389,181,1.29,185,3.023,189,3.092,190,2.715,204,1.509,215,1.974,218,1.578,293,2.581,332,1.029,461,1.338,474,1.711,518,3.634,527,3.171,528,3.022,535,3.342,557,1.656,563,1.815,693,2.254,772,1.509,804,1.815,820,4.112,836,3.699,841,4.903,843,5.526,856,2.131,863,1.204,864,3.022,866,3.647,870,1.128,871,3.647,876,1.204,882,1.204,1007,4.334,1011,5.812,1016,2.131,1468,1.758,1503,2.459,1511,1.656,1512,1.389,1513,1.578,1534,1.656,1535,3.171,1536,1.656,1537,1.656,1538,3.171,1539,2.581,1540,3.581,1541,2.581,1542,1.745,1543,1.578,1544,2.581,1546,2.581,1547,1.656,1548,1.656,1550,1.656,1551,1.745,1552,1.745,1553,1.656,1554,1.656,1555,2.581,1557,1.656,1558,1.656,1687,2.131,1700,3.647,1706,4.96,1710,3.321,1711,2.131,1728,2.34,1729,4.143,1730,4.143,1731,4.143,1732,2.658,1733,4.143,1734,4.143,1735,2.658,1736,2.658,1737,4.143,1738,2.658,1739,4.143,1740,2.658,1741,4.143,1742,2.658,1743,4.143,1744,2.658,1745,2.658,1746,2.658,1747,2.658,1748,2.658,1749,2.658,1750,2.658,1751,2.658,1752,5.749,1753,5.749,1754,4.143,1755,5.092,1756,2.658,1757,2.658,1758,4.143,1759,2.658,1760,2.658,1761,2.658,1762,4.143,1763,4.143,1764,4.143,1765,2.658,1766,2.658,1767,2.658,1768,2.658,1769,2.658,1770,2.658,1771,2.658]],["title/classes/Promotion.html",[0,0.203,520,2.838]],["body/classes/Promotion.html",[0,0.169,2,0.738,3,0.087,4,0.087,5,0.07,7,0.339,8,1.213,14,0.898,15,0.01,16,1.158,17,1.941,19,2.054,20,1.074,25,4.25,27,2.68,29,0.208,30,4.758,31,1.954,32,1.954,33,0.953,34,1.611,37,0.148,39,1.954,40,3.321,41,0.882,44,0.006,45,0.006,79,1.943,161,3.659,201,2.276,316,2.051,317,1.877,319,1.877,322,1.312,339,3.623,474,2.051,510,3.236,512,3.464,520,4.007,524,1.877,559,2.948,619,1.742,863,2.763,870,2.59,876,2.763,879,3.19,880,3.464,881,3.464,882,2.763,883,4.579,885,4.025,891,3.722,970,2.132,1058,4.892,1059,4.246,1060,4.892,1061,4.892,1062,5.373,1063,4.892,1064,4.892,1065,2.667,1066,2.667,1070,2.667,1071,2.038,1084,4.533,1110,4.533,1122,3.161,1123,3.161,1124,3.161,1125,3.161,1516,4.573,1681,3.161,1772,2.667,1773,3.591,1774,3.591,1775,3.591,1776,3.591,1777,3.591,1778,3.591,1779,3.591,1780,3.591,1781,3.591,1782,5.195,1783,3.591,1784,3.591,1785,3.591,1786,3.591,1787,3.591,1788,3.591,1789,3.591,1790,3.591,1791,2.878,1792,2.667,1793,3.161]],["title/controllers/PromotionsController.html",[46,1.306,1794,3.211]],["body/controllers/PromotionsController.html",[0,0.176,3,0.091,4,0.091,5,0.073,7,0.355,13,2.207,14,0.731,15,0.01,16,1.181,17,1.645,20,0.91,29,0.282,37,0.091,44,0.006,45,0.006,46,1.135,48,1.135,50,1.761,52,1.424,53,2.577,54,1.461,56,2.079,57,2.498,60,2.901,61,2.468,62,2.701,65,1.916,66,1.142,67,1.563,69,1.916,70,2.566,73,2.352,74,2.701,76,2.468,77,2.792,79,2.392,80,2.133,83,2.615,84,2.605,86,2.605,87,2.806,88,2.045,89,1.965,90,1.299,91,0.611,94,1.456,96,1.546,97,3.314,98,2.045,99,1.892,100,0.813,101,1.965,102,1.456,103,1.761,104,1.892,107,1.546,108,1.5,109,2.045,110,2.045,111,1.916,112,2.363,115,2.806,118,2.133,119,2.133,122,2.231,123,2.045,124,2.231,152,2.142,317,4.268,341,4.68,342,3.734,352,3.571,353,3.571,388,3.717,461,1.892,619,3.961,628,5.36,645,2.615,653,2.133,654,2.133,660,2.133,690,3.901,720,2.231,804,2.352,812,3.013,1452,2.615,1455,3.187,1468,1.595,1472,2.342,1473,2.231,1479,2.615,1480,2.615,1647,2.468,1702,3.013,1794,3.987,1795,3.309,1796,3.309,1797,3.309,1798,3.759,1799,3.759,1800,3.759,1801,3.759,1802,5.5,1803,3.759,1804,3.309,1805,3.759,1806,3.759,1807,3.759,1808,3.759,1809,3.759,1810,3.759,1811,3.759]],["title/modules/PromotionsModule.html",[126,1.147,253,2.693]],["body/modules/PromotionsModule.html",[0,0.269,3,0.139,4,0.139,5,0.111,15,0.01,29,0.289,31,2.153,33,1.518,37,0.139,44,0.008,45,0.008,48,2.147,66,0.905,91,0.93,126,2.052,128,2.284,129,2.429,130,2.592,131,2.592,132,2.429,133,3.503,134,3.503,138,3.22,139,2.592,140,2.592,143,2.88,145,2.777,146,2.992,250,3.565,253,5.358,520,3.757,690,5.551,1792,5.281,1794,5.745,1804,5.039,1812,5.039,1813,5.039,1814,5.039,1815,5.724,1816,5.724,1817,5.039,1818,5.724,1819,5.724]],["title/injectables/PromotionsService.html",[148,0.96,690,2.693]],["body/injectables/PromotionsService.html",[0,0.122,3,0.063,4,0.063,5,0.051,7,0.246,13,1.883,14,0.736,15,0.01,16,1.161,20,0.918,29,0.254,33,0.691,34,0.808,37,0.063,41,1.984,44,0.004,45,0.004,52,1.082,53,2.508,54,1.11,56,1.58,57,1.628,60,2.646,65,1.932,66,1.151,67,1.576,69,1.879,70,2.431,79,2.179,90,1.737,91,0.423,94,1.009,96,1.072,102,1.009,111,1.879,112,2.558,114,2.735,148,0.905,149,0.98,152,1.628,153,1.628,155,2.973,159,2.853,161,3.318,165,1.418,170,2.238,171,2.132,173,2.315,176,1.362,177,1.264,178,1.264,179,1.221,180,1.362,181,1.264,185,2.759,189,3.489,190,3.122,201,1.142,293,2.541,339,4.643,341,4.263,342,2.838,461,1.311,474,1.69,520,5.3,524,1.362,563,1.142,690,2.541,770,5.837,772,1.479,804,1.787,857,3.591,863,1.18,864,2.984,870,1.106,876,1.18,882,1.18,883,1.418,891,2.053,1048,4.029,1058,3.27,1059,3.956,1060,4.558,1061,4.558,1063,4.558,1084,1.935,1110,1.935,1468,1.731,1503,2.421,1511,1.623,1512,1.362,1513,1.547,1534,1.623,1535,3.131,1536,1.623,1537,1.623,1538,3.543,1539,2.541,1540,4.078,1541,2.541,1542,1.711,1543,1.547,1544,2.541,1546,2.541,1547,1.623,1548,1.623,1550,1.623,1551,1.711,1552,1.711,1553,1.623,1554,1.623,1555,2.541,1557,1.623,1558,1.623,1647,2.678,1791,2.089,1797,3.591,1802,5.065,1817,2.294,1820,2.294,1821,4.08,1822,4.08,1823,4.08,1824,2.606,1825,2.606,1826,4.08,1827,2.606,1828,2.606,1829,2.606,1830,2.606,1831,2.606,1832,4.08,1833,2.606,1834,3.591,1835,4.08,1836,2.606,1837,2.606,1838,2.606,1839,2.606,1840,6.548,1841,4.08,1842,4.08,1843,5.027,1844,4.08,1845,2.606,1846,2.606,1847,2.606,1848,2.606,1849,5.027,1850,2.606,1851,4.08,1852,4.08,1853,2.606,1854,2.606,1855,4.08,1856,2.606,1857,2.606,1858,2.606,1859,2.606,1860,2.606,1861,2.606,1862,4.08]],["title/classes/QueryDto.html",[0,0.203,1863,3.211]],["body/classes/QueryDto.html",[0,0.325,2,1.128,3,0.133,4,0.133,5,0.106,7,0.518,8,1.617,14,0.767,15,0.01,16,1.24,17,1.249,20,0.691,27,1.747,29,0.236,37,0.133,44,0.008,45,0.008,100,1.187,237,2.005,316,2.328,321,3.136,322,2.531,323,3.136,326,2.763,329,3.62,330,2.064,331,2.763,332,2.682,362,4.314,595,3.36,943,3.244,1029,5.143,1032,4.817,1455,4.505,1468,3.382,1472,3.418,1602,5.551,1603,4.817,1604,4.546,1605,5.143,1606,5.143,1607,5.143,1626,5.143,1863,5.143,1864,4.83,1865,5.487,1866,6.097,1867,6.097,1868,5.551,1869,5.551,1870,6.097,1871,6.097,1872,5.487,1873,5.487,1874,4.83]],["title/classes/RegisterUserDto.html",[0,0.203,373,3.007]],["body/classes/RegisterUserDto.html",[0,0.303,2,1.326,3,0.156,4,0.156,5,0.125,9,4.538,15,0.01,29,0.261,37,0.156,41,1.879,44,0.008,45,0.008,54,1.755,100,1.395,336,3.349,340,4.788,373,5.318,383,4.788,384,4.017,458,4.159,465,3.659,474,2.569,1170,4.485,1409,6.73]],["title/classes/RemoveCartItemsDto.html",[0,0.203,637,3.211]],["body/classes/RemoveCartItemsDto.html",[0,0.334,2,1.177,3,0.139,4,0.139,5,0.111,7,0.541,8,1.661,14,0.818,15,0.01,16,1.006,17,1.303,19,1.371,20,0.721,27,2.264,29,0.264,37,0.139,44,0.008,45,0.008,56,2.217,100,1.239,237,2.827,314,3.565,322,2.599,326,2.837,327,3.565,328,3.018,330,2.153,331,2.284,505,4.391,559,4.036,564,2.777,565,2.875,566,2.675,569,3.869,595,2.777,599,3.398,603,2.681,637,5.281,714,6.201,715,5.039,1087,7.124,1875,6.261,1876,5.039,1877,6.261,1878,5.724,1879,5.724,1880,5.724]],["title/interfaces/Response.html",[359,2.838,1337,2.454]],["body/interfaces/Response.html",[3,0.152,4,0.152,5,0.122,7,0.592,8,1.755,14,0.844,15,0.01,16,1.226,37,0.152,44,0.008,45,0.008,161,3.771,232,6.691,237,3.05,359,4.933,464,5.48,943,3.771,1337,3.555,1338,4.358,1881,5.516,1882,6.691]],["title/classes/Review.html",[0,0.203,1883,3.007]],["body/classes/Review.html",[0,0.195,2,0.855,3,0.101,4,0.101,5,0.081,7,0.393,8,1.347,13,1.847,14,0.896,15,0.01,16,1.062,17,1.918,19,1.907,20,1.062,25,4.223,26,3.734,27,2.471,29,0.244,30,4.756,31,2.168,32,2.263,33,1.104,34,1.788,35,3.137,36,2.731,37,0.16,39,2.263,40,4.482,41,1.022,44,0.006,45,0.006,79,2.107,161,3.346,474,2.224,512,3.755,514,4.689,518,3.466,519,3.335,563,2.526,597,4.01,598,4.01,863,2.996,870,2.808,876,2.996,879,3.459,880,3.755,881,3.755,882,2.996,883,4.223,885,4.223,891,2.901,1131,5.825,1132,5.825,1142,4.621,1218,3.09,1727,3.663,1883,4.01,1884,3.09,1885,4.161,1886,4.161,1887,4.161,1888,4.161,1889,4.161,1890,4.161,1891,4.161,1892,4.161,1893,4.161,1894,4.161,1895,4.161,1896,3.335,1897,3.09,1898,3.663]],["title/controllers/ReviewsController.html",[46,1.306,1899,3.211]],["body/controllers/ReviewsController.html",[0,0.182,3,0.094,4,0.094,5,0.075,7,0.367,13,2.229,14,0.739,15,0.01,16,1.188,17,1.665,20,0.921,29,0.284,37,0.094,44,0.006,45,0.006,46,1.172,48,1.172,50,1.817,52,1.456,53,2.448,54,1.494,56,2.126,57,2.542,60,2.92,62,2.763,65,1.94,66,1.156,67,1.582,69,1.94,70,2.264,73,2.406,74,2.763,76,2.547,79,2.206,84,2.664,86,2.664,87,2.87,88,2.111,89,2.028,90,1.341,91,0.63,94,1.503,96,1.596,97,3.362,98,2.111,99,1.952,100,0.84,101,2.028,102,1.503,103,1.817,104,1.952,107,1.596,108,1.548,109,2.987,110,2.111,111,1.94,112,2.084,115,3.331,118,2.202,119,3.116,122,2.303,123,2.987,124,2.303,152,2.191,170,1.796,173,2.202,352,2.87,353,2.87,388,3.259,619,3.683,645,2.699,653,2.202,654,2.202,660,2.202,720,2.303,804,2.406,813,3.116,952,4.665,1128,4.983,1452,2.699,1455,3.259,1468,1.646,1472,2.417,1473,2.303,1479,2.699,1480,2.699,1647,2.547,1702,3.11,1899,4.078,1900,3.416,1901,3.11,1902,3.416,1903,3.881,1904,3.881,1905,3.881,1906,3.881,1907,3.881,1908,3.881,1909,3.881,1910,5.546,1911,3.881,1912,3.881,1913,4.183,1914,3.416,1915,4.401,1916,3.881,1917,3.881,1918,3.881,1919,3.881,1920,3.881,1921,3.881,1922,3.881,1923,3.881]],["title/modules/ReviewsModule.html",[126,1.147,254,2.693]],["body/modules/ReviewsModule.html",[0,0.262,3,0.135,4,0.135,5,0.108,15,0.01,29,0.288,31,2.098,33,1.48,37,0.135,44,0.008,45,0.008,48,2.113,66,0.882,91,0.906,126,2.029,128,2.226,129,2.367,130,2.526,131,2.526,132,2.367,133,3.463,134,3.463,138,3.169,139,2.526,140,2.526,143,2.807,145,3.396,146,2.916,252,5.003,254,5.435,680,4.912,1883,3.881,1897,5.197,1899,5.679,1913,5.831,1914,4.912,1924,4.912,1925,4.912,1926,5.58,1927,4.912,1928,5.58,1929,5.58,1930,4.912,1931,5.58]],["title/injectables/ReviewsService.html",[148,0.96,1913,2.838]],["body/injectables/ReviewsService.html",[0,0.149,3,0.077,4,0.077,5,0.062,7,0.3,13,2.061,14,0.742,15,0.01,16,1.184,20,0.925,29,0.263,33,0.843,34,0.985,37,0.077,41,1.959,44,0.005,45,0.005,52,1.259,53,2.557,54,1.292,56,1.839,57,1.894,60,2.79,65,1.947,66,1.16,67,1.588,69,1.878,70,2.516,76,3.117,79,2.5,80,2.695,90,1.964,91,0.516,94,1.231,96,1.307,102,1.231,111,1.878,112,2.569,114,3.672,148,1.054,149,1.195,152,1.894,153,1.894,155,3.297,165,2.583,176,1.661,177,1.542,178,1.542,185,2.304,189,2.224,190,1.953,201,1.392,293,2.958,461,1.599,474,1.911,518,3.275,557,4.204,563,2.08,565,1.129,572,1.661,573,2.482,619,1.542,692,5.005,693,3.431,713,2.547,772,1.803,804,2.08,863,1.439,864,3.374,870,1.348,876,1.439,882,1.439,952,1.803,969,2.21,1127,2.086,1128,4.648,1468,2.015,1503,2.818,1511,1.979,1512,1.661,1513,1.886,1534,1.979,1535,3.541,1536,1.979,1537,1.979,1538,3.928,1539,2.958,1540,4.411,1541,2.958,1542,2.086,1543,2.818,1544,2.958,1546,2.958,1547,1.979,1548,1.979,1550,1.979,1551,2.086,1552,2.086,1553,1.979,1554,1.979,1555,2.958,1557,1.979,1558,1.979,1576,4.18,1647,3.117,1696,2.21,1883,3.303,1896,2.547,1901,2.547,1902,4.18,1910,5.248,1913,3.117,1915,3.806,1930,2.798,1932,2.798,1933,4.749,1934,3.178,1935,3.178,1936,4.749,1937,3.178,1938,3.178,1939,3.178,1940,4.749,1941,3.178,1942,3.178,1943,3.178,1944,3.178,1945,3.178,1946,3.178,1947,4.749,1948,3.178,1949,2.547,1950,2.798,1951,3.178,1952,3.178,1953,3.178,1954,3.178,1955,3.178,1956,4.749,1957,3.178,1958,3.178,1959,3.178,1960,4.749,1961,3.178,1962,3.178,1963,3.178,1964,3.178]],["title/classes/Role.html",[0,0.203,482,1.958]],["body/classes/Role.html",[0,0.207,2,0.908,3,0.107,4,0.107,5,0.086,7,0.417,8,1.403,14,0.896,15,0.01,16,1.144,17,1.939,19,1.058,20,1.073,25,3.986,26,3.14,29,0.233,30,4.822,31,2.259,32,2.403,33,1.172,34,1.862,35,3.268,37,0.165,39,2.403,40,3.986,41,1.085,44,0.007,45,0.007,66,1.079,79,2.174,316,2.294,474,2.294,482,2.72,512,3.874,514,3.943,863,3.091,870,2.897,876,3.091,879,3.568,880,3.874,881,3.874,882,3.091,883,4.301,885,4.301,891,3.687,991,3.435,1151,5.472,1152,3.874,1212,3.072,1216,3.54,1219,3.54,1232,3.28,1965,3.28,1966,4.417,1967,4.417,1968,4.417,1969,4.417,1970,4.417,1971,4.417,1972,4.417,1973,4.417,1974,4.417,1975,4.417,1976,4.417,1977,3.889]],["title/controllers/RolesController.html",[46,1.306,1978,3.211]],["body/controllers/RolesController.html",[0,0.182,3,0.094,4,0.094,5,0.075,7,0.367,13,2.23,14,0.74,15,0.01,16,1.188,17,1.666,20,0.922,29,0.284,37,0.094,44,0.006,45,0.006,46,1.173,48,1.173,50,1.82,52,1.458,54,1.496,56,2.129,57,2.545,60,2.921,62,2.766,65,1.941,66,1.157,67,1.583,69,1.941,73,2.408,74,2.766,79,1.75,80,2.205,84,2.667,86,2.667,87,2.873,88,2.114,89,2.031,90,1.342,91,0.631,94,1.505,96,1.598,97,3.364,98,2.114,99,1.955,100,0.841,101,2.031,102,1.505,103,1.82,104,1.955,107,1.598,108,1.55,109,2.99,110,2.114,111,1.941,115,3.624,118,2.205,119,3.119,122,2.307,123,2.99,124,2.307,152,2.193,168,1.885,170,2.268,171,2.031,352,3.624,353,3.624,430,3.334,653,2.205,654,2.205,660,2.205,720,2.307,804,2.408,813,3.935,1071,4.31,1148,4.986,1154,6.107,1452,2.703,1455,3.263,1468,1.649,1472,2.421,1473,2.307,1479,2.703,1480,2.703,1596,6.104,1603,3.823,1604,2.551,1863,2.886,1978,4.082,1979,3.421,1980,3.421,1981,3.421,1982,3.886,1983,3.886,1984,4.839,1985,3.886,1986,3.886,1987,3.886,1988,3.886,1989,3.886,1990,3.886,1991,5.548,1992,3.886,1993,3.886,1994,3.421,1995,4.406,1996,3.886,1997,3.886,1998,3.886,1999,3.886,2000,3.886,2001,3.886,2002,3.886,2003,3.886]],["title/modules/RolesModule.html",[126,1.147,255,2.454]],["body/modules/RolesModule.html",[0,0.269,3,0.139,4,0.139,5,0.111,15,0.01,29,0.289,31,2.153,33,1.518,37,0.139,44,0.008,45,0.008,48,2.147,66,0.905,91,0.93,126,2.052,128,2.284,129,2.429,130,2.592,131,2.592,132,2.429,133,3.503,134,3.503,138,3.22,139,2.592,140,2.592,143,2.88,145,2.777,146,2.992,251,3.565,255,4.881,430,4.659,482,2.592,1212,4.947,1217,4.251,1978,5.745,1994,5.039,2004,5.039,2005,5.039,2006,5.724,2007,5.724,2008,5.724,2009,5.039,2010,5.724]],["title/injectables/RolesService.html",[148,0.96,430,2.26]],["body/injectables/RolesService.html",[0,0.131,3,0.068,4,0.068,5,0.054,7,0.264,8,1.005,13,1.922,14,0.733,15,0.01,16,1.157,20,0.937,29,0.264,33,0.74,34,0.865,37,0.068,41,1.927,44,0.005,45,0.005,52,1.141,53,2.505,54,1.171,56,1.666,57,1.716,60,2.697,65,1.861,66,1.24,67,1.518,69,1.861,70,2.493,79,2.367,80,2.441,84,1.353,90,1.813,91,0.453,94,1.08,96,1.147,102,1.08,111,1.786,112,2.565,114,3.21,148,0.955,149,1.049,152,1.716,153,1.716,155,3.084,168,2.087,170,2.085,171,2.248,175,1.656,176,1.458,177,1.353,178,1.353,185,3.092,189,2.985,190,2.621,201,1.884,204,1.583,215,2.072,218,1.656,293,2.679,332,1.08,362,1.738,430,2.248,461,1.404,474,1.764,482,3.177,524,1.458,563,1.222,565,2.096,566,1.618,580,3.348,581,2.236,772,1.583,804,1.884,841,5,843,5.624,856,2.236,863,1.263,864,2.553,870,1.184,876,1.263,882,1.263,943,1.307,968,3.787,1065,2.072,1066,2.072,1070,3.194,1085,2.236,1094,2.236,1127,3.873,1148,4.606,1152,1.583,1160,2.992,1217,3.194,1222,2.456,1227,3.787,1232,2.072,1237,2.456,1274,5.194,1468,2.503,1503,2.553,1511,1.738,1512,1.458,1513,1.656,1534,1.738,1535,3.27,1536,1.738,1537,1.738,1538,3.27,1539,2.679,1540,3.97,1541,2.679,1542,1.831,1543,1.656,1544,2.679,1546,2.679,1547,1.738,1548,1.738,1550,1.738,1551,1.831,1552,1.831,1553,1.738,1554,1.738,1555,2.679,1557,1.738,1558,1.738,1604,2.823,1620,4.194,1696,3.651,1868,2.236,1949,3.447,1981,3.787,1984,2.456,1991,5.04,1995,3.447,2009,2.456,2011,2.456,2012,4.302,2013,4.302,2014,2.79,2015,2.79,2016,2.79,2017,4.302,2018,2.79,2019,2.79,2020,2.79,2021,2.79,2022,2.456,2023,2.79,2024,2.79,2025,2.79,2026,2.79,2027,2.79,2028,5.25,2029,2.79,2030,2.79,2031,4.302,2032,2.79,2033,2.79,2034,4.302,2035,2.79,2036,4.302,2037,2.79,2038,4.302,2039,4.302,2040,4.302,2041,2.79,2042,4.302,2043,1.94,2044,2.79,2045,2.79,2046,4.302,2047,1.94,2048,2.79]],["title/interfaces/SwaggerDocumentOptions.html",[1337,2.454,2049,3.465]],["body/interfaces/SwaggerDocumentOptions.html",[3,0.118,4,0.118,5,0.094,7,0.459,8,1.496,14,0.8,15,0.01,16,1.014,19,1.824,37,0.118,44,0.007,45,0.007,50,3.001,67,1.858,128,3.242,510,3.991,891,4.089,989,4.456,1229,3.382,1337,2.76,1338,3.382,2049,5.135,2050,4.281,2051,4.281,2052,7.616,2053,7.616,2054,7.616,2055,8.41,2056,8.128,2057,6.705,2058,6.407,2059,6.407,2060,6.407,2061,7.403,2062,6.407,2063,6.407,2064,6.407,2065,6.407,2066,6.407,2067,7.616,2068,6.407,2069,6.407,2070,6.407,2071,6.407,2072,6.407,2073,6.407,2074,6.407,2075,6.407,2076,6.407,2077,6.407,2078,6.407,2079,6.407,2080,7.166,2081,7.166]],["title/injectables/TransformInterceptor.html",[148,0.96,2082,3.465]],["body/injectables/TransformInterceptor.html",[0,0.251,3,0.13,4,0.13,5,0.104,7,0.506,14,0.69,15,0.01,20,0.859,29,0.285,37,0.13,41,1.316,44,0.007,45,0.007,52,1.809,65,1.809,66,1.078,67,1.475,69,1.42,91,0.87,107,2.202,111,1.42,148,1.514,149,2.014,153,2.136,204,3.038,218,3.178,232,4.291,237,2.742,359,3.514,464,4.476,1192,4.713,1346,4.713,1347,7.342,1350,6.332,1352,6.003,1363,4.713,1834,4.713,1882,4.291,2082,5.465,2083,4.713,2084,7.504,2085,5.354,2086,5.354,2087,7.504,2088,7.9,2089,5.354,2090,7.504,2091,6.819,2092,4.713,2093,5.354,2094,5.354,2095,5.354,2096,4.291,2097,5.354,2098,5.354,2099,5.354,2100,5.354,2101,5.354,2102,5.354,2103,5.354,2104,5.354,2105,5.354]],["title/classes/UpdateAddressDto.html",[0,0.203,82,3.007]],["body/classes/UpdateAddressDto.html",[0,0.312,2,1.366,3,0.161,4,0.161,5,0.129,15,0.01,29,0.265,37,0.161,44,0.009,45,0.009,54,1.808,59,4.137,82,5.411,95,4.62,100,1.437,312,4.932,336,3.408,337,3.614,2106,5.847,2107,7.78]],["title/classes/UpdateCategoryDto.html",[0,0.203,817,3.007]],["body/classes/UpdateCategoryDto.html",[0,0.312,2,1.366,3,0.161,4,0.161,5,0.129,15,0.01,29,0.265,37,0.161,44,0.009,45,0.009,54,1.808,100,1.437,336,3.408,337,3.614,806,4.36,817,5.411,822,5.324,942,5.324,2108,5.847,2109,7.78]],["title/classes/UpdateOrderDto.html",[0,0.203,1457,3.007]],["body/classes/UpdateOrderDto.html",[0,0.261,2,0.812,3,0.096,4,0.096,5,0.077,7,0.373,8,1.298,14,0.793,15,0.01,16,1.243,17,1.59,20,0.88,27,2.55,29,0.251,37,0.096,41,1.366,44,0.006,45,0.006,54,1.075,59,2.46,63,3.388,95,2.747,100,0.855,197,4.858,237,2.69,316,2.692,318,3.463,321,3.457,322,2.927,323,3.457,326,2.937,328,1.676,329,2.065,330,1.485,331,3.195,332,2.704,336,2.436,337,3.501,340,2.933,363,3.3,508,4.476,524,2.065,558,3.652,559,2.241,565,1.975,566,2.091,569,3.025,580,3.963,595,3.388,599,2.344,899,3.166,900,4.456,901,4.456,902,4.756,903,4.145,904,3.463,907,4.895,908,5.67,909,6.148,910,4.456,911,4.895,918,4.895,919,4.895,920,4.895,921,4.895,922,4.895,923,4.895,924,3.867,943,2.604,955,2.593,957,3.166,959,4.129,960,5.466,971,3.477,972,2.933,973,5.157,974,4.456,975,6.148,976,6.148,977,4.584,978,4.584,980,3.477,984,3.477,1174,4.456,1412,5.157,1413,5.157,1457,3.867,1471,3.166,2110,5.466,2111,5.56,2112,6.435,2113,3.95,2114,3.95,2115,3.95,2116,3.95,2117,3.166]],["title/classes/UpdateOrderStatusDto.html",[0,0.203,1460,3.007]],["body/classes/UpdateOrderStatusDto.html",[0,0.324,2,1.124,3,0.132,4,0.132,5,0.106,7,0.516,8,1.613,14,0.553,15,0.01,16,0.977,17,1.244,19,1.309,20,0.689,27,2.199,29,0.258,37,0.132,44,0.008,45,0.008,63,3.351,100,1.182,237,2.768,316,2.322,319,4.383,322,2.908,326,2.756,328,2.931,330,2.055,331,2.756,559,3.101,564,2.651,565,2.827,566,2.598,569,3.758,599,3.243,603,2.559,905,3.611,970,4.977,972,4.058,982,5.625,983,4.38,1112,5.223,1113,5.223,1410,4.303,1414,6.071,1460,4.805,2110,5.13,2118,4.38,2119,5.13,2120,5.465,2121,4.811,2122,5.465]],["title/classes/UpdatePaymentStatusDto.html",[0,0.203,1464,3.007]],["body/classes/UpdatePaymentStatusDto.html",[0,0.323,2,1.119,3,0.132,4,0.132,5,0.106,7,0.514,8,1.609,14,0.55,15,0.01,16,0.975,17,1.239,19,1.304,20,0.686,27,2.194,29,0.258,37,0.132,44,0.008,45,0.008,63,3.343,100,1.178,237,2.763,316,2.316,322,2.904,326,2.749,328,2.924,330,2.047,331,2.749,524,2.845,559,3.088,564,2.64,565,2.823,566,2.591,569,3.748,599,3.23,603,2.549,905,3.601,972,4.041,977,5.498,978,5.498,1112,5.217,1113,5.217,1415,6.06,1464,4.792,1475,5.116,1515,6.06,2110,5.116,2118,4.362,2119,5.116,2121,4.791,2123,6.065,2124,5.442,2125,5.442]],["title/classes/UpdatePermissionDto.html",[0,0.203,1617,3.007]],["body/classes/UpdatePermissionDto.html",[0,0.312,2,1.366,3,0.161,4,0.161,5,0.129,15,0.01,29,0.265,37,0.161,44,0.009,45,0.009,54,1.808,100,1.437,336,3.408,337,3.614,985,4.36,987,5.324,1617,5.411,1622,5.324,2126,5.847,2127,7.78]],["title/classes/UpdateProductDto.html",[0,0.203,1706,3.007]],["body/classes/UpdateProductDto.html",[0,0.312,2,1.366,3,0.161,4,0.161,5,0.129,15,0.01,29,0.265,37,0.161,44,0.009,45,0.009,54,1.808,100,1.437,336,3.408,337,3.614,1007,4.36,1009,5.324,1706,5.411,1710,5.324,2128,5.847,2129,7.78]],["title/classes/UpdatePromotionDto.html",[0,0.203,1802,3.007]],["body/classes/UpdatePromotionDto.html",[0,0.312,2,1.366,3,0.161,4,0.161,5,0.129,15,0.01,29,0.265,37,0.161,44,0.009,45,0.009,54,1.808,100,1.437,335,4.932,336,3.408,337,3.614,341,4.137,342,4.62,1802,5.411,2130,5.847,2131,7.78]],["title/classes/UpdateReviewDto.html",[0,0.203,1910,3.007]],["body/classes/UpdateReviewDto.html",[0,0.305,2,1.336,3,0.157,4,0.157,5,0.126,15,0.01,29,0.262,37,0.157,41,1.887,44,0.008,45,0.008,54,1.768,100,1.406,336,3.364,337,4.447,557,4.783,1128,4.264,1130,5.206,1910,5.341,1915,5.206,2117,5.206,2132,5.718,2133,7.679]],["title/classes/UpdateRoleDto.html",[0,0.203,1991,3.007]],["body/classes/UpdateRoleDto.html",[0,0.312,2,1.366,3,0.161,4,0.161,5,0.129,15,0.01,29,0.265,37,0.161,44,0.009,45,0.009,54,1.808,100,1.437,336,3.408,337,3.614,1148,4.36,1150,5.324,1991,5.411,1995,5.324,2134,5.847,2135,7.78]],["title/classes/UpdateUserDto.html",[0,0.203,2136,3.007]],["body/classes/UpdateUserDto.html",[0,0.303,2,1.329,3,0.156,4,0.156,5,0.125,15,0.01,29,0.261,37,0.156,41,1.881,44,0.008,45,0.008,54,1.759,100,1.399,336,3.354,337,4.438,384,4.026,458,4.165,465,3.668,474,2.573,1170,4.496,2117,5.181,2136,5.325,2137,5.691,2138,7.657]],["title/classes/User.html",[0,0.203,13,1.118]],["body/classes/User.html",[0,0.194,1,3.316,2,0.849,3,0.1,4,0.1,5,0.08,7,0.39,8,1.339,9,3.911,13,1.483,14,0.895,15,0.01,16,1.21,17,1.947,18,4.583,19,1.97,20,1.077,25,3.873,26,2.998,27,2.382,29,0.225,30,4.801,31,2.157,32,2.246,33,1.095,34,1.778,35,3.12,37,0.159,39,2.246,40,3.873,41,1.014,44,0.006,45,0.006,79,2.098,458,3.585,474,2.602,482,3.506,490,5.281,512,3.739,514,3.764,863,2.983,870,2.796,876,2.983,879,3.444,880,3.739,881,3.739,882,2.983,883,4.213,885,4.213,891,2.885,1213,3.309,1214,2.871,1217,3.066,1233,3.066,2139,3.066,2140,4.128,2141,4.128,2142,4.128,2143,4.128,2144,4.128,2145,4.128,2146,4.128,2147,4.128,2148,4.128,2149,4.128,2150,4.128,2151,4.128,2152,4.128,2153,3.634]],["title/controllers/UsersController.html",[46,1.306,2154,3.211]],["body/controllers/UsersController.html",[0,0.186,3,0.096,4,0.096,5,0.077,7,0.374,13,2.135,14,0.745,15,0.01,16,1.192,17,1.678,20,0.928,29,0.282,37,0.096,44,0.006,45,0.006,46,1.196,48,1.196,50,1.856,52,1.478,53,2.46,54,1.516,56,2.158,57,2.571,60,2.789,61,2.6,62,2.804,65,1.955,66,1.165,67,1.595,69,1.955,70,2.289,73,2.441,74,2.804,77,2.942,83,2.756,84,2.703,86,2.703,87,2.912,88,2.155,89,2.071,90,1.369,91,0.644,94,1.534,96,1.629,97,3.127,98,2.155,99,1.993,100,0.857,101,2.071,102,1.534,103,1.856,104,1.993,107,1.629,108,1.58,109,2.155,110,2.155,111,1.955,112,2.108,115,2.912,118,2.248,119,2.248,122,2.351,123,2.155,124,2.351,152,2.223,168,1.922,170,2.568,171,2.071,173,2.248,352,3.655,353,3.655,384,3.471,446,3.657,465,4.337,480,3.487,633,3.175,653,2.248,654,2.248,660,2.248,720,2.351,804,2.441,823,3.175,904,5.143,992,5.42,997,3.175,1468,2.735,1473,2.351,1503,2.351,1627,3.487,2136,5.575,2154,4.138,2155,3.487,2156,3.487,2157,3.962,2158,3.962,2159,3.962,2160,3.962,2161,3.962,2162,3.962,2163,3.487,2164,3.962,2165,3.962,2166,3.962,2167,3.962,2168,3.962,2169,3.962,2170,3.962]],["title/modules/UsersModule.html",[126,1.147,256,2.693]],["body/modules/UsersModule.html",[0,0.263,3,0.136,4,0.136,5,0.109,13,1.449,15,0.01,29,0.288,31,2.107,33,1.486,37,0.136,44,0.008,45,0.008,48,2.119,66,0.886,91,0.91,126,2.032,128,2.235,129,2.377,130,2.537,131,2.537,132,2.377,133,3.469,134,3.469,138,3.177,139,2.537,140,2.537,143,2.819,145,3.404,146,2.929,255,4.788,256,5.439,446,5.043,1214,4.881,1218,4.161,1638,4.933,2154,5.69,2163,4.933,2171,4.933,2172,5.603,2173,5.603,2174,4.933,2175,5.603,2176,5.603,2177,4.933]],["title/injectables/UsersService.html",[148,0.96,446,2.454]],["body/injectables/UsersService.html",[0,0.123,3,0.064,4,0.064,5,0.051,7,0.248,8,0.958,13,1.836,14,0.781,15,0.01,16,1.24,20,0.974,29,0.255,33,0.696,34,0.814,37,0.064,41,1.925,44,0.005,45,0.005,52,1.088,53,2.61,54,1.116,56,1.588,57,1.636,60,2.437,65,2.017,66,1.202,67,1.646,69,1.98,70,2.702,79,2.185,84,1.273,90,1.744,91,0.426,94,1.016,96,1.079,102,1.016,108,2.471,111,1.98,112,2.644,114,2.231,148,0.91,149,0.987,152,1.636,153,1.636,155,2.984,168,1.99,170,2.322,173,2.328,175,1.557,176,1.372,177,1.273,178,1.273,185,3.186,189,2.901,190,2.548,264,4.504,265,1.634,348,3.287,376,2.853,377,3.75,384,2.555,430,3.586,446,2.328,458,3.106,461,1.32,465,3.726,469,3.611,474,1.919,482,2.286,490,4.965,563,1.797,565,2.028,566,1.543,772,1.489,804,1.797,864,2.435,870,1.113,876,1.188,882,1.188,1127,3.314,1160,2.853,1223,3.611,1233,1.949,1238,2.31,1252,2.853,1276,4.445,1277,2.31,1468,1.74,1503,2.435,1511,1.634,1512,1.372,1513,1.557,1534,1.634,1535,3.145,1536,1.634,1537,1.634,1538,2.555,1539,2.555,1540,3.556,1541,2.555,1543,2.435,1544,2.555,1546,2.555,1547,1.634,1548,1.634,1550,1.634,1553,1.634,1554,1.634,1555,2.555,1557,1.634,1558,1.634,1696,3.512,1949,3.287,2043,1.825,2047,1.825,2136,4.939,2156,3.611,2177,2.31,2178,2.103,2179,4.102,2180,4.102,2181,4.102,2182,4.102,2183,2.624,2184,4.102,2185,2.624,2186,2.624,2187,2.624,2188,4.102,2189,2.624,2190,4.102,2191,2.624,2192,4.102,2193,2.624,2194,4.102,2195,5.709,2196,2.624,2197,4.102,2198,2.624,2199,2.624,2200,4.102,2201,2.624,2202,2.624,2203,2.624,2204,2.103,2205,2.31,2206,5.05,2207,5.709,2208,2.624,2209,2.624,2210,4.102,2211,2.624,2212,2.624,2213,2.624,2214,2.624,2215,2.624,2216,2.624,2217,2.624,2218,2.624,2219,2.624,2220,2.624,2221,2.624,2222,2.624,2223,2.624,2224,4.102,2225,4.102,2226,4.102,2227,5.05,2228,2.624,2229,4.102,2230,2.624,2231,2.624]],["title/classes/Utils.html",[0,0.203,182,3.007]],["body/classes/Utils.html",[0,0.28,2,1.227,3,0.144,4,0.144,5,0.116,7,0.564,14,0.604,15,0.01,20,0.752,37,0.144,41,1.793,44,0.008,45,0.008,52,1.936,65,1.583,66,0.944,67,1.292,69,1.583,111,1.583,159,3.387,182,5.076,192,5.849,201,2.615,885,4.662,2232,5.255,2233,7.883,2234,7.298,2235,7.298,2236,7.883,2237,5.969,2238,5.969,2239,7.298,2240,5.969,2241,5.969,2242,5.969,2243,7.298,2244,5.969,2245,5.969]],["title/injectables/ValidateObjectIdPipe.html",[97,2.098,148,0.96]],["body/injectables/ValidateObjectIdPipe.html",[0,0.286,3,0.147,4,0.147,5,0.118,7,0.576,14,0.616,15,0.01,20,0.768,29,0.271,34,2.291,37,0.147,44,0.008,45,0.008,52,1.96,65,1.616,66,0.963,67,1.318,69,1.616,91,0.99,97,3.585,111,1.616,148,1.64,149,2.291,179,2.854,181,2.956,189,2.854,190,2.506,204,3.457,461,3.066,548,4.883,1229,5.14,2246,5.363,2247,7.39,2248,7.39,2249,7.002,2250,8.27,2251,6.093,2252,7.39,2253,6.093,2254,6.093]],["title/coverage.html",[2255,5.212]],["body/coverage.html",[0,0.413,1,1.217,5,0.047,6,2.856,13,0.994,14,0.245,15,0.01,42,1.796,44,0.004,45,0.004,46,2.351,47,1.796,49,2.129,59,1.506,60,0.859,82,1.682,92,1.435,97,1.173,103,1.133,132,1.026,148,1.821,150,2.129,182,1.682,190,0.995,201,4.009,202,1.938,203,2.129,239,1.796,240,2.129,257,1.682,258,1.682,259,1.682,260,1.938,287,1.938,305,2.129,310,1.796,311,2.129,312,3.555,333,1.796,334,2.129,335,3.555,341,1.506,343,1.796,344,2.129,359,1.587,373,1.682,381,1.506,383,1.796,385,1.796,388,1.435,393,1.796,394,1.938,417,1.682,426,1.796,430,1.264,441,2.129,446,1.372,462,1.796,463,3.837,465,1.372,466,1.938,482,1.095,505,2.182,506,2.856,518,1.173,520,1.587,530,1.796,532,2.129,533,3.082,537,1.435,549,1.682,554,1.587,555,2.129,556,2.129,600,1.796,601,1.796,610,1.796,611,2.129,631,1.682,637,1.796,682,2.129,690,1.506,693,1.316,716,1.682,717,1.938,719,1.938,801,1.796,802,2.129,806,1.587,817,1.682,820,1.506,836,1.435,837,1.796,840,2.129,878,2.856,899,1.938,926,2.129,927,2.129,941,2.129,942,3.082,955,1.587,956,2.129,957,3.082,981,1.938,985,1.587,986,2.129,987,3.082,991,1.217,1007,1.587,1008,2.129,1009,3.082,1057,2.129,1128,1.587,1129,2.129,1130,3.082,1148,1.587,1149,2.129,1150,3.082,1170,3.795,1202,1.796,1203,2.129,1205,1.587,1212,1.682,1214,1.682,1215,1.682,1220,2.129,1234,1.938,1235,1.938,1288,1.796,1289,2.129,1290,2.129,1297,1.796,1298,2.129,1315,1.938,1316,1.938,1332,1.682,1336,2.129,1337,3.096,1339,2.129,1340,1.938,1341,2.129,1342,3.082,1359,1.938,1378,2.129,1397,2.129,1399,2.129,1410,2.395,1411,2.856,1442,1.796,1444,2.129,1445,1.796,1446,2.129,1457,1.682,1460,1.682,1464,1.682,1469,1.587,1473,1.435,1475,1.796,1496,2.129,1517,1.938,1518,1.938,1580,2.856,1593,1.796,1594,2.129,1617,1.682,1620,1.506,1639,2.129,1665,2.856,1689,1.796,1691,2.129,1697,1.796,1698,2.129,1706,1.682,1728,2.129,1772,2.856,1792,1.796,1794,1.796,1795,2.129,1802,1.682,1820,2.129,1863,1.796,1864,2.129,1875,2.129,1876,2.129,1881,2.129,1883,1.682,1884,2.856,1897,1.796,1899,1.796,1900,2.129,1910,1.682,1913,1.587,1932,2.129,1965,2.856,1978,1.796,1979,2.129,1991,1.682,2011,2.129,2049,1.938,2050,2.129,2051,2.129,2061,4.215,2082,1.938,2083,2.129,2096,1.938,2106,2.129,2108,2.129,2110,3.555,2118,3.082,2126,2.129,2128,2.129,2130,2.129,2132,2.129,2134,2.129,2136,1.682,2137,2.129,2139,2.856,2154,1.796,2155,2.129,2178,3.082,2204,1.938,2232,2.129,2246,2.129,2255,2.129,2256,2.418,2257,2.418,2258,2.418,2259,8.835,2260,8.512,2261,7.288,2262,6.902,2263,3.386,2264,5.955,2265,6.65,2266,5.955,2267,4.803,2268,3.386,2269,3.386,2270,2.129,2271,2.418,2272,2.418,2273,4.215,2274,2.129,2275,2.129,2276,2.129,2277,4.215,2278,2.129,2279,4.788,2280,7.288,2281,6.342,2282,3.846,2283,2.418,2284,2.418,2285,2.418,2286,4.788,2287,2.418,2288,2.418,2289,2.418,2290,2.418,2291,2.418]],["title/dependencies.html",[129,2.209,2292,3.17]],["body/dependencies.html",[0,0.334,15,0.01,33,1.522,34,2.208,44,0.008,45,0.008,90,1.982,91,0.932,100,1.241,129,2.434,177,2.783,178,2.783,218,3.405,265,3.573,281,5.05,330,2.157,390,3.99,423,3.766,425,4.598,428,4.598,935,4.598,1313,5.05,1386,6.207,1387,4.598,1404,5.05,1468,2.434,1512,2.999,1513,3.405,2092,5.05,2249,5.05,2293,7.745,2294,5.737,2295,5.737,2296,5.737,2297,5.737,2298,5.737,2299,5.737,2300,5.737,2301,5.737,2302,5.737,2303,5.737,2304,5.737,2305,5.737,2306,5.737,2307,5.737,2308,5.737,2309,5.737,2310,5.737,2311,5.737,2312,5.05,2313,5.737,2314,5.737,2315,5.737,2316,5.737,2317,5.737,2318,5.737,2319,5.737,2320,5.737,2321,5.737,2322,5.737]],["title/miscellaneous/enumerations.html",[2323,2.137,2324,4.583]],["body/miscellaneous/enumerations.html",[7,0.267,15,0.01,44,0.005,45,0.005,56,1.682,63,2.567,73,1.903,84,1.371,170,2.214,179,2.034,180,1.477,317,3.685,318,3.296,319,4.249,321,1.967,322,2.784,323,1.279,324,1.855,356,3.226,363,2.578,376,1.965,377,2.098,390,1.965,523,3.824,560,3.481,561,2.098,562,2.098,565,3.003,566,1.634,569,3.487,572,3.104,573,3.104,580,3.638,586,1.965,587,1.965,591,3.481,592,2.098,618,2.265,619,3.62,623,1.965,628,4.443,639,2.098,714,3.481,810,2.851,902,2.706,903,1.677,905,1.477,908,3.226,924,3.021,943,2.034,965,5.643,967,2.265,970,3.525,973,3.481,974,3.481,977,3.473,978,3.473,982,3.226,1021,1.965,1065,2.098,1066,2.098,1067,2.098,1071,1.603,1078,4.658,1084,3.226,1085,3.481,1086,3.824,1093,3.824,1094,2.265,1095,2.487,1107,2.487,1108,2.487,1110,3.226,1111,3.481,1112,1.76,1113,1.76,1127,5.285,1160,1.965,1184,2.487,1185,2.487,1229,6.343,1252,3.68,1284,2.265,1512,1.477,1515,3.481,1696,5.601,1877,2.487,1950,2.487,2022,3.824,2043,3.021,2047,1.965,2119,2.098,2123,2.487,2323,1.677,2324,2.487,2325,2.487,2326,4.344,2327,7.462,2328,2.826,2329,4.344,2330,4.344,2331,2.826,2332,2.826,2333,4.344,2334,2.826,2335,2.826,2336,2.826,2337,2.826,2338,2.826,2339,2.826,2340,2.826,2341,2.826,2342,2.826,2343,2.826,2344,2.826,2345,2.826,2346,4.344,2347,2.826,2348,2.826,2349,2.826,2350,4.344,2351,2.826,2352,5.292,2353,2.826,2354,2.826,2355,2.826,2356,4.344,2357,2.826,2358,5.94,2359,2.826,2360,2.826,2361,2.826,2362,2.826,2363,2.826,2364,2.826,2365,4.344,2366,3.824,2367,2.826,2368,2.826,2369,2.826,2370,2.826,2371,2.826,2372,4.344,2373,2.826,2374,2.826,2375,4.344,2376,4.344,2377,2.826,2378,2.826,2379,2.826,2380,2.826,2381,4.344,2382,4.344,2383,2.826,2384,2.487,2385,2.826,2386,2.487,2387,2.826,2388,2.826,2389,2.826,2390,2.826,2391,2.826,2392,2.826,2393,2.826,2394,4.344,2395,4.344,2396,4.344,2397,2.826,2398,2.826,2399,3.824,2400,2.826,2401,2.826,2402,2.826,2403,4.344,2404,2.487,2405,2.826,2406,2.826,2407,2.826,2408,2.826,2409,2.826,2410,2.826,2411,2.826,2412,2.826,2413,2.826,2414,2.826,2415,2.826,2416,2.826,2417,2.826,2418,2.826,2419,2.826,2420,2.826,2421,2.826,2422,2.826,2423,4.344,2424,2.487,2425,2.826,2426,2.826,2427,2.826,2428,2.826,2429,2.826,2430,2.826,2431,2.826,2432,2.826,2433,2.826,2434,2.826,2435,2.826,2436,2.826,2437,2.826,2438,2.826,2439,2.826]],["title/miscellaneous/functions.html",[2323,2.137,2440,4.583]],["body/miscellaneous/functions.html",[7,0.606,14,0.771,15,0.009,44,0.008,45,0.008,65,2.022,66,1.205,67,1.65,132,3.451,549,5.302,600,5.661,601,4.765,981,5.143,2268,7.407,2278,5.649,2323,3.809,2325,5.649,2440,5.649,2441,6.417,2442,6.417,2443,6.417,2444,8.716,2445,7.624,2446,6.417]],["title/index.html",[7,0.34,2447,3.601,2448,3.601]],["body/index.html",[15,0.009,34,1.208,44,0.006,45,0.006,63,3.099,73,1.708,197,3.831,220,3.431,317,2.037,318,3.979,319,4.51,322,3.136,363,3.269,375,2.894,376,4.443,552,3.124,572,4.301,573,4.243,580,3.126,618,3.124,619,3.938,623,3.831,628,2.558,639,2.894,810,2.558,813,3.625,902,5.345,904,4.868,910,3.124,924,2.711,943,1.826,951,2.711,952,4.156,967,3.124,969,5.094,970,4.738,977,2.558,978,3.616,992,5.13,999,3.831,1021,5.933,1029,4.744,1031,3.431,1032,2.711,1037,3.124,1067,2.894,1068,5.624,1069,5.624,1070,2.894,1071,3.94,1112,2.428,1113,2.428,1154,4.09,1252,4.829,1512,2.879,1603,5.436,1604,5.13,1605,5.803,1606,5.803,1607,5.646,1626,5.803,1869,5.12,2043,2.711,2047,4.443,2057,5.624,2119,2.894,2312,3.431,2366,4.849,2384,3.431,2399,3.431,2404,3.431,2449,3.898,2450,3.898,2451,6.388,2452,3.898,2453,5.508,2454,3.898,2455,5.508,2456,6.388,2457,3.898,2458,6.388,2459,6.388,2460,3.898,2461,3.898,2462,3.898,2463,3.898,2464,3.898,2465,3.898,2466,3.898,2467,3.898,2468,3.898,2469,3.898,2470,3.431,2471,3.898,2472,3.898,2473,3.898,2474,3.898,2475,3.898,2476,3.898,2477,3.898,2478,3.898,2479,3.898,2480,3.898,2481,5.508,2482,3.898,2483,3.898,2484,3.898,2485,3.898,2486,3.898,2487,3.898,2488,3.898]],["title/modules.html",[128,2.362]],["body/modules.html",[15,0.008,44,0.008,45,0.008,127,3.685,128,2.36,241,4.393,245,3.883,246,3.685,247,3.685,248,3.883,249,3.883,250,3.685,251,3.685,252,3.511,253,3.685,254,3.685,255,3.357,256,3.685,897,4.741,2489,9.01,2490,9.01,2491,9.01,2492,9.035,2493,5.916,2494,5.916]],["title/overview.html",[2495,5.212]],["body/overview.html",[2,0.763,15,0.01,44,0.006,45,0.006,48,1.121,92,4.573,126,0.985,127,4.799,128,1.481,129,1.575,130,1.681,131,1.681,132,1.575,133,1.681,134,1.681,135,3.268,136,3.268,137,3.268,138,2.409,139,1.681,140,1.681,149,1.396,241,6.671,242,3.268,243,3.268,244,3.268,245,5.41,246,5.232,247,4.66,248,5.267,249,4.719,250,4.909,251,4.66,252,4.678,253,4.799,254,4.909,255,4.473,256,4.998,257,4.325,258,4.325,259,4.325,294,3.268,381,3.873,414,3.268,415,3.268,417,4.325,430,4.12,446,4.473,537,4.573,671,3.268,672,3.268,673,3.268,690,4.799,693,4.192,820,4.799,831,3.268,832,3.268,833,3.268,1205,4.082,1208,3.268,1209,3.268,1330,3.268,1331,3.268,1332,4.325,1338,2.582,1469,5.057,1487,3.268,1488,3.268,1490,3.268,1620,4.799,1632,3.268,1633,3.268,1634,3.268,1719,3.268,1720,3.268,1721,3.268,1812,3.268,1813,3.268,1814,3.268,1913,5.057,1924,3.268,1925,3.268,1927,3.268,2004,3.268,2005,3.268,2171,3.268,2174,3.268,2495,3.268,2496,3.712,2497,3.712,2498,3.712,2499,3.712]],["title/properties.html",[8,1.216,2292,3.17]],["body/properties.html",[8,1.612,15,0.01,44,0.009,45,0.009,316,2.32,1708,6.076,1882,5.532,2500,6.902,2501,6.902,2502,6.902]],["title/miscellaneous/typealiases.html",[2323,2.137,2503,5.206]],["body/miscellaneous/typealiases.html",[6,4.62,7,0.588,14,0.629,15,0.008,35,4.834,38,5.998,44,0.008,45,0.008,506,4.62,525,5.998,852,5.998,878,4.62,1231,5.557,1232,5.557,1233,5.557,1411,4.62,1441,5.998,1580,4.62,1665,4.62,1687,5.998,1772,4.62,1791,5.998,1884,4.62,1896,5.998,1965,4.62,2139,4.62,2323,3.693,2504,6.222,2505,5.477,2506,5.477,2507,5.477,2508,5.477,2509,5.477,2510,5.477,2511,5.477,2512,5.477,2513,5.477,2514,5.477]],["title/miscellaneous/variables.html",[2323,2.137,2515,4.583]],["body/miscellaneous/variables.html",[5,0.079,6,0.685,7,0.087,13,0.737,14,0.573,15,0.01,16,0.658,19,0.402,26,0.482,27,0.294,41,0.7,42,1.247,43,0.812,44,0.002,45,0.002,51,2.915,54,0.457,57,0.67,62,2.339,63,1.801,66,1.275,73,2.331,74,2.2,79,2.768,84,2.121,86,2.826,88,2.663,90,1.768,103,0.787,111,0.614,126,2.134,127,0.575,159,4.566,170,0.549,190,0.691,201,3.534,216,0.812,224,0.812,237,0.845,245,0.606,246,1.046,247,0.575,248,0.606,249,0.606,250,0.575,251,0.575,252,0.548,253,0.575,254,0.575,255,0.523,256,0.575,260,0.739,287,1.346,316,0.31,317,1.94,318,2.312,319,3.045,322,0.337,331,0.368,332,3.131,345,2.509,352,2.43,353,2.43,355,0.812,356,1.718,362,0.575,363,1.692,364,0.739,368,0.739,375,1.247,376,0.642,377,0.685,380,2.036,388,0.997,462,1.247,463,0.739,464,0.606,474,2.737,482,1.29,506,0.685,510,4.404,528,0.548,530,1.247,531,0.812,563,0.404,572,1.731,573,1.731,612,2.915,619,2.751,623,1.168,628,2.436,719,1.346,803,2.915,810,2.173,837,1.247,863,3.643,870,1.405,878,0.685,879,4.205,880,4.566,881,4.566,882,3.643,885,1.801,896,0.812,902,0.575,904,2.53,943,0.787,951,1.168,952,2.305,969,0.642,970,1.373,988,5.974,989,5.596,990,1.479,991,1.666,992,2.667,997,2.654,999,0.642,1004,2.509,1005,1.479,1021,1.168,1029,0.685,1032,0.642,1033,1.247,1037,0.739,1048,0.739,1067,1.247,1071,0.523,1090,7.628,1105,7.628,1111,0.739,1142,0.739,1152,1.879,1195,0.812,1212,1.168,1214,1.168,1215,1.168,1229,4.918,1234,1.346,1235,1.346,1253,0.812,1254,0.812,1255,0.812,1256,0.812,1257,0.812,1258,0.812,1259,0.812,1260,0.812,1261,0.812,1262,0.812,1263,0.812,1264,0.812,1265,0.812,1266,0.812,1267,0.812,1268,0.812,1269,0.812,1270,0.812,1271,0.812,1272,0.812,1284,0.739,1299,1.479,1303,1.479,1315,1.346,1316,1.346,1350,0.739,1359,1.346,1361,0.812,1372,0.812,1387,0.739,1411,0.685,1442,1.247,1443,0.812,1447,2.654,1455,0.548,1468,0.391,1473,0.997,1512,0.482,1517,1.346,1518,1.346,1525,0.812,1526,0.812,1543,0.548,1580,0.685,1592,0.812,1602,1.346,1603,0.642,1604,0.606,1605,0.685,1606,0.685,1607,0.685,1626,0.685,1665,0.685,1689,1.247,1690,0.812,1699,2.915,1772,0.685,1792,1.247,1793,0.812,1796,3.267,1866,0.812,1867,0.812,1868,4.886,1869,0.739,1870,0.812,1871,0.812,1874,0.812,1884,0.685,1897,1.247,1898,0.812,1901,2.975,1965,0.685,1977,0.812,1980,3.267,2043,3.041,2047,2.826,2096,1.346,2139,0.685,2153,0.812,2178,0.739,2204,1.346,2205,0.812,2263,0.812,2267,0.812,2269,0.812,2270,0.812,2273,0.812,2274,1.479,2275,0.812,2276,1.479,2277,2.509,2323,0.548,2386,0.812,2424,0.812,2470,3.849,2505,0.812,2506,0.812,2507,0.812,2508,0.812,2509,0.812,2510,0.812,2511,0.812,2512,0.812,2513,0.812,2514,0.812,2515,0.812,2516,2.313,2517,2.85,2518,0.923,2519,0.923,2520,2.313,2521,1.68,2522,0.923,2523,1.68,2524,0.923,2525,0.923,2526,0.923,2527,8.143,2528,8.143,2529,3.311,2530,3.311,2531,8.046,2532,0.923,2533,0.923,2534,0.923,2535,0.923,2536,0.923,2537,1.68,2538,0.923,2539,1.68,2540,0.923,2541,2.313,2542,1.68,2543,0.923,2544,1.68,2545,0.923,2546,1.68,2547,0.923,2548,1.68,2549,0.923,2550,2.313,2551,1.68,2552,0.923,2553,1.68,2554,0.923,2555,1.68,2556,0.923,2557,1.68,2558,0.923,2559,2.85,2560,0.923,2561,0.923,2562,1.68,2563,1.68,2564,0.923,2565,2.313,2566,1.68,2567,0.923,2568,1.68,2569,0.923,2570,1.68,2571,0.923,2572,1.68,2573,1.68,2574,1.68,2575,0.923,2576,1.68,2577,2.313,2578,1.68,2579,2.85,2580,0.923,2581,4.896,2582,1.68,2583,0.923,2584,0.923,2585,0.923,2586,1.68,2587,1.68,2588,0.923,2589,1.68,2590,0.923,2591,2.313,2592,1.68,2593,0.923,2594,1.68,2595,0.923,2596,1.68,2597,0.923,2598,1.68,2599,4.373,2600,0.923,2601,4.373,2602,0.923,2603,2.313,2604,4.373,2605,0.923,2606,4.373,2607,0.923,2608,3.712,2609,0.923,2610,1.68,2611,0.923,2612,0.923,2613,2.313,2614,0.923,2615,0.923,2616,1.68,2617,0.923,2618,2.313,2619,0.923,2620,1.68,2621,0.923,2622,1.68,2623,0.923,2624,1.68,2625,1.68,2626,1.68,2627,0.923,2628,0.923,2629,0.923,2630,0.923,2631,0.923,2632,0.923,2633,0.923,2634,0.923,2635,0.923,2636,0.923,2637,0.923,2638,0.923,2639,0.923,2640,0.923,2641,0.923,2642,0.923,2643,0.923,2644,0.923,2645,0.923,2646,0.923,2647,0.923,2648,0.923,2649,0.923,2650,0.923,2651,1.68,2652,0.923,2653,0.923,2654,0.923,2655,1.68,2656,0.923,2657,1.68,2658,0.923,2659,0.923,2660,1.68,2661,0.923,2662,2.85,2663,0.923,2664,1.68,2665,2.313,2666,0.923,2667,0.923,2668,0.923,2669,0.923,2670,0.923,2671,0.923,2672,1.68,2673,0.923,2674,0.923,2675,0.923,2676,0.923,2677,0.923,2678,0.923,2679,0.923,2680,0.923,2681,0.923,2682,0.923]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"classes/Address.html":{},"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyAddressDto.html":{},"classes/ApplyPromotionDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/CartExistsRule.html":{},"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"modules/CommonModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabaseController.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"interfaces/OrderSummary.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"controllers/PromotionsController.html":{},"modules/PromotionsModule.html":{},"injectables/PromotionsService.html":{},"classes/QueryDto.html":{},"classes/RegisterUserDto.html":{},"classes/RemoveCartItemsDto.html":{},"interfaces/Response.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"interfaces/SwaggerDocumentOptions.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePromotionDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"injectables/ValidateObjectIdPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":201,"title":{},"body":{"injectables/AddressesService.html":{},"classes/CartItemDto.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"injectables/DatabaseService.html":{},"classes/Order.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"classes/Utils.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0'})@max(1000000",{"_index":588,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{}}}],["0'})@max(1000000000",{"_index":1040,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["0.0.1",{"_index":2500,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":2320,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":2308,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2307,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":2316,"title":{},"body":{"dependencies.html":{}}}],["0.7.34",{"_index":2303,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2259,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2286,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2283,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2281,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2289,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2288,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2287,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2285,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2261,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2284,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2266,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2265,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2262,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2280,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2264,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2279,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2282,"title":{},"body":{"coverage.html":{}}}],["01t00:00:00.000z",{"_index":1106,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["06",{"_index":1105,"title":{},"body":{"classes/CreatePromotionDto.html":{},"miscellaneous/variables.html":{}}}],["07",{"_index":1091,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["0987654321",{"_index":907,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/UpdateOrderDto.html":{}}}],["1",{"_index":563,"title":{},"body":{"classes/CartItemDto.html":{},"injectables/CartsService.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"classes/Review.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["1'})@max(5",{"_index":1145,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["1.0.0",{"_index":2318,"title":{},"body":{"dependencies.html":{}}}],["1.0.17",{"_index":2322,"title":{},"body":{"dependencies.html":{}}}],["1.000.000",{"_index":589,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{}}}],["1.000.000.000",{"_index":1041,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["1.4.6",{"_index":2311,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1543,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":2293,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":2299,"title":{},"body":{"dependencies.html":{}}}],["10.0.5",{"_index":2298,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":2295,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1048,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/PromotionsService.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["100000",{"_index":1038,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{}}}],["1000000",{"_index":579,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{}}}],["1000000000",{"_index":1036,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["1024",{"_index":2657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["123",{"_index":918,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/UpdateOrderDto.html":{}}}],["14",{"_index":2497,"title":{},"body":{"overview.html":{}}}],["15",{"_index":2496,"title":{},"body":{"overview.html":{}}}],["15t06:47:49.369z",{"_index":2529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:48:22.224z",{"_index":2539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:01.241z",{"_index":2542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:23.973z",{"_index":2544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:05.131z",{"_index":2530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:32.799z",{"_index":2546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:31.898z",{"_index":2548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:51.041z",{"_index":2551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:13.364z",{"_index":2553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:41.934z",{"_index":2555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:56.274z",{"_index":2557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:01:36.923z",{"_index":2559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:16.508z",{"_index":2563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:33.697z",{"_index":2566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:46.085z",{"_index":2568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:24.175z",{"_index":2570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:37.896z",{"_index":2572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:14.659z",{"_index":2574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:33.395z",{"_index":2576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:50.801z",{"_index":2578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:15.785z",{"_index":2579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:05.961z",{"_index":2581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:50.946z",{"_index":2587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:10.914z",{"_index":2589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:33.234z",{"_index":2592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:48.081z",{"_index":2594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:11.323z",{"_index":2596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:51.974z",{"_index":2599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:06.618z",{"_index":2601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:20.853z",{"_index":2604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:36.836z",{"_index":2606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:52.798z",{"_index":2608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":938,"title":{},"body":{"classes/CreateCartDto.html":{},"classes/CreateProductDto.html":{}}}],["2.1.3",{"_index":2315,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":2306,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["20000",{"_index":199,"title":{},"body":{"injectables/AddressesService.html":{}}}],["2023",{"_index":1090,"title":{},"body":{"classes/CreatePromotionDto.html":{},"miscellaneous/variables.html":{}}}],["21e0",{"_index":947,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{}}}],["2cdad00d09e2.jpg",{"_index":1056,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["3.2.2",{"_index":2294,"title":{},"body":{"dependencies.html":{}}}],["30000",{"_index":200,"title":{},"body":{"injectables/AddressesService.html":{}}}],["31t00:00:00.000z",{"_index":1092,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["4",{"_index":2499,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":2317,"title":{},"body":{"dependencies.html":{}}}],["43",{"_index":2498,"title":{},"body":{"overview.html":{}}}],["43a5",{"_index":948,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{}}}],["4922",{"_index":1054,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["5",{"_index":1142,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/Review.html":{},"miscellaneous/variables.html":{}}}],["5'})@min(1",{"_index":1144,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["5.4.0",{"_index":2304,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":2272,"title":{},"body":{"coverage.html":{}}}],["500.000.000",{"_index":1082,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["6.0.0",{"_index":2301,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["647b5108a8a243e8191855b5",{"_index":2527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab415f4328bd3153ee211",{"_index":2536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab436f4328bd3153ee216",{"_index":2538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4d5f4328bd3153ee21b",{"_index":2540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4ebf4328bd3153ee220",{"_index":2543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab5a8072f2a2ef910638d",{"_index":2545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6d3fa16b294212e4033",{"_index":2547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6e7fa16b294212e4038",{"_index":2549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6fdfa16b294212e403d",{"_index":2552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab719fa16b294212e4042",{"_index":2554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab728fa16b294212e4047",{"_index":2556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab750fa16b294212e404c",{"_index":1255,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["648ad488dafdb9754f40b846",{"_index":2561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad499dafdb9754f40b84b",{"_index":2564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4a6dafdb9754f40b850",{"_index":2567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4ccdafdb9754f40b859",{"_index":2569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4d9dafdb9754f40b85e",{"_index":2571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4fedafdb9754f40b863",{"_index":1257,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["648ad511dafdb9754f40b868",{"_index":1258,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["648ad522dafdb9754f40b86d",{"_index":1259,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["648ad53bdafdb9754f40b872",{"_index":1260,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["648ad56ddafdb9754f40b87c",{"_index":1262,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["648ad59adafdb9754f40b881",{"_index":2585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5aedafdb9754f40b886",{"_index":2588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5c5dafdb9754f40b88b",{"_index":2590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5d4dafdb9754f40b890",{"_index":2593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5ebdafdb9754f40b895",{"_index":2595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad613dafdb9754f40b89a",{"_index":2597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad622dafdb9754f40b89f",{"_index":2600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad630dafdb9754f40b8a6",{"_index":2602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad640dafdb9754f40b8ab",{"_index":2605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad650dafdb9754f40b8b0",{"_index":2607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64d8c080a78a9c46126a8a2a",{"_index":574,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{}}}],["66acad58fc32612044cf6d0d",{"_index":1197,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["66acbd21063ecc329966db01",{"_index":1167,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["66acbe9d87b37e9a46ed0a2d",{"_index":1168,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["66ae2bf115e4b8f80d4d15c5",{"_index":1138,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["66b0455e98a0e7320cc312f7",{"_index":315,"title":{},"body":{"classes/ApplyAddressDto.html":{}}}],["66b090c57336945ce1a69ffd",{"_index":961,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["66b1907d501d62fae994efde",{"_index":1263,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["66b191a1f6b6fb427a86fbcf",{"_index":1264,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["66b191a9ec8b8a81d95f0529",{"_index":1265,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["66b191af653fc6a655b6bfb5",{"_index":1266,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["66b191b5574ad802a0589a87",{"_index":2609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66b1921c9fc65d4c44e67792",{"_index":2611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66b192270095b129a1d9bf29",{"_index":2612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66b1923badabf9c5dfe92b53",{"_index":2614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66b19254443d9a73d13e3c04",{"_index":2615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66b192b2cf1438d644e4b1d8",{"_index":1267,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["66b192c78f53552b5fce7df2",{"_index":2617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66b192dba213d537f77e9de5",{"_index":1268,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["66b192ece8ba550a7158c94a",{"_index":1269,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["66b19309350e28832fe8350b",{"_index":2619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66b1934e8101f94033fdd60d",{"_index":1270,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["66b1936b1d011920962d999c",{"_index":1271,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["66b1937104add905a56447d8",{"_index":1272,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["66b193826fe6774e942c2500",{"_index":2623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66b19f9e976a2992552002cf",{"_index":2525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66b1a039e463b2594905bd94",{"_index":2532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66b1a082dceab9ffa83859b2",{"_index":1253,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["66b1a0f083f52957f939db71",{"_index":1254,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["66b23378479f3a391f6de1d1",{"_index":1261,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["66b48f8f40dcef39a3b69366",{"_index":1256,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/variables.html":{}}}],["66b585d13bbbf0141a9d284a",{"_index":936,"title":{},"body":{"classes/CreateCartDto.html":{}}}],["66b585da09162457ad25baea",{"_index":937,"title":{},"body":{"classes/CreateCartDto.html":{}}}],["7.1.0",{"_index":2313,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":2300,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":2321,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1187,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["8.3.1",{"_index":2314,"title":{},"body":{"dependencies.html":{}}}],["83",{"_index":2271,"title":{},"body":{"coverage.html":{}}}],["870a",{"_index":1053,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["906a3aa4",{"_index":1052,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["9a8d",{"_index":949,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{}}}],["__v",{"_index":2531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":79,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/IUser.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["a418",{"_index":1055,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["abc",{"_index":919,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/UpdateOrderDto.html":{}}}],["abcxyz",{"_index":1155,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["access",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{}}}],["access_token",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{}}}],["accumulator",{"_index":1962,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["active",{"_index":2362,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["addbearerauth",{"_index":2640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["additem",{"_index":613,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["additem(@param('id",{"_index":657,"title":{},"body":{"controllers/CartsController.html":{}}}],["additem(id",{"_index":616,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["additional",{"_index":2062,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["address",{"_index":1,"title":{"classes/Address.html":{}},"body":{"classes/Address.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/CartsService.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"interfaces/IUser.html":{},"classes/User.html":{},"coverage.html":{}}}],["address.dto",{"_index":95,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"controllers/CartsController.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateOrderDto.html":{}}}],["address.dto.ts",{"_index":312,"title":{},"body":{"classes/ApplyAddressDto.html":{},"classes/CreateAddressDto.html":{},"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["address.dto.ts:12",{"_index":325,"title":{},"body":{"classes/ApplyAddressDto.html":{}}}],["address.dto.ts:13",{"_index":906,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.dto.ts:23",{"_index":925,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.dto.ts:33",{"_index":917,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.dto.ts:43",{"_index":912,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.name",{"_index":147,"title":{},"body":{"modules/AddressesModule.html":{},"classes/Cart.html":{}}}],["address.toobject",{"_index":194,"title":{},"body":{"injectables/AddressesService.html":{}}}],["address_id_not_exist",{"_index":2416,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["addressdocument",{"_index":38,"title":{},"body":{"classes/Address.html":{},"injectables/AddressesService.html":{},"miscellaneous/typealiases.html":{}}}],["addresses",{"_index":51,"title":{},"body":{"controllers/AddressesController.html":{},"miscellaneous/variables.html":{}}}],["addresses.controller",{"_index":142,"title":{},"body":{"modules/AddressesModule.html":{}}}],["addresses.service",{"_index":93,"title":{},"body":{"controllers/AddressesController.html":{},"modules/AddressesModule.html":{}}}],["addresses/addresses.module",{"_index":679,"title":{},"body":{"modules/CartsModule.html":{}}}],["addresses/addresses.service",{"_index":712,"title":{},"body":{"injectables/CartsService.html":{},"injectables/OrdersService.html":{}}}],["addresses/dto/apply",{"_index":644,"title":{},"body":{"controllers/CartsController.html":{}}}],["addressescontroller",{"_index":47,"title":{"controllers/AddressesController.html":{}},"body":{"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"coverage.html":{}}}],["addressesmodule",{"_index":127,"title":{"modules/AddressesModule.html":{}},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["addressesservice",{"_index":92,"title":{"injectables/AddressesService.html":{}},"body":{"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"injectables/CartsService.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["addressid",{"_index":313,"title":{},"body":{"classes/ApplyAddressDto.html":{},"injectables/CartsService.html":{}}}],["addressmodel",{"_index":157,"title":{},"body":{"injectables/AddressesService.html":{}}}],["addressschema",{"_index":42,"title":{},"body":{"classes/Address.html":{},"modules/AddressesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addressservice",{"_index":691,"title":{},"body":{"injectables/CartsService.html":{}}}],["addsecurityrequirements('token",{"_index":2646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":1160,"title":{},"body":{"classes/CreateRoleDto.html":{},"injectables/DatabaseService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["admin_role",{"_index":1234,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminemail",{"_index":1276,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/UsersService.html":{}}}],["adminpassword",{"_index":1278,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["age",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["aliases",{"_index":2504,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":202,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["allow",{"_index":2660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowinfinity",{"_index":605,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{}}}],["allownan",{"_index":583,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{}}}],["ang",{"_index":2123,"title":{},"body":{"classes/UpdatePaymentStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["any)._id",{"_index":791,"title":{},"body":{"injectables/CartsService.html":{}}}],["any)._id.tostring",{"_index":763,"title":{},"body":{"injectables/CartsService.html":{}}}],["api",{"_index":1512,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api/v1/addresses",{"_index":2573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/addresses/:id",{"_index":2577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/auth/account",{"_index":2534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/auth/login",{"_index":2526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/auth/refresh",{"_index":2535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/auth/signup",{"_index":2533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/carts",{"_index":2580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/carts/:id",{"_index":2582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/carts/:id/addresses",{"_index":2584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/carts/:id/promotions",{"_index":2583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/categories",{"_index":2562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/categories/:id",{"_index":2565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/:filename",{"_index":2560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":2558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/orders",{"_index":2620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/orders/:id",{"_index":2622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":2586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":2591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/products",{"_index":2537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/products/:id",{"_index":2541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/promotions",{"_index":2610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/promotions/:id",{"_index":2613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/reviews",{"_index":2616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/reviews/:id",{"_index":2618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":2598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":2603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":990,"title":{},"body":{"classes/CreatePermissionDto.html":{},"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":2550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/{tên",{"_index":993,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["api_param_query",{"_index":1473,"title":{},"body":{"controllers/OrdersController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibody",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{}}}],["apibody({type",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":1295,"title":{},"body":{"classes/FileUploadDto.html":{},"controllers/FilesController.html":{}}}],["apiconsumes('multipart/form",{"_index":1323,"title":{},"body":{"controllers/FilesController.html":{}}}],["apiparam",{"_index":823,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["apiparam(api_param_query",{"_index":2166,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiparam({name",{"_index":1600,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["apipath",{"_index":988,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":326,"title":{},"body":{"classes/ApplyAddressDto.html":{},"classes/ApplyPromotionDto.html":{},"classes/CartItemDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/FileUploadDto.html":{},"classes/QueryDto.html":{},"classes/RemoveCartItemsDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{}}}],["apiproperty({description",{"_index":571,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateProductDto.html":{}}}],["apiproperty({enum",{"_index":972,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{}}}],["apiproperty({example",{"_index":314,"title":{},"body":{"classes/ApplyAddressDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/RemoveCartItemsDto.html":{}}}],["apiproperty({minimum",{"_index":577,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{}}}],["apiproperty({required",{"_index":1865,"title":{},"body":{"classes/QueryDto.html":{}}}],["apiproperty({type",{"_index":558,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/FileUploadDto.html":{},"classes/UpdateOrderDto.html":{}}}],["apiquery",{"_index":1472,"title":{},"body":{"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"classes/QueryDto.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{}}}],["apiquery(api_param_query",{"_index":1479,"title":{},"body":{"controllers/OrdersController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{}}}],["apitags",{"_index":99,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/AuthController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/FilesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apitags('addresses",{"_index":105,"title":{},"body":{"controllers/AddressesController.html":{}}}],["apitags('authencation",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('carts",{"_index":650,"title":{},"body":{"controllers/CartsController.html":{}}}],["apitags('categories",{"_index":824,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["apitags('files",{"_index":1320,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags('orders",{"_index":1476,"title":{},"body":{"controllers/OrdersController.html":{}}}],["apitags('permissions",{"_index":1623,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["apitags('products",{"_index":1712,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apitags('promotions",{"_index":1805,"title":{},"body":{"controllers/PromotionsController.html":{}}}],["apitags('reviews",{"_index":1916,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["apitags('roles",{"_index":1997,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('users",{"_index":2164,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":239,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applyaddress",{"_index":614,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["applyaddress(id",{"_index":621,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["applyaddressdto",{"_index":310,"title":{"classes/ApplyAddressDto.html":{}},"body":{"classes/ApplyAddressDto.html":{},"controllers/CartsController.html":{},"coverage.html":{}}}],["applyaddressdto.addressid",{"_index":670,"title":{},"body":{"controllers/CartsController.html":{}}}],["applycoupon",{"_index":615,"title":{},"body":{"controllers/CartsController.html":{}}}],["applycoupon(id",{"_index":626,"title":{},"body":{"controllers/CartsController.html":{}}}],["applypromotion",{"_index":683,"title":{},"body":{"injectables/CartsService.html":{}}}],["applypromotion(id",{"_index":698,"title":{},"body":{"injectables/CartsService.html":{}}}],["applypromotiondto",{"_index":333,"title":{"classes/ApplyPromotionDto.html":{}},"body":{"classes/ApplyPromotionDto.html":{},"controllers/CartsController.html":{},"coverage.html":{}}}],["applypromotiondto.coupon",{"_index":667,"title":{},"body":{"controllers/CartsController.html":{}}}],["appmodule",{"_index":241,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":257,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":1511,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["aqp(query",{"_index":1537,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["args",{"_index":542,"title":{},"body":{"injectables/CartExistsRule.html":{},"injectables/ProductExistsRule.html":{}}}],["args.value",{"_index":1695,"title":{},"body":{"injectables/ProductExistsRule.html":{}}}],["argumentmetadata",{"_index":2250,"title":{},"body":{"injectables/ValidateObjectIdPipe.html":{}}}],["argumentshost",{"_index":212,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["array",{"_index":939,"title":{},"body":{"classes/CreateCartDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{}}}],["array'})@isenum(colorstype",{"_index":1025,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["array'})@isenum(sizestype",{"_index":1044,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["array'})@ismongoid({each",{"_index":1164,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["array'})@validatenested({each",{"_index":930,"title":{},"body":{"classes/CreateCartDto.html":{}}}],["async",{"_index":53,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CartExistsRule.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"controllers/FilesController.html":{},"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":419,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.decorator",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{},"classes/JwtAuthGuard.html":{}}}],["auth.guard",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":1342,"title":{},"body":{"classes/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:13",{"_index":1351,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["auth.guard.ts:23",{"_index":1354,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["auth.guard.ts:8",{"_index":1348,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["auth.service",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":343,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":1358,"title":{},"body":{"classes/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":1343,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1398,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":245,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":1882,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"properties.html":{}}}],["authservice",{"_index":381,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":2494,"title":{},"body":{"modules.html":{}}}],["await",{"_index":112,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CartExistsRule.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["b",{"_index":905,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["backend",{"_index":2451,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectIdPipe.html":{}}}],["badrequestexception('bạn",{"_index":1949,"title":{},"body":{"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('email",{"_index":2209,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception('invalid",{"_index":736,"title":{},"body":{"injectables/CartsService.html":{}}}],["badrequestexception('sản",{"_index":1946,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["badrequestexception(`role",{"_index":2035,"title":{},"body":{"injectables/RolesService.html":{}}}],["badrequestexception(custom_messages.category_exist",{"_index":860,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["badrequestexception(custom_messages.category_has_product",{"_index":874,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["badrequestexception(custom_messages.error_mongo_id",{"_index":2254,"title":{},"body":{"injectables/ValidateObjectIdPipe.html":{}}}],["badrequestexception(custom_messages.invalid_discount_date_range",{"_index":1842,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["badrequestexception(custom_messages.invalid_discount_percentage",{"_index":1844,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["badrequestexception(custom_messages.invalid_token",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception(custom_messages.order_cannot_update",{"_index":1562,"title":{},"body":{"injectables/OrdersService.html":{}}}],["badrequestexception(custom_messages.order_status_invalid",{"_index":1572,"title":{},"body":{"injectables/OrdersService.html":{}}}],["badrequestexception(custom_messages.permission_exist",{"_index":1654,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["badrequestexception(custom_messages.product_exist",{"_index":1757,"title":{},"body":{"injectables/ProductsService.html":{}}}],["badrequestexception(custom_messages.promotion_exist",{"_index":1841,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["badrequestexception(custom_messages.promotion_expired",{"_index":1859,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["badrequestexception(custom_messages.promotion_not_exist",{"_index":1849,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["bao",{"_index":1192,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/TransformInterceptor.html":{}}}],["based",{"_index":2079,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["bcrypt",{"_index":2204,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.comparesync(password",{"_index":2231,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(password",{"_index":2230,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcryptjs",{"_index":2305,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":2643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":2644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["binary",{"_index":1296,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["binary'})@isnotempty({message",{"_index":1293,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["biến",{"_index":2461,"title":{},"body":{"index.html":{}}}],["biệt",{"_index":1195,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["black",{"_index":2336,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blue",{"_index":2351,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["body",{"_index":87,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/AuthController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":891,"title":{},"body":{"classes/Category.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateRoleDto.html":{},"classes/Order.html":{},"classes/Permission.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{},"classes/Review.html":{},"classes/Role.html":{},"interfaces/SwaggerDocumentOptions.html":{},"classes/User.html":{}}}],["boolean'})@isnotempty({message",{"_index":1158,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["bootstrap",{"_index":132,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/CategoriesModule.html":{},"modules/DatabaseModule.html":{},"modules/FilesModule.html":{},"modules/OrdersModule.html":{},"modules/PermissionsModule.html":{},"modules/ProductsModule.html":{},"modules/PromotionsModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brown",{"_index":2342,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["browse",{"_index":2492,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2489,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1602,"title":{},"body":{"controllers/PermissionsController.html":{},"classes/QueryDto.html":{},"miscellaneous/variables.html":{}}}],["bán",{"_index":1037,"title":{},"body":{"classes/CreateProductDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bại",{"_index":2380,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bạn",{"_index":2403,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bản",{"_index":2031,"title":{},"body":{"injectables/RolesService.html":{}}}],["bảo",{"_index":1020,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["bắt",{"_index":1107,"title":{},"body":{"classes/CreatePromotionDto.html":{},"miscellaneous/enumerations.html":{}}}],["bằng",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["bởi",{"_index":2575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c",{"_index":566,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/FileUploadDto.html":{},"controllers/PermissionsController.html":{},"classes/RemoveCartItemsDto.html":{},"injectables/RolesService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["calculatediscountamount",{"_index":1821,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["calculatediscountamount(coupon",{"_index":1827,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["calculateshippingcost",{"_index":151,"title":{},"body":{"injectables/AddressesService.html":{}}}],["calculateshippingcost(province",{"_index":158,"title":{},"body":{"injectables/AddressesService.html":{}}}],["calculatetotalamount",{"_index":684,"title":{},"body":{"injectables/CartsService.html":{}}}],["calculatetotalamount(items",{"_index":700,"title":{},"body":{"injectables/CartsService.html":{}}}],["callhandler",{"_index":2088,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["cam",{"_index":2348,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["canactivate",{"_index":1344,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":1349,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["cancelled",{"_index":2381,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["care_instructions",{"_index":1010,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["cart",{"_index":505,"title":{"classes/Cart.html":{}},"body":{"classes/Cart.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"classes/CreateCartDto.html":{},"injectables/OrdersService.html":{},"classes/RemoveCartItemsDto.html":{},"coverage.html":{}}}],["cart.coupon",{"_index":792,"title":{},"body":{"injectables/CartsService.html":{}}}],["cart.dto",{"_index":642,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["cart.dto.ts",{"_index":927,"title":{},"body":{"classes/CreateCartDto.html":{},"coverage.html":{}}}],["cart.dto.ts:30",{"_index":932,"title":{},"body":{"classes/CreateCartDto.html":{}}}],["cart.items.find",{"_index":747,"title":{},"body":{"injectables/CartsService.html":{}}}],["cart.items.find(item",{"_index":762,"title":{},"body":{"injectables/CartsService.html":{}}}],["cart.items.reduce",{"_index":771,"title":{},"body":{"injectables/CartsService.html":{}}}],["cart.name",{"_index":681,"title":{},"body":{"modules/CartsModule.html":{}}}],["cart.shipping_address",{"_index":778,"title":{},"body":{"injectables/CartsService.html":{}}}],["cart['items",{"_index":793,"title":{},"body":{"injectables/CartsService.html":{}}}],["cart_exist",{"_index":2415,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cart_id_not_exist",{"_index":2413,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cart_item_id_not_exist",{"_index":2414,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cartdocument",{"_index":525,"title":{},"body":{"classes/Cart.html":{},"injectables/CartsService.html":{},"miscellaneous/typealiases.html":{}}}],["cartexists",{"_index":549,"title":{},"body":{"injectables/CartExistsRule.html":{},"classes/CreateOrderDto.html":{},"injectables/ProductExistsRule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["cartexists(validationoptions",{"_index":2443,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cartexistsrule",{"_index":258,"title":{"injectables/CartExistsRule.html":{}},"body":{"modules/AppModule.html":{},"injectables/CartExistsRule.html":{},"coverage.html":{},"overview.html":{}}}],["cartid",{"_index":958,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrdersService.html":{}}}],["cartitem",{"_index":761,"title":{},"body":{"injectables/CartsService.html":{}}}],["cartitemdto",{"_index":554,"title":{"classes/CartItemDto.html":{}},"body":{"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"classes/CreateCartDto.html":{},"coverage.html":{}}}],["cartitemexist",{"_index":746,"title":{},"body":{"injectables/CartsService.html":{}}}],["cartmodel",{"_index":695,"title":{},"body":{"injectables/CartsService.html":{}}}],["cartremovetype",{"_index":714,"title":{},"body":{"injectables/CartsService.html":{},"classes/RemoveCartItemsDto.html":{},"miscellaneous/enumerations.html":{}}}],["cartremovetype.all",{"_index":760,"title":{},"body":{"injectables/CartsService.html":{}}}],["cartremovetype.descrease",{"_index":767,"title":{},"body":{"injectables/CartsService.html":{}}}],["cartremovetype.single",{"_index":765,"title":{},"body":{"injectables/CartsService.html":{}}}],["carts",{"_index":612,"title":{},"body":{"controllers/CartsController.html":{},"miscellaneous/variables.html":{}}}],["carts.controller",{"_index":676,"title":{},"body":{"modules/CartsModule.html":{}}}],["carts.service",{"_index":641,"title":{},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{}}}],["carts/carts.module",{"_index":1494,"title":{},"body":{"modules/OrdersModule.html":{}}}],["carts/carts.service",{"_index":1514,"title":{},"body":{"injectables/OrdersService.html":{}}}],["cartschema",{"_index":530,"title":{},"body":{"classes/Cart.html":{},"modules/CartsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cartscontroller",{"_index":610,"title":{"controllers/CartsController.html":{}},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{},"coverage.html":{}}}],["cartservice",{"_index":1499,"title":{},"body":{"injectables/OrdersService.html":{}}}],["cartsmodule",{"_index":246,"title":{"modules/CartsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["cartsservice",{"_index":537,"title":{"injectables/CartsService.html":{}},"body":{"injectables/CartExistsRule.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["catch",{"_index":206,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/CartExistsRule.html":{},"injectables/ProductExistsRule.html":{}}}],["catch(exception",{"_index":210,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch(mongoerror",{"_index":221,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["categories",{"_index":803,"title":{},"body":{"controllers/CategoriesController.html":{},"miscellaneous/variables.html":{}}}],["categories.controller",{"_index":835,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.service",{"_index":821,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories/categories.module",{"_index":1726,"title":{},"body":{"modules/ProductsModule.html":{}}}],["categories/categories.service",{"_index":1748,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categoriescontroller",{"_index":801,"title":{"controllers/CategoriesController.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":247,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["categoriesservice",{"_index":820,"title":{"injectables/CategoriesService.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["category",{"_index":836,"title":{"classes/Category.html":{}},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreatePermissionDto.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["category.dto",{"_index":822,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/UpdateCategoryDto.html":{}}}],["category.dto.ts",{"_index":942,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:12",{"_index":954,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:21",{"_index":953,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:30",{"_index":945,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.name",{"_index":839,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Product.html":{}}}],["category_exist",{"_index":2406,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["category_has_product",{"_index":2408,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["category_id_not_exist",{"_index":2407,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["categorydocument",{"_index":852,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/Category.html":{},"miscellaneous/typealiases.html":{}}}],["categoryid",{"_index":1011,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/ProductsService.html":{}}}],["categorymodel",{"_index":845,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categoryschema",{"_index":837,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Category.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cb",{"_index":2662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb(null",{"_index":2665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ch",{"_index":63,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"classes/ApplyAddressDto.html":{},"controllers/CartsController.html":{},"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["changes",{"_index":192,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/OrdersService.html":{},"classes/Utils.html":{}}}],["changes[key",{"_index":2244,"title":{},"body":{"classes/Utils.html":{}}}],["check",{"_index":2658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkexistpermissions",{"_index":1640,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["checkexistpermissions(permissions",{"_index":1643,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["cho",{"_index":969,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreatePromotionDto.html":{},"injectables/ReviewsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["chuyên",{"_index":2636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chuyển",{"_index":1102,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["chuẩn",{"_index":2389,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["chính",{"_index":967,"title":{},"body":{"classes/CreateOrderDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["chưa",{"_index":1162,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["chất",{"_index":1028,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["chọn",{"_index":2471,"title":{},"body":{"index.html":{}}}],["chứa",{"_index":998,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["chức",{"_index":2455,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/Address.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApplyAddressDto.html":{},"classes/ApplyPromotionDto.html":{},"classes/Cart.html":{},"classes/CartItemDto.html":{},"classes/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/FileUploadDto.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"classes/Permission.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"classes/QueryDto.html":{},"classes/RegisterUserDto.html":{},"classes/RemoveCartItemsDto.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePromotionDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/Utils.html":{}},"body":{"classes/Address.html":{},"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyAddressDto.html":{},"classes/ApplyPromotionDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/CartExistsRule.html":{},"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"modules/CommonModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabaseController.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"controllers/PromotionsController.html":{},"modules/PromotionsModule.html":{},"injectables/PromotionsService.html":{},"classes/QueryDto.html":{},"classes/RegisterUserDto.html":{},"classes/RemoveCartItemsDto.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePromotionDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"injectables/ValidateObjectIdPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Address.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApplyAddressDto.html":{},"classes/ApplyPromotionDto.html":{},"classes/Cart.html":{},"classes/CartItemDto.html":{},"classes/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/FileUploadDto.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"classes/Permission.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"classes/QueryDto.html":{},"classes/RegisterUserDto.html":{},"classes/RemoveCartItemsDto.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePromotionDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/Utils.html":{},"overview.html":{}}}],["cloud",{"_index":2480,"title":{},"body":{"index.html":{}}}],["cluster_addressesmodule",{"_index":135,"title":{},"body":{"modules/AddressesModule.html":{},"overview.html":{}}}],["cluster_addressesmodule_exports",{"_index":136,"title":{},"body":{"modules/AddressesModule.html":{},"overview.html":{}}}],["cluster_addressesmodule_providers",{"_index":137,"title":{},"body":{"modules/AddressesModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":414,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":416,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":415,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cartsmodule",{"_index":671,"title":{},"body":{"modules/CartsModule.html":{},"overview.html":{}}}],["cluster_cartsmodule_exports",{"_index":672,"title":{},"body":{"modules/CartsModule.html":{},"overview.html":{}}}],["cluster_cartsmodule_imports",{"_index":674,"title":{},"body":{"modules/CartsModule.html":{}}}],["cluster_cartsmodule_providers",{"_index":673,"title":{},"body":{"modules/CartsModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":831,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_exports",{"_index":833,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_providers",{"_index":832,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":1208,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_providers",{"_index":1209,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":1330,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":1331,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":1487,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_exports",{"_index":1490,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_imports",{"_index":1489,"title":{},"body":{"modules/OrdersModule.html":{}}}],["cluster_ordersmodule_providers",{"_index":1488,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule",{"_index":1632,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_exports",{"_index":1633,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":1634,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":1719,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_exports",{"_index":1721,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_providers",{"_index":1720,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_promotionsmodule",{"_index":1812,"title":{},"body":{"modules/PromotionsModule.html":{},"overview.html":{}}}],["cluster_promotionsmodule_exports",{"_index":1814,"title":{},"body":{"modules/PromotionsModule.html":{},"overview.html":{}}}],["cluster_promotionsmodule_providers",{"_index":1813,"title":{},"body":{"modules/PromotionsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule",{"_index":1924,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule_exports",{"_index":1925,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule_imports",{"_index":1926,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["cluster_reviewsmodule_providers",{"_index":1927,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":2004,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":2005,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":2006,"title":{},"body":{"modules/RolesModule.html":{}}}],["cluster_usersmodule",{"_index":2171,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":2174,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":2172,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":2173,"title":{},"body":{"modules/UsersModule.html":{}}}],["cod",{"_index":2373,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["code",{"_index":1834,"title":{},"body":{"injectables/PromotionsService.html":{},"injectables/TransformInterceptor.html":{}}}],["color",{"_index":527,"title":{},"body":{"classes/Cart.html":{},"classes/CartItemDto.html":{},"injectables/CartsService.html":{},"classes/CreateCartDto.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{}}}],["color_not_exist",{"_index":2430,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["colors",{"_index":1012,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["colorstype",{"_index":560,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{},"miscellaneous/enumerations.html":{}}}],["comment",{"_index":1131,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/Review.html":{}}}],["commerce",{"_index":2450,"title":{},"body":{"index.html":{}}}],["common/validators/cart",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["common/validators/product",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":897,"title":{"modules/CommonModule.html":{}},"body":{"modules/CommonModule.html":{},"modules.html":{}}}],["compodoc",{"_index":2488,"title":{},"body":{"index.html":{}}}],["condition",{"_index":1058,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{}}}],["config",{"_index":2276,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabaseService.html":{},"classes/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":437,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{}}}],["configservice.get('mongodb_uri",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmed",{"_index":2437,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["connection",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(qs",{"_index":1919,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["console.warn(query",{"_index":2216,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.warn(registeruserdto",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{}}}],["const",{"_index":41,"title":{},"body":{"classes/Address.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ApplyPromotionDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"injectables/DatabaseService.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Review.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":153,"title":{},"body":{"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"injectables/CartExistsRule.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductExistsRule.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(addressmodel",{"_index":154,"title":{},"body":{"injectables/AddressesService.html":{}}}],["constructor(authservice",{"_index":1400,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(cartmodel",{"_index":688,"title":{},"body":{"injectables/CartsService.html":{}}}],["constructor(cartsservice",{"_index":536,"title":{},"body":{"injectables/CartExistsRule.html":{}}}],["constructor(categorymodel",{"_index":842,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["constructor(configservice",{"_index":1380,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["constructor(httpadapterhost",{"_index":207,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(ordermodel",{"_index":1498,"title":{},"body":{"injectables/OrdersService.html":{}}}],["constructor(permissionmodel",{"_index":1641,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":107,"title":{},"body":{"controllers/AddressesController.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/CartExistsRule.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/DatabaseController.html":{},"classes/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(productmodel",{"_index":1732,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(productsservice",{"_index":1692,"title":{},"body":{"injectables/ProductExistsRule.html":{}}}],["constructor(promotionmodel",{"_index":1824,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["constructor(reflector",{"_index":1346,"title":{},"body":{"classes/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(reviewmodel",{"_index":1934,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["constructor(rolemodel",{"_index":1222,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/RolesService.html":{}}}],["constructor(usermodel",{"_index":2183,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":1352,"title":{},"body":{"classes/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":1364,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":1363,"title":{},"body":{"classes/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":1366,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":2105,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":46,"title":{"controllers/AddressesController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/DatabaseController.html":{},"controllers/FilesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AddressesController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/DatabaseController.html":{},"controllers/FilesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('addresses",{"_index":106,"title":{},"body":{"controllers/AddressesController.html":{}}}],["controller('auth",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('carts",{"_index":651,"title":{},"body":{"controllers/CartsController.html":{}}}],["controller('categories",{"_index":825,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["controller('database",{"_index":1207,"title":{},"body":{"controllers/DatabaseController.html":{}}}],["controller('files",{"_index":1321,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('orders",{"_index":1477,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controller('permissions",{"_index":1624,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('products",{"_index":1713,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('promotions",{"_index":1806,"title":{},"body":{"controllers/PromotionsController.html":{}}}],["controller('reviews",{"_index":1917,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["controller('roles",{"_index":1998,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('users",{"_index":2165,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllerkey",{"_index":2080,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["controllerkey_methodkey",{"_index":2074,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["controllers",{"_index":48,"title":{},"body":{"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"controllers/DatabaseController.html":{},"modules/DatabaseModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/PromotionsController.html":{},"modules/PromotionsModule.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":2309,"title":{},"body":{"dependencies.html":{}}}],["cors",{"_index":2485,"title":{},"body":{"index.html":{}}}],["countpermission",{"_index":1242,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["countrole",{"_index":1244,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["countuser",{"_index":1246,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["coupon",{"_index":339,"title":{},"body":{"classes/ApplyPromotionDto.html":{},"classes/Cart.html":{},"injectables/CartsService.html":{},"classes/CreatePromotionDto.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{}}}],["couponstatus",{"_index":1110,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{},"miscellaneous/enumerations.html":{}}}],["couponstatus.active",{"_index":1858,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["coverage",{"_index":2255,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":54,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"classes/ApplyPromotionDto.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/LoginUserDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePromotionDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":110,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["create(createaddressdto",{"_index":162,"title":{},"body":{"injectables/AddressesService.html":{}}}],["create(createcartdto",{"_index":630,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["create(createcategorydto",{"_index":805,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["create(createorderdto",{"_index":1450,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["create(createpermissiondto",{"_index":1595,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["create(createproductdto",{"_index":1700,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["create(createpromotiondto",{"_index":1797,"title":{},"body":{"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{}}}],["create(createreviewdto",{"_index":1902,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["create(createroledto",{"_index":1981,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createshippingaddressdto",{"_index":58,"title":{},"body":{"controllers/AddressesController.html":{}}}],["create(createuserdto",{"_index":2156,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createaddressdto",{"_index":59,"title":{"classes/CreateAddressDto.html":{}},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"classes/CreateAddressDto.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["createcartdto",{"_index":631,"title":{"classes/CreateCartDto.html":{}},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"classes/CreateCartDto.html":{},"coverage.html":{}}}],["createcategorydto",{"_index":806,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["createcategorydto.name",{"_index":859,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["createdat",{"_index":879,"title":{},"body":{"classes/Category.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":863,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{},"classes/Review.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["createorderdto",{"_index":955,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["createparamdecorator((data",{"_index":2679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":985,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createpermissiondto.apipath",{"_index":1652,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["createpermissiondto.method",{"_index":1653,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["createproductdto",{"_index":1007,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createpromotiondto",{"_index":341,"title":{"classes/CreatePromotionDto.html":{}},"body":{"classes/ApplyPromotionDto.html":{},"classes/CreatePromotionDto.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"classes/UpdatePromotionDto.html":{},"coverage.html":{}}}],["createrefreshtoken",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["createrefreshtoken(payload",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["createreviewdto",{"_index":1128,"title":{"classes/CreateReviewDto.html":{}},"body":{"classes/CreateReviewDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["createroledto",{"_index":1148,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createshippingaddressdto",{"_index":68,"title":{},"body":{"controllers/AddressesController.html":{}}}],["createuserdto",{"_index":465,"title":{"classes/CreateUserDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["ctx",{"_index":224,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":2680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cung",{"_index":2452,"title":{},"body":{"index.html":{}}}],["current",{"_index":1538,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["current=1&pagesize=2&method=get&sort=createdat",{"_index":1601,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["current=1&pagesize=2&populate=role&fields",{"_index":1866,"title":{},"body":{"classes/QueryDto.html":{},"miscellaneous/variables.html":{}}}],["currentstatus",{"_index":1568,"title":{},"body":{"injectables/OrdersService.html":{}}}],["custom",{"_index":2075,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["custom_messages",{"_index":179,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"injectables/CartExistsRule.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"classes/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductExistsRule.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ValidateObjectIdPipe.html":{},"miscellaneous/enumerations.html":{}}}],["custom_messages.cart_id_not_exist",{"_index":553,"title":{},"body":{"injectables/CartExistsRule.html":{}}}],["customer",{"_index":2385,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["customer_full_name",{"_index":1412,"title":{},"body":{"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderDto.html":{}}}],["customer_group",{"_index":1125,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/Promotion.html":{}}}],["customer_phone_number",{"_index":1413,"title":{},"body":{"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderDto.html":{}}}],["các",{"_index":999,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["còn",{"_index":2423,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["côi",{"_index":2411,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["công",{"_index":2475,"title":{},"body":{"index.html":{}}}],["cấp",{"_index":2453,"title":{},"body":{"index.html":{}}}],["cập",{"_index":2043,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["của",{"_index":813,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/CreatePermissionDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/PermissionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"index.html":{}}}],["d",{"_index":1870,"title":{},"body":{"classes/QueryDto.html":{},"miscellaneous/variables.html":{}}}],["danh",{"_index":73,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/CategoriesController.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseService.html":{},"controllers/FilesController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["data')@apibody({description",{"_index":1306,"title":{},"body":{"controllers/FilesController.html":{}}}],["data.ts",{"_index":2277,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data1",{"_index":2238,"title":{},"body":{"classes/Utils.html":{}}}],["data1[key",{"_index":2242,"title":{},"body":{"classes/Utils.html":{}}}],["data2",{"_index":2236,"title":{},"body":{"classes/Utils.html":{}}}],["data2[key",{"_index":2243,"title":{},"body":{"classes/Utils.html":{}}}],["database",{"_index":1204,"title":{},"body":{"controllers/DatabaseController.html":{}}}],["database.controller",{"_index":1211,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database.service",{"_index":1206,"title":{},"body":{"controllers/DatabaseController.html":{},"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["databasecontroller",{"_index":1202,"title":{"controllers/DatabaseController.html":{}},"body":{"controllers/DatabaseController.html":{},"modules/DatabaseModule.html":{},"coverage.html":{}}}],["databasemodule",{"_index":248,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["databaseservice",{"_index":1205,"title":{"injectables/DatabaseService.html":{}},"body":{"controllers/DatabaseController.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"coverage.html":{},"overview.html":{}}}],["databse",{"_index":2479,"title":{},"body":{"index.html":{}}}],["date",{"_index":883,"title":{},"body":{"classes/Category.html":{},"classes/CreatePromotionDto.html":{},"classes/Order.html":{},"classes/Permission.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["date'})@mindate(new",{"_index":1097,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["date().toisostring",{"_index":234,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["declarations",{"_index":131,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/CategoriesModule.html":{},"modules/DatabaseModule.html":{},"modules/FilesModule.html":{},"modules/OrdersModule.html":{},"modules/PermissionsModule.html":{},"modules/ProductsModule.html":{},"modules/PromotionsModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"classes/Address.html":{},"controllers/AddressesController.html":{},"classes/ApplyAddressDto.html":{},"controllers/AuthController.html":{},"classes/Cart.html":{},"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"classes/Promotion.html":{},"controllers/PromotionsController.html":{},"classes/QueryDto.html":{},"classes/RemoveCartItemsDto.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["decorators/response.decorator",{"_index":2097,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["decrease",{"_index":1877,"title":{},"body":{"classes/RemoveCartItemsDto.html":{},"miscellaneous/enumerations.html":{}}}],["deepscanroutes",{"_index":2052,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["def",{"_index":923,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/UpdateOrderDto.html":{}}}],["default",{"_index":510,"title":{},"body":{"classes/Cart.html":{},"injectables/DatabaseService.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"interfaces/SwaggerDocumentOptions.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":534,"title":{},"body":{"injectables/CartExistsRule.html":{},"injectables/ProductExistsRule.html":{}}}],["defaultmessage(args",{"_index":539,"title":{},"body":{"injectables/CartExistsRule.html":{},"injectables/ProductExistsRule.html":{}}}],["defaultsort",{"_index":1548,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["defined",{"_index":20,"title":{},"body":{"classes/Address.html":{},"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AppService.html":{},"classes/ApplyAddressDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/CartExistsRule.html":{},"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"classes/QueryDto.html":{},"classes/RemoveCartItemsDto.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"injectables/ValidateObjectIdPipe.html":{}}}],["delete",{"_index":90,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"modules/AppModule.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"controllers/FilesController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete(':filename",{"_index":1327,"title":{},"body":{"controllers/FilesController.html":{}}}],["delete(':filename')@responsemessage('xóa",{"_index":1301,"title":{},"body":{"controllers/FilesController.html":{}}}],["delete(':id",{"_index":122,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/CategoriesController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('xóa",{"_index":77,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/UsersController.html":{}}}],["delete(':id/items/:itemid",{"_index":659,"title":{},"body":{"controllers/CartsController.html":{}}}],["delete(':id/items/:itemid')@responsemessage('xóa",{"_index":638,"title":{},"body":{"controllers/CartsController.html":{}}}],["delete(@param('filename",{"_index":1328,"title":{},"body":{"controllers/FilesController.html":{}}}],["delete(filename",{"_index":1300,"title":{},"body":{"controllers/FilesController.html":{}}}],["deleted",{"_index":2651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletedat",{"_index":880,"title":{},"body":{"classes/Category.html":{},"classes/Order.html":{},"classes/Permission.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["deletedby",{"_index":876,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{},"classes/Review.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["deletefilefromdiskstorage",{"_index":1315,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deletefilefromdiskstorage(filename",{"_index":1329,"title":{},"body":{"controllers/FilesController.html":{}}}],["delivered",{"_index":2439,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":129,"title":{"dependencies.html":{}},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/CategoriesModule.html":{},"modules/DatabaseModule.html":{},"modules/FilesModule.html":{},"modules/OrdersModule.html":{},"modules/PermissionsModule.html":{},"modules/ProductsModule.html":{},"modules/PromotionsModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descrease",{"_index":2334,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["description",{"_index":316,"title":{},"body":{"classes/ApplyAddressDto.html":{},"classes/CartItemDto.html":{},"classes/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"controllers/FilesController.html":{},"controllers/PermissionsController.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"classes/QueryDto.html":{},"classes/Role.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["dest",{"_index":2652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["destination",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["discount_amount",{"_index":1059,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{}}}],["discount_type",{"_index":1060,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{}}}],["discountamount",{"_index":785,"title":{},"body":{"injectables/CartsService.html":{},"interfaces/OrderSummary.html":{}}}],["discounttype",{"_index":1084,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{},"miscellaneous/enumerations.html":{}}}],["discounttype.fixed_amount",{"_index":1843,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["diskstorage",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document",{"_index":1516,"title":{},"body":{"injectables/OrdersService.html":{},"classes/Promotion.html":{}}}],["document).toobject",{"_index":1577,"title":{},"body":{"injectables/OrdersService.html":{}}}],["documentation",{"_index":2256,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":2631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documents",{"_index":1874,"title":{},"body":{"classes/QueryDto.html":{},"miscellaneous/variables.html":{}}}],["documents'})@isoptional()@isstring({message",{"_index":1872,"title":{},"body":{"classes/QueryDto.html":{}}}],["dto/cart",{"_index":646,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["dto/create",{"_index":94,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/file",{"_index":1318,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto/remove",{"_index":648,"title":{},"body":{"controllers/CartsController.html":{}}}],["dto/update",{"_index":96,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dung",{"_index":1136,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["duy",{"_index":2103,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["dõi",{"_index":2466,"title":{},"body":{"index.html":{}}}],["dùng",{"_index":992,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"controllers/UsersController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dơn",{"_index":2621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dương",{"_index":2353,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dẫn",{"_index":1019,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["dụng",{"_index":623,"title":{},"body":{"controllers/CartsController.html":{},"classes/CreatePromotionDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":552,"title":{},"body":{"injectables/CartExistsRule.html":{},"injectables/ProductExistsRule.html":{},"index.html":{}}}],["e2ccb489",{"_index":946,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{}}}],["each",{"_index":940,"title":{},"body":{"classes/CreateCartDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{}}}],["email",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"interfaces/IUser.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Review.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["email'})@isnotempty({message",{"_index":1180,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["en",{"_index":2337,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enable",{"_index":2654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end_date",{"_index":1061,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{}}}],["enum",{"_index":559,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/Promotion.html":{},"classes/RemoveCartItemsDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{}}}],["enumerations",{"_index":2324,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":1024,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["enums/custom",{"_index":548,"title":{},"body":{"injectables/CartExistsRule.html":{},"injectables/ProductExistsRule.html":{},"injectables/ValidateObjectIdPipe.html":{}}}],["err",{"_index":1355,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["error_mongo_id",{"_index":2405,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error_msg",{"_index":229,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["example",{"_index":331,"title":{},"body":{"classes/ApplyAddressDto.html":{},"classes/CartItemDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/PermissionsController.html":{},"classes/QueryDto.html":{},"classes/RemoveCartItemsDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"miscellaneous/variables.html":{}}}],["example123",{"_index":1183,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["example@gmail.com",{"_index":1176,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["exception",{"_index":214,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.errmsg",{"_index":230,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":227,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":205,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exec",{"_index":1959,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["executioncontext",{"_index":1350,"title":{},"body":{"classes/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["existingcategory",{"_index":867,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["existingrole",{"_index":2034,"title":{},"body":{"injectables/RolesService.html":{}}}],["existinguser",{"_index":2207,"title":{},"body":{"injectables/UsersService.html":{}}}],["existinguser.email",{"_index":2226,"title":{},"body":{"injectables/UsersService.html":{}}}],["existreview",{"_index":1947,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["exists.decorator",{"_index":602,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateOrderDto.html":{}}}],["exists.decorator.ts",{"_index":2268,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["exists.rule",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["exists.rule.ts",{"_index":533,"title":{},"body":{"injectables/CartExistsRule.html":{},"injectables/ProductExistsRule.html":{},"coverage.html":{}}}],["exists.rule.ts:12",{"_index":538,"title":{},"body":{"injectables/CartExistsRule.html":{},"injectables/ProductExistsRule.html":{}}}],["exists.rule.ts:15",{"_index":544,"title":{},"body":{"injectables/CartExistsRule.html":{},"injectables/ProductExistsRule.html":{}}}],["exists.rule.ts:23",{"_index":541,"title":{},"body":{"injectables/CartExistsRule.html":{},"injectables/ProductExistsRule.html":{}}}],["existssync(filepath",{"_index":2649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existssync(uploadpath",{"_index":2674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired",{"_index":2364,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expiresin",{"_index":439,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":37,"title":{},"body":{"classes/Address.html":{},"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyAddressDto.html":{},"classes/ApplyPromotionDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/CartExistsRule.html":{},"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"modules/CommonModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabaseController.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"interfaces/OrderSummary.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"controllers/PromotionsController.html":{},"modules/PromotionsModule.html":{},"injectables/PromotionsService.html":{},"classes/QueryDto.html":{},"classes/RegisterUserDto.html":{},"classes/RemoveCartItemsDto.html":{},"interfaces/Response.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"interfaces/SwaggerDocumentOptions.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePromotionDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"injectables/ValidateObjectIdPipe.html":{}}}],["exports",{"_index":134,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/CategoriesModule.html":{},"modules/DatabaseModule.html":{},"modules/FilesModule.html":{},"modules/OrdersModule.html":{},"modules/PermissionsModule.html":{},"modules/ProductsModule.html":{},"modules/PromotionsModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/JwtAuthGuard.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["express.multer.file",{"_index":1291,"title":{},"body":{"classes/FileUploadDto.html":{},"controllers/FilesController.html":{}}}],["express/multer",{"_index":1314,"title":{},"body":{"controllers/FilesController.html":{}}}],["extends",{"_index":336,"title":{},"body":{"classes/ApplyPromotionDto.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePromotionDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{}}}],["extname(file.originalname",{"_index":2668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extra",{"_index":2063,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["extractjwt",{"_index":1385,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1392,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["extramodels",{"_index":2053,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["f1be2ef547cf.jpg",{"_index":950,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{}}}],["fabric",{"_index":1013,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["failed",{"_index":2378,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":332,"title":{},"body":{"classes/ApplyAddressDto.html":{},"injectables/CartExistsRule.html":{},"classes/CartItemDto.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/ProductExistsRule.html":{},"injectables/ProductsService.html":{},"classes/QueryDto.html":{},"injectables/RolesService.html":{},"classes/UpdateOrderDto.html":{},"miscellaneous/variables.html":{}}}],["false})@isenum(paymentmethod",{"_index":2114,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["false})@isoptional",{"_index":1072,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["false})@isoptional()@ismongoid({message",{"_index":320,"title":{},"body":{"classes/ApplyAddressDto.html":{}}}],["false})@isoptional()@isstring({message",{"_index":944,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{}}}],["false})@isstring({message",{"_index":2112,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["fashion",{"_index":2449,"title":{},"body":{"index.html":{}}}],["female",{"_index":2371,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":1004,"title":{},"body":{"classes/CreatePermissionDto.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Address.html":{},"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyAddressDto.html":{},"classes/ApplyPromotionDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/CartExistsRule.html":{},"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"modules/CommonModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabaseController.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"interfaces/OrderSummary.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"controllers/PromotionsController.html":{},"modules/PromotionsModule.html":{},"injectables/PromotionsService.html":{},"classes/QueryDto.html":{},"classes/RegisterUserDto.html":{},"classes/RemoveCartItemsDto.html":{},"interfaces/Response.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"interfaces/SwaggerDocumentOptions.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePromotionDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"injectables/ValidateObjectIdPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.filename",{"_index":1326,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.mimetype.match(/\\/(jpg|jpeg|png",{"_index":2663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filefilter",{"_index":2661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileinterceptor",{"_index":1312,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":1303,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["filepath",{"_index":2647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":1299,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["files.controller",{"_index":1335,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":1334,"title":{},"body":{"modules/FilesModule.html":{}}}],["filescontroller",{"_index":1297,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesize",{"_index":2656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filesmodule",{"_index":249,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["filesservice",{"_index":1332,"title":{"injectables/FilesService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["fileuploaddto",{"_index":1288,"title":{"classes/FileUploadDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"coverage.html":{}}}],["fileuploaddto})@responsemessage('upload",{"_index":1307,"title":{},"body":{"controllers/FilesController.html":{}}}],["filter",{"_index":1534,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["filter.current",{"_index":1539,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["filter.name",{"_index":2026,"title":{},"body":{"injectables/RolesService.html":{}}}],["filter.pagesize",{"_index":1541,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["find(filter",{"_index":1550,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":804,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(@query",{"_index":1627,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["findall(@query('qs",{"_index":1480,"title":{},"body":{"controllers/OrdersController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{}}}],["findall(qs",{"_index":1452,"title":{},"body":{"controllers/OrdersController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{}}}],["findall(query",{"_index":1503,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(querystring",{"_index":1599,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["findallbyuser",{"_index":55,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{}}}],["findallbyuser(@user",{"_index":116,"title":{},"body":{"controllers/AddressesController.html":{}}}],["findallbyuser(user",{"_index":71,"title":{},"body":{"controllers/AddressesController.html":{}}}],["findallbyuser(userid",{"_index":166,"title":{},"body":{"injectables/AddressesService.html":{}}}],["findbycategoryid",{"_index":1729,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbycategoryid(categoryid",{"_index":1737,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyid(id",{"_index":739,"title":{},"body":{"injectables/CartsService.html":{}}}],["findmany",{"_index":1730,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findmany(ids",{"_index":1739,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findone",{"_index":152,"title":{},"body":{"injectables/AddressesService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":654,"title":{},"body":{"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["findone(_id",{"_index":1647,"title":{},"body":{"injectables/PermissionsService.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["findone(id",{"_index":168,"title":{},"body":{"injectables/AddressesService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/ProductsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findoneandupdate",{"_index":750,"title":{},"body":{"injectables/CartsService.html":{},"injectables/OrdersService.html":{}}}],["findonebyname",{"_index":2012,"title":{},"body":{"injectables/RolesService.html":{}}}],["findonebyname(name",{"_index":2017,"title":{},"body":{"injectables/RolesService.html":{}}}],["finduserbyemail",{"_index":2179,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyemail(email",{"_index":2188,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbytoken",{"_index":2180,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbytoken(refreshtoken",{"_index":2190,"title":{},"body":{"injectables/UsersService.html":{}}}],["fixed_amount",{"_index":2368,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["forbidden",{"_index":2402,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["forbiddenexception",{"_index":1356,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["forbiddenexception(custom_messages.forbidden",{"_index":1377,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["format",{"_index":1292,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["formatcartresponse",{"_index":685,"title":{},"body":{"injectables/CartsService.html":{}}}],["formatcartresponse(cart",{"_index":704,"title":{},"body":{"injectables/CartsService.html":{}}}],["formatitemsresponse",{"_index":686,"title":{},"body":{"injectables/CartsService.html":{}}}],["formatitemsresponse(items",{"_index":706,"title":{},"body":{"injectables/CartsService.html":{}}}],["formatorderresponse",{"_index":1497,"title":{},"body":{"injectables/OrdersService.html":{}}}],["formatorderresponse(order",{"_index":1506,"title":{},"body":{"injectables/OrdersService.html":{}}}],["forwardref",{"_index":1723,"title":{},"body":{"modules/ProductsModule.html":{}}}],["framework",{"_index":2477,"title":{},"body":{"index.html":{}}}],["free_shipping",{"_index":1062,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/Promotion.html":{}}}],["full",{"_index":1251,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["fullname",{"_index":9,"title":{},"body":{"classes/Address.html":{},"injectables/AuthService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"interfaces/IUser.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{}}}],["fullname&fullname=khánh&sort=createdat",{"_index":1867,"title":{},"body":{"classes/QueryDto.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":2061,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{},"coverage.html":{}}}],["functions",{"_index":2440,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["gendertype",{"_index":2330,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generate",{"_index":2077,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["get(':id",{"_index":653,"title":{},"body":{"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@public()@responsemessage('lấy",{"_index":812,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{}}}],["get(':id')@responsemessage('lấy",{"_index":633,"title":{},"body":{"controllers/CartsController.html":{},"controllers/OrdersController.html":{},"controllers/UsersController.html":{}}}],["get('account",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('account')@responsemessage('lấy",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('refresh",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('refresh')@responsemessage('đổi",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@apiparam(api_param_query)@responsemessage('lấy",{"_index":2158,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@apiquery(api_param_query)@responsemessage('lấy",{"_index":1453,"title":{},"body":{"controllers/OrdersController.html":{}}}],["get()@public()@apiquery(api_param_query)@responsemessage('lấy",{"_index":1702,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{}}}],["get()@public()@responsemessage('lấy",{"_index":809,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["get()@responsemessage('lấy",{"_index":72,"title":{},"body":{"controllers/AddressesController.html":{}}}],["getaccountbytoken",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{}}}],["getaccountbytoken(@user",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{}}}],["getaccountbytoken(user",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["getavgrating",{"_index":1933,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["getavgrating(productid",{"_index":1940,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["getdatachange",{"_index":2234,"title":{},"body":{"classes/Utils.html":{}}}],["getdatachange(data1",{"_index":2235,"title":{},"body":{"classes/Utils.html":{}}}],["gethashpassword",{"_index":2181,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethashpassword(password",{"_index":2192,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethello",{"_index":306,"title":{},"body":{"injectables/AppService.html":{}}}],["getordersummary",{"_index":687,"title":{},"body":{"injectables/CartsService.html":{}}}],["getordersummary(cart",{"_index":708,"title":{},"body":{"injectables/CartsService.html":{}}}],["getproductifvalid",{"_index":1731,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getproductifvalid(productid",{"_index":1743,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getting",{"_index":2447,"title":{"index.html":{}},"body":{}}],["getvalidpromotion",{"_index":1822,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["getvalidpromotion(code",{"_index":1832,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["ghi",{"_index":968,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/RolesService.html":{}}}],["ghiền",{"_index":2101,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["gi",{"_index":619,"title":{},"body":{"controllers/CartsController.html":{},"classes/CreateCartDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/Promotion.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["giao",{"_index":965,"title":{},"body":{"classes/CreateOrderDto.html":{},"miscellaneous/enumerations.html":{}}}],["giá')@delete(':id",{"_index":1908,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["giá')@get(':id",{"_index":1906,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["giá')@patch(':id",{"_index":1911,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["giá')@post",{"_index":1903,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["giảm",{"_index":628,"title":{},"body":{"controllers/CartsController.html":{},"classes/CreatePromotionDto.html":{},"controllers/PromotionsController.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["giống",{"_index":1000,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["global",{"_index":2069,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["graph",{"_index":2493,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":2340,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["green",{"_index":2354,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["guards/local",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{}}}],["gồm",{"_index":1193,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["h",{"_index":197,"title":{},"body":{"injectables/AddressesService.html":{},"classes/CreateAddressDto.html":{},"classes/CreatePromotionDto.html":{},"classes/UpdateOrderDto.html":{},"index.html":{}}}],["handlerequest",{"_index":1345,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":1353,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["hashedpassword",{"_index":2210,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":2195,"title":{},"body":{"injectables/UsersService.html":{}}}],["header",{"_index":2645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hello",{"_index":308,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":2312,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["hiện",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"controllers/PermissionsController.html":{},"classes/QueryDto.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["hiệu",{"_index":2424,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["hoa",{"_index":1194,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["host",{"_index":211,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":225,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["hoàn",{"_index":2384,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["hoạt",{"_index":1111,"title":{},"body":{"classes/CreatePromotionDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["hoặc",{"_index":2398,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["http",{"_index":2641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpadapter",{"_index":222,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.getrequesturl(ctx.getrequest",{"_index":236,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(ctx.getresponse",{"_index":238,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":208,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":216,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["httponly",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":217,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.bad_request",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus.internal_server_error",{"_index":228,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["hydrateddocument",{"_index":35,"title":{},"body":{"classes/Address.html":{},"classes/Cart.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/Permission.html":{},"classes/Product.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hàng",{"_index":319,"title":{},"body":{"classes/ApplyAddressDto.html":{},"controllers/CartsController.html":{},"classes/CreateCartDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePromotionDto.html":{},"controllers/OrdersController.html":{},"classes/Promotion.html":{},"classes/UpdateOrderStatusDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["hàng')@post(':id/addresses",{"_index":624,"title":{},"body":{"controllers/CartsController.html":{}}}],["hành",{"_index":966,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["hình",{"_index":951,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"controllers/FilesController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["hóa",{"_index":2638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hơn",{"_index":587,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"miscellaneous/enumerations.html":{}}}],["hướng",{"_index":1018,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["hạn",{"_index":2366,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["hạng",{"_index":2469,"title":{},"body":{"index.html":{}}}],["hạnh",{"_index":1172,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["hết",{"_index":2365,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hỏa",{"_index":2392,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hồng",{"_index":2350,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hợp",{"_index":569,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/JwtAuthGuard.html":{},"classes/RemoveCartItemsDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["hủy",{"_index":2382,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["id",{"_index":170,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/CartExistsRule.html":{},"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ProductExistsRule.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2257,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1741,"title":{},"body":{"injectables/ProductsService.html":{}}}],["ignore",{"_index":2068,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["ignoreexpiration",{"_index":1393,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["ignoreglobalprefix",{"_index":2054,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["image",{"_index":798,"title":{},"body":{"injectables/CartsService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{}}}],["images",{"_index":1014,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["implements",{"_index":204,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/CartExistsRule.html":{},"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"injectables/ProductExistsRule.html":{},"injectables/ProductsService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidateObjectIdPipe.html":{}}}],["import",{"_index":29,"title":{},"body":{"classes/Address.html":{},"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyAddressDto.html":{},"classes/ApplyPromotionDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/CartExistsRule.html":{},"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"modules/CommonModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabaseController.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"controllers/PromotionsController.html":{},"modules/PromotionsModule.html":{},"injectables/PromotionsService.html":{},"classes/QueryDto.html":{},"classes/RegisterUserDto.html":{},"classes/RemoveCartItemsDto.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePromotionDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectIdPipe.html":{}}}],["imported",{"_index":2060,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["imports",{"_index":145,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/CategoriesModule.html":{},"modules/DatabaseModule.html":{},"modules/OrdersModule.html":{},"modules/PermissionsModule.html":{},"modules/ProductsModule.html":{},"modules/PromotionsModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["inactive",{"_index":2363,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inc",{"_index":755,"title":{},"body":{"injectables/CartsService.html":{}}}],["include",{"_index":2055,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["included",{"_index":2066,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Address.html":{},"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AppService.html":{},"classes/ApplyAddressDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/CartExistsRule.html":{},"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"interfaces/IUser.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"interfaces/OrderSummary.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"classes/QueryDto.html":{},"classes/RemoveCartItemsDto.html":{},"interfaces/Response.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"interfaces/SwaggerDocumentOptions.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"injectables/ValidateObjectIdPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Address.html":{},"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyAddressDto.html":{},"classes/ApplyPromotionDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/CartExistsRule.html":{},"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"modules/CommonModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabaseController.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"interfaces/OrderSummary.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"controllers/PromotionsController.html":{},"modules/PromotionsModule.html":{},"injectables/PromotionsService.html":{},"classes/QueryDto.html":{},"classes/RegisterUserDto.html":{},"classes/RemoveCartItemsDto.html":{},"interfaces/Response.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"interfaces/SwaggerDocumentOptions.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePromotionDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"injectables/ValidateObjectIdPipe.html":{}}}],["information",{"_index":737,"title":{},"body":{"injectables/CartsService.html":{}}}],["init_permissions",{"_index":1235,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/JwtStrategy.html":{}}}],["inject(configservice",{"_index":1389,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["injectable",{"_index":148,"title":{"injectables/AddressesService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartExistsRule.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"injectables/FilesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductExistsRule.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectIdPipe.html":{}},"body":{"injectables/AddressesService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartExistsRule.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"injectables/FilesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductExistsRule.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectIdPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":149,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartExistsRule.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"injectables/FilesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductExistsRule.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectIdPipe.html":{},"overview.html":{}}}],["injectmodel",{"_index":176,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(address.name",{"_index":184,"title":{},"body":{"injectables/AddressesService.html":{}}}],["injectmodel(cart.name",{"_index":721,"title":{},"body":{"injectables/CartsService.html":{}}}],["injectmodel(category.name",{"_index":853,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["injectmodel(order.name",{"_index":1519,"title":{},"body":{"injectables/OrdersService.html":{}}}],["injectmodel(permission.name",{"_index":1239,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/PermissionsService.html":{}}}],["injectmodel(product.name",{"_index":1749,"title":{},"body":{"injectables/ProductsService.html":{}}}],["injectmodel(promotion.name",{"_index":1839,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["injectmodel(review.name",{"_index":1944,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["injectmodel(role.name",{"_index":1237,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/RolesService.html":{}}}],["injectmodel(user.name",{"_index":1238,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/UsersService.html":{}}}],["inspected",{"_index":2065,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["instanceof",{"_index":226,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["intercept",{"_index":2084,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":2086,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":1337,"title":{"interfaces/IUser.html":{},"interfaces/OrderSummary.html":{},"interfaces/Response.html":{},"interfaces/SwaggerDocumentOptions.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/OrderSummary.html":{},"interfaces/Response.html":{},"interfaces/SwaggerDocumentOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":1338,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/OrderSummary.html":{},"interfaces/Response.html":{},"interfaces/SwaggerDocumentOptions.html":{},"overview.html":{}}}],["interfaces/response.interface",{"_index":2095,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["intersectiontype",{"_index":2116,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["invalid_discount_amount",{"_index":2428,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_discount_date_range",{"_index":2427,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_discount_percentage",{"_index":2429,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_token",{"_index":2400,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidpermissions",{"_index":2036,"title":{},"body":{"injectables/RolesService.html":{}}}],["invalidpermissions.join",{"_index":2040,"title":{},"body":{"injectables/RolesService.html":{}}}],["invalidpermissions.length",{"_index":2038,"title":{},"body":{"injectables/RolesService.html":{}}}],["is_public_key",{"_index":1359,"title":{},"body":{"classes/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":1151,"title":{},"body":{"classes/CreateRoleDto.html":{},"injectables/DatabaseService.html":{},"classes/Role.html":{}}}],["isarray",{"_index":933,"title":{},"body":{"classes/CreateCartDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{}}}],["isboolean",{"_index":1116,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/CreateRoleDto.html":{}}}],["isdate",{"_index":1117,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["isdeleted",{"_index":881,"title":{},"body":{"classes/Category.html":{},"classes/Order.html":{},"classes/Permission.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":1199,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":599,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/RemoveCartItemsDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{}}}],["isenum(cartremovetype",{"_index":1880,"title":{},"body":{"classes/RemoveCartItemsDto.html":{}}}],["isenum(colorstype",{"_index":608,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{}}}],["isenum(couponstatus",{"_index":1119,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["isenum(discounttype",{"_index":1121,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["isenum(orderstatus",{"_index":2122,"title":{},"body":{"classes/UpdateOrderStatusDto.html":{}}}],["isenum(paymentmethod",{"_index":984,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{}}}],["isenum(paymentstatus",{"_index":2125,"title":{},"body":{"classes/UpdatePaymentStatusDto.html":{}}}],["isenum(sizestype",{"_index":609,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{}}}],["isexist",{"_index":857,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/PromotionsService.html":{}}}],["isexistcategory",{"_index":1753,"title":{},"body":{"injectables/ProductsService.html":{}}}],["isexistpermission",{"_index":1373,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["isexistproduct",{"_index":871,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["isexistproduct.length",{"_index":873,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["isglobal",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["isinit",{"_index":1240,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["ismongoid",{"_index":327,"title":{},"body":{"classes/ApplyAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/RemoveCartItemsDto.html":{}}}],["isnameexist",{"_index":1851,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["isnotempty",{"_index":328,"title":{},"body":{"classes/ApplyAddressDto.html":{},"classes/CartItemDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/FileUploadDto.html":{},"classes/RemoveCartItemsDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{}}}],["isnumber",{"_index":596,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{}}}],["isoptional",{"_index":329,"title":{},"body":{"classes/ApplyAddressDto.html":{},"classes/CartItemDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/QueryDto.html":{},"classes/UpdateOrderDto.html":{}}}],["ispublic",{"_index":1361,"title":{},"body":{"classes/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["iss",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":595,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/QueryDto.html":{},"classes/RemoveCartItemsDto.html":{},"classes/UpdateOrderDto.html":{}}}],["isstrongpassword",{"_index":1200,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isvalid",{"_index":723,"title":{},"body":{"injectables/CartsService.html":{}}}],["isvalid.every(item",{"_index":731,"title":{},"body":{"injectables/CartsService.html":{}}}],["isvalidpassword",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["isvalidpassword(password",{"_index":2194,"title":{},"body":{"injectables/UsersService.html":{}}}],["isvalidpromotion",{"_index":1823,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["isvalidpromotion(subtotal",{"_index":1835,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["item",{"_index":726,"title":{},"body":{"injectables/CartsService.html":{}}}],["item._id",{"_index":795,"title":{},"body":{"injectables/CartsService.html":{}}}],["item.color",{"_index":728,"title":{},"body":{"injectables/CartsService.html":{},"injectables/OrdersService.html":{}}}],["item.dto",{"_index":647,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"classes/CreateCartDto.html":{}}}],["item.dto.ts",{"_index":556,"title":{},"body":{"classes/CartItemDto.html":{},"coverage.html":{}}}],["item.dto.ts:15",{"_index":576,"title":{},"body":{"classes/CartItemDto.html":{}}}],["item.dto.ts:31",{"_index":590,"title":{},"body":{"classes/CartItemDto.html":{}}}],["item.dto.ts:42",{"_index":570,"title":{},"body":{"classes/CartItemDto.html":{}}}],["item.dto.ts:53",{"_index":594,"title":{},"body":{"classes/CartItemDto.html":{}}}],["item.price",{"_index":1522,"title":{},"body":{"injectables/OrdersService.html":{}}}],["item.product._id",{"_index":796,"title":{},"body":{"injectables/CartsService.html":{}}}],["item.product.images[0",{"_index":799,"title":{},"body":{"injectables/CartsService.html":{}}}],["item.product.name",{"_index":797,"title":{},"body":{"injectables/CartsService.html":{}}}],["item.product.price",{"_index":773,"title":{},"body":{"injectables/CartsService.html":{}}}],["item.product.tostring",{"_index":748,"title":{},"body":{"injectables/CartsService.html":{}}}],["item.productid",{"_index":734,"title":{},"body":{"injectables/CartsService.html":{},"injectables/OrdersService.html":{}}}],["item.quantity",{"_index":735,"title":{},"body":{"injectables/CartsService.html":{},"injectables/OrdersService.html":{}}}],["item.size",{"_index":729,"title":{},"body":{"injectables/CartsService.html":{},"injectables/OrdersService.html":{}}}],["itemcount",{"_index":780,"title":{},"body":{"injectables/CartsService.html":{},"interfaces/OrderSummary.html":{}}}],["itemid",{"_index":635,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["items",{"_index":507,"title":{},"body":{"classes/Cart.html":{},"injectables/CartsService.html":{},"classes/CreateCartDto.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{}}}],["items.$.quantity",{"_index":756,"title":{},"body":{"injectables/CartsService.html":{}}}],["items._id",{"_index":768,"title":{},"body":{"injectables/CartsService.html":{}}}],["items.color",{"_index":753,"title":{},"body":{"injectables/CartsService.html":{}}}],["items.dto",{"_index":649,"title":{},"body":{"controllers/CartsController.html":{}}}],["items.dto.ts",{"_index":1876,"title":{},"body":{"classes/RemoveCartItemsDto.html":{},"coverage.html":{}}}],["items.dto.ts:13",{"_index":1879,"title":{},"body":{"classes/RemoveCartItemsDto.html":{}}}],["items.length",{"_index":789,"title":{},"body":{"injectables/CartsService.html":{}}}],["items.map((item",{"_index":794,"title":{},"body":{"injectables/CartsService.html":{}}}],["items.map(async",{"_index":725,"title":{},"body":{"injectables/CartsService.html":{}}}],["items.map(item",{"_index":733,"title":{},"body":{"injectables/CartsService.html":{},"injectables/OrdersService.html":{}}}],["items.product",{"_index":751,"title":{},"body":{"injectables/CartsService.html":{}}}],["items.reduce((total",{"_index":781,"title":{},"body":{"injectables/CartsService.html":{}}}],["items.size",{"_index":754,"title":{},"body":{"injectables/CartsService.html":{}}}],["itemsresponse",{"_index":1578,"title":{},"body":{"injectables/OrdersService.html":{}}}],["iuser",{"_index":60,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AddressesController.html":{},"controllers/AuthController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"interfaces/IUser.html":{},"classes/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["iều",{"_index":1065,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/Promotion.html":{},"injectables/RolesService.html":{},"miscellaneous/enumerations.html":{}}}],["iểm",{"_index":1143,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["iện",{"_index":908,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{},"miscellaneous/enumerations.html":{}}}],["jwt",{"_index":1387,"title":{},"body":{"classes/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":1340,"title":{"classes/JwtAuthGuard.html":{}},"body":{"classes/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1391,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["jwtmodule",{"_index":424,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":435,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":426,"title":{"classes/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{},"coverage.html":{}}}],["k",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":2241,"title":{},"body":{"classes/Utils.html":{}}}],["keys",{"_index":2239,"title":{},"body":{"classes/Utils.html":{}}}],["khanh@gmail.com",{"_index":2528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["khi",{"_index":2374,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kho",{"_index":1047,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["khoản",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["khuyến",{"_index":1068,"title":{},"body":{"classes/CreatePromotionDto.html":{},"index.html":{}}}],["khác",{"_index":2472,"title":{},"body":{"index.html":{}}}],["khách",{"_index":2386,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["khánh",{"_index":2104,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["không",{"_index":565,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/FileUploadDto.html":{},"classes/JwtAuthGuard.html":{},"injectables/ProductExistsRule.html":{},"classes/RemoveCartItemsDto.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["khảo",{"_index":2487,"title":{},"body":{"index.html":{}}}],["khẩu",{"_index":1185,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/enumerations.html":{}}}],["kiếm",{"_index":1606,"title":{},"body":{"controllers/PermissionsController.html":{},"classes/QueryDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["kiểu",{"_index":323,"title":{},"body":{"classes/ApplyAddressDto.html":{},"classes/CartItemDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/QueryDto.html":{},"classes/UpdateOrderDto.html":{},"miscellaneous/enumerations.html":{}}}],["kiện",{"_index":1066,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/Promotion.html":{},"injectables/RolesService.html":{},"miscellaneous/enumerations.html":{}}}],["kích",{"_index":592,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateProductDto.html":{},"miscellaneous/enumerations.html":{}}}],["kết",{"_index":1094,"title":{},"body":{"classes/CreatePromotionDto.html":{},"injectables/RolesService.html":{},"miscellaneous/enumerations.html":{}}}],["l",{"_index":322,"title":{},"body":{"classes/ApplyAddressDto.html":{},"classes/CartItemDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/JwtAuthGuard.html":{},"classes/Promotion.html":{},"classes/QueryDto.html":{},"classes/RemoveCartItemsDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":130,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/CategoriesModule.html":{},"modules/DatabaseModule.html":{},"modules/FilesModule.html":{},"modules/OrdersModule.html":{},"modules/PermissionsModule.html":{},"modules/ProductsModule.html":{},"modules/PromotionsModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":2501,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{}}}],["limit(limit",{"_index":1552,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{}}}],["limit(pagesize",{"_index":2221,"title":{},"body":{"injectables/UsersService.html":{}}}],["limits",{"_index":2655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["list",{"_index":2073,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["literal",{"_index":512,"title":{},"body":{"classes/Cart.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/Permission.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["liên",{"_index":910,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"index.html":{}}}],["liệu",{"_index":1029,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/QueryDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":2058,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["local",{"_index":1404,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":385,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":417,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":1221,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["logger(databaseservice.name",{"_index":1230,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["login",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@res",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(res",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginuserdto",{"_index":393,"title":{"classes/LoginUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginUserDto.html":{},"coverage.html":{}}}],["loginuserdto})@public()@post('login')@useguards(localauthguard)@responsemessage('thực",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{}}}],["loại",{"_index":1087,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/RemoveCartItemsDto.html":{}}}],["lên",{"_index":2463,"title":{},"body":{"index.html":{}}}],["lòng",{"_index":1179,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["lưu",{"_index":1031,"title":{},"body":{"classes/CreateProductDto.html":{},"index.html":{}}}],["lượng",{"_index":581,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{},"injectables/RolesService.html":{}}}],["lạc",{"_index":911,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/UpdateOrderDto.html":{}}}],["lấy",{"_index":1868,"title":{},"body":{"classes/QueryDto.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["lệ'})@min(0",{"_index":1039,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{}}}],["lệ'})@min(1",{"_index":585,"title":{},"body":{"classes/CartItemDto.html":{}}}],["lịch",{"_index":2464,"title":{},"body":{"index.html":{}}}],["lớn",{"_index":586,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"miscellaneous/enumerations.html":{}}}],["lực",{"_index":2425,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["m",{"_index":317,"title":{},"body":{"classes/ApplyAddressDto.html":{},"controllers/CartsController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateRoleDto.html":{},"classes/Promotion.html":{},"controllers/PromotionsController.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["male",{"_index":2369,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["map",{"_index":2093,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":2100,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["master",{"_index":1236,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["matching",{"_index":45,"title":{},"body":{"classes/Address.html":{},"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyAddressDto.html":{},"classes/ApplyPromotionDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/CartExistsRule.html":{},"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"modules/CommonModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabaseController.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"interfaces/OrderSummary.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"controllers/PromotionsController.html":{},"modules/PromotionsModule.html":{},"injectables/PromotionsService.html":{},"classes/QueryDto.html":{},"classes/RegisterUserDto.html":{},"classes/RemoveCartItemsDto.html":{},"interfaces/Response.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"interfaces/SwaggerDocumentOptions.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePromotionDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"injectables/ValidateObjectIdPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":1547,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["max",{"_index":598,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/Review.html":{}}}],["max(1000000",{"_index":607,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{}}}],["max(1000000000",{"_index":1051,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["max(5",{"_index":1147,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["max(500000000",{"_index":1120,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["maxage",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxdecimalplaces",{"_index":584,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{}}}],["maximum",{"_index":578,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{}}}],["message",{"_index":237,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApplyAddressDto.html":{},"classes/CartItemDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/FileUploadDto.html":{},"classes/QueryDto.html":{},"classes/RemoveCartItemsDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"miscellaneous/variables.html":{}}}],["messages.enum",{"_index":181,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"injectables/CartExistsRule.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"classes/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductExistsRule.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ValidateObjectIdPipe.html":{}}}],["messages.enum.ts",{"_index":2329,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["meta",{"_index":1557,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":2249,"title":{},"body":{"injectables/ValidateObjectIdPipe.html":{},"dependencies.html":{}}}],["method",{"_index":989,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"interfaces/SwaggerDocumentOptions.html":{},"miscellaneous/variables.html":{}}}],["methodkey",{"_index":2081,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["methods",{"_index":52,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CartExistsRule.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"controllers/FilesController.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"injectables/ValidateObjectIdPipe.html":{}}}],["mimetypes",{"_index":2659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":597,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/Review.html":{}}}],["min(0",{"_index":1050,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{}}}],["min(1",{"_index":606,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateReviewDto.html":{}}}],["mindate",{"_index":1118,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["mindate(new",{"_index":1126,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["minh",{"_index":198,"title":{},"body":{"injectables/AddressesService.html":{},"classes/CreateAddressDto.html":{}}}],["minimum",{"_index":604,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{}}}],["minimum_purchase",{"_index":1123,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/Promotion.html":{}}}],["minlength",{"_index":1201,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlowercase",{"_index":1188,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minnumbers",{"_index":1189,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minsymbols",{"_index":1190,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minuppercase",{"_index":1191,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":2323,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miễn",{"_index":1100,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["mkdirsync(uploadpath",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modelmodule",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":2064,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["models/addresses/addresses.module",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["models/carts/carts.module",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["models/categories/categories.module",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["models/files/files.module",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["models/orders/orders.module",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["models/permissions/permissions.module",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["models/products/products.module",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["models/promotions/promotions.module",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["models/reviews/reviews.module",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["models/roles/roles.module",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["models/users/users.module",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["module",{"_index":126,"title":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/CategoriesModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/FilesModule.html":{},"modules/OrdersModule.html":{},"modules/PermissionsModule.html":{},"modules/ProductsModule.html":{},"modules/PromotionsModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/CategoriesModule.html":{},"modules/CommonModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabaseModule.html":{},"modules/FilesModule.html":{},"modules/OrdersModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"modules/ProductsModule.html":{},"modules/PromotionsModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["moduleref",{"_index":843,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/RolesService.html":{}}}],["modules",{"_index":128,"title":{"modules.html":{}},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/CategoriesModule.html":{},"modules/CommonModule.html":{},"modules/DatabaseModule.html":{},"modules/FilesModule.html":{},"modules/OrdersModule.html":{},"modules/PermissionsModule.html":{},"modules/ProductsModule.html":{},"modules/PromotionsModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"interfaces/SwaggerDocumentOptions.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["momo",{"_index":2375,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mongodb",{"_index":220,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"index.html":{}}}],["mongoerror",{"_index":219,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["mongoid",{"_index":324,"title":{},"body":{"classes/ApplyAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/enumerations.html":{}}}],["mongoid'})@cartexists",{"_index":963,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["mongoid'})@isnotempty({message",{"_index":1140,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["mongoose",{"_index":34,"title":{},"body":{"classes/Address.html":{},"injectables/AddressesService.html":{},"modules/AppModule.html":{},"classes/Cart.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabaseService.html":{},"interfaces/IUser.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{},"classes/Review.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectIdPipe.html":{},"dependencies.html":{},"index.html":{}}}],["mongoose.schema.types.objectid",{"_index":40,"title":{},"body":{"classes/Address.html":{},"classes/Cart.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/Permission.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["mongoose.types.objectid.isvalid(value",{"_index":2253,"title":{},"body":{"injectables/ValidateObjectIdPipe.html":{}}}],["mongoosemodule",{"_index":143,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/CategoriesModule.html":{},"modules/DatabaseModule.html":{},"modules/OrdersModule.html":{},"modules/PermissionsModule.html":{},"modules/ProductsModule.html":{},"modules/PromotionsModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":146,"title":{},"body":{"modules/AddressesModule.html":{},"modules/CartsModule.html":{},"modules/CategoriesModule.html":{},"modules/DatabaseModule.html":{},"modules/OrdersModule.html":{},"modules/PermissionsModule.html":{},"modules/ProductsModule.html":{},"modules/PromotionsModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["ms",{"_index":428,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms(configservice.get('jwt_access_expire",{"_index":440,"title":{},"body":{"modules/AuthModule.html":{}}}],["ms(this.configservice.get('jwt_refresh_expire",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["multerconfig",{"_index":2274,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["multerconfig.dest",{"_index":2673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multerconfig.dest}/${filename",{"_index":2648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multeroptions",{"_index":1316,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["màu",{"_index":561,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateProductDto.html":{},"miscellaneous/enumerations.html":{}}}],["mãi",{"_index":1069,"title":{},"body":{"classes/CreatePromotionDto.html":{},"index.html":{}}}],["mùa",{"_index":1076,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["mật",{"_index":1184,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/enumerations.html":{}}}],["một",{"_index":1596,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["mới",{"_index":62,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/AuthController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["mục",{"_index":810,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mục')@delete(':id",{"_index":815,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["mục')@patch(':id",{"_index":818,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["mục')@post",{"_index":807,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["n",{"_index":970,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreatePromotionDto.html":{},"controllers/OrdersController.html":{},"classes/Promotion.html":{},"classes/UpdateOrderStatusDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nam",{"_index":2370,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["name",{"_index":66,"title":{},"body":{"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CartExistsRule.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"controllers/FilesController.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"modules/PromotionsModule.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"injectables/ValidateObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ne",{"_index":2027,"title":{},"body":{"injectables/RolesService.html":{}}}],["nestinterceptor",{"_index":2091,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":2478,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":91,"title":{},"body":{"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CartExistsRule.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"modules/CommonModule.html":{},"controllers/DatabaseController.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"modules/PromotionsModule.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectIdPipe.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabaseService.html":{},"classes/JwtStrategy.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":218,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/CategoriesService.html":{},"classes/JwtAuthGuard.html":{},"injectables/ProductsService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":425,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":2296,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":33,"title":{},"body":{"classes/Address.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"modules/AppModule.html":{},"classes/Cart.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/Order.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"modules/PromotionsModule.html":{},"injectables/PromotionsService.html":{},"classes/Review.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":423,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1313,"title":{},"body":{"controllers/FilesController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":100,"title":{},"body":{"controllers/AddressesController.html":{},"classes/ApplyAddressDto.html":{},"classes/ApplyPromotionDto.html":{},"controllers/AuthController.html":{},"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"classes/LoginUserDto.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"classes/QueryDto.html":{},"classes/RegisterUserDto.html":{},"classes/RemoveCartItemsDto.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePromotionDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":190,"title":{},"body":{"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"classes/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectIdPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newcategory",{"_index":861,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["neworder",{"_index":1565,"title":{},"body":{"injectables/OrdersService.html":{}}}],["newproduct",{"_index":1758,"title":{},"body":{"injectables/ProductsService.html":{}}}],["next",{"_index":2087,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe",{"_index":2099,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["ng",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateAddressDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateOrderDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ngh",{"_index":2476,"title":{},"body":{"index.html":{}}}],["nguyễn",{"_index":900,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateOrderDto.html":{}}}],["ngày",{"_index":1093,"title":{},"body":{"classes/CreatePromotionDto.html":{},"miscellaneous/enumerations.html":{}}}],["người",{"_index":904,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/UpdateOrderDto.html":{},"controllers/UsersController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nh",{"_index":952,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nh')@useinterceptors(undefined",{"_index":1308,"title":{},"body":{"controllers/FilesController.html":{}}}],["nhanh",{"_index":2390,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nhau",{"_index":2473,"title":{},"body":{"index.html":{}}}],["nhận",{"_index":318,"title":{},"body":{"classes/ApplyAddressDto.html":{},"controllers/CartsController.html":{},"classes/CreateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nhập",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["nhật",{"_index":84,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["những",{"_index":2410,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["node_modules/ms",{"_index":429,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["note",{"_index":959,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderDto.html":{}}}],["notfoundexception",{"_index":175,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('role",{"_index":2213,"title":{},"body":{"injectables/UsersService.html":{}}}],["notfoundexception('tài",{"_index":2223,"title":{},"body":{"injectables/UsersService.html":{}}}],["notfoundexception(`permissions",{"_index":2039,"title":{},"body":{"injectables/RolesService.html":{}}}],["notfoundexception(custom_messages.address_id_not_exist",{"_index":191,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/CartsService.html":{}}}],["notfoundexception(custom_messages.cart_id_not_exist",{"_index":742,"title":{},"body":{"injectables/CartsService.html":{}}}],["notfoundexception(custom_messages.cart_item_id_not_exist",{"_index":764,"title":{},"body":{"injectables/CartsService.html":{}}}],["notfoundexception(custom_messages.category_id_not_exist",{"_index":866,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["notfoundexception(custom_messages.color_not_exist",{"_index":1769,"title":{},"body":{"injectables/ProductsService.html":{}}}],["notfoundexception(custom_messages.order_not_exist",{"_index":1560,"title":{},"body":{"injectables/OrdersService.html":{}}}],["notfoundexception(custom_messages.product_exist",{"_index":1765,"title":{},"body":{"injectables/ProductsService.html":{}}}],["notfoundexception(custom_messages.size_not_exist",{"_index":1771,"title":{},"body":{"injectables/ProductsService.html":{}}}],["now",{"_index":1855,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["null",{"_index":159,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/CartsService.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"injectables/PromotionsService.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":161,"title":{},"body":{"injectables/AddressesService.html":{},"classes/Cart.html":{},"classes/CartItemDto.html":{},"injectables/CartsService.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/Order.html":{},"interfaces/OrderSummary.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{},"interfaces/Response.html":{},"classes/Review.html":{}}}],["này",{"_index":1950,"title":{},"body":{"injectables/ReviewsService.html":{},"miscellaneous/enumerations.html":{}}}],["nâu",{"_index":2343,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["năng",{"_index":2456,"title":{},"body":{"index.html":{}}}],["nội",{"_index":1135,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["object",{"_index":885,"title":{},"body":{"classes/Category.html":{},"classes/Order.html":{},"classes/Permission.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/User.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["object.keys(changes).length",{"_index":2245,"title":{},"body":{"classes/Utils.html":{}}}],["object.keys(data1",{"_index":2240,"title":{},"body":{"classes/Utils.html":{}}}],["objectid",{"_index":1169,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["objectid'})@isnotempty({message",{"_index":1165,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["observable",{"_index":2090,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["offset",{"_index":1542,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{}}}],["omittype",{"_index":2117,"title":{},"body":{"classes/UpdateOrderDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateUserDto.html":{}}}],["omittype(createreviewdto",{"_index":2133,"title":{},"body":{"classes/UpdateReviewDto.html":{}}}],["omittype(createuserdto",{"_index":2138,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["onmoduleinit",{"_index":841,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"injectables/ProductsService.html":{},"injectables/RolesService.html":{}}}],["operationid",{"_index":2078,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["operationidfactory",{"_index":2056,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["optional",{"_index":67,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CartExistsRule.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"controllers/FilesController.html":{},"interfaces/IUser.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"interfaces/SwaggerDocumentOptions.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"injectables/ValidateObjectIdPipe.html":{},"miscellaneous/functions.html":{}}}],["options.interface.ts",{"_index":2051,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{},"coverage.html":{}}}],["orange",{"_index":2347,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["order",{"_index":1410,"title":{"classes/Order.html":{}},"body":{"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderStatusDto.html":{},"coverage.html":{}}}],["order.dto",{"_index":1471,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderDto.html":{}}}],["order.dto.ts",{"_index":957,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:16",{"_index":964,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:17",{"_index":2113,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["order.dto.ts:26",{"_index":980,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{}}}],["order.dto.ts:35",{"_index":971,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{}}}],["order.dto.ts:44",{"_index":2115,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["order.name",{"_index":1495,"title":{},"body":{"modules/OrdersModule.html":{}}}],["order.order_status",{"_index":1561,"title":{},"body":{"injectables/OrdersService.html":{}}}],["order.payment_status",{"_index":1573,"title":{},"body":{"injectables/OrdersService.html":{}}}],["order.toobject",{"_index":1564,"title":{},"body":{"injectables/OrdersService.html":{}}}],["order_cannot_update",{"_index":2434,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["order_not_exist",{"_index":2433,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["order_status",{"_index":1414,"title":{},"body":{"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderStatusDto.html":{}}}],["order_status_invalid",{"_index":2435,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["orderdocument",{"_index":1441,"title":{},"body":{"classes/Order.html":{},"injectables/OrdersService.html":{},"miscellaneous/typealiases.html":{}}}],["ordermodel",{"_index":1501,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orders",{"_index":1447,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["orders.controller",{"_index":1492,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders.map(order",{"_index":1556,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orders.service",{"_index":1470,"title":{},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{}}}],["orders/orders.module",{"_index":1818,"title":{},"body":{"modules/PromotionsModule.html":{}}}],["orderschema",{"_index":1442,"title":{},"body":{"classes/Order.html":{},"modules/OrdersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderscontroller",{"_index":1445,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["ordersmodule",{"_index":250,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules/PromotionsModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ordersservice",{"_index":1469,"title":{"injectables/OrdersService.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["orderstatus",{"_index":982,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["orderstatus.cancelled",{"_index":2625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderstatus.confirmed",{"_index":2624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderstatus.delivered",{"_index":2627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderstatus.pending",{"_index":1525,"title":{},"body":{"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["orderstatus.shipping",{"_index":2626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderstatustransitions",{"_index":1517,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderstatustransitions[currentstatus",{"_index":1570,"title":{},"body":{"injectables/OrdersService.html":{}}}],["ordersummary",{"_index":716,"title":{"interfaces/OrderSummary.html":{}},"body":{"injectables/CartsService.html":{},"interfaces/OrderSummary.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["ordersummary.discountamount",{"_index":1527,"title":{},"body":{"injectables/OrdersService.html":{}}}],["ordersummary.shippingcost",{"_index":1530,"title":{},"body":{"injectables/OrdersService.html":{}}}],["ordersummary.taxamount",{"_index":1531,"title":{},"body":{"injectables/OrdersService.html":{}}}],["ordersummary.total",{"_index":1532,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orm",{"_index":2483,"title":{},"body":{"index.html":{}}}],["out",{"_index":140,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/CategoriesModule.html":{},"modules/DatabaseModule.html":{},"modules/FilesModule.html":{},"modules/OrdersModule.html":{},"modules/PermissionsModule.html":{},"modules/ProductsModule.html":{},"modules/PromotionsModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["out_of_stock",{"_index":2432,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overview",{"_index":2495,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1067,"title":{},"body":{"classes/CreatePromotionDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":2292,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":1558,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":1540,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["paginate",{"_index":1005,"title":{},"body":{"classes/CreatePermissionDto.html":{},"miscellaneous/variables.html":{}}}],["paid",{"_index":2377,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["parallel",{"_index":722,"title":{},"body":{"injectables/CartsService.html":{}}}],["param",{"_index":89,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/FilesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":660,"title":{},"body":{"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["param('itemid",{"_index":661,"title":{},"body":{"controllers/CartsController.html":{}}}],["parameters",{"_index":65,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CartExistsRule.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"controllers/FilesController.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"injectables/ValidateObjectIdPipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1513,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parser",{"_index":2310,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":337,"title":{},"body":{"classes/ApplyPromotionDto.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePromotionDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createaddressdto",{"_index":2107,"title":{},"body":{"classes/UpdateAddressDto.html":{}}}],["partialtype(createcategorydto",{"_index":2109,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["partialtype(createpermissiondto",{"_index":2127,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createproductdto",{"_index":2129,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createpromotiondto",{"_index":2131,"title":{},"body":{"classes/UpdatePromotionDto.html":{}}}],["partialtype(createroledto",{"_index":2135,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["passport",{"_index":1386,"title":{},"body":{"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/jwt.strategy",{"_index":427,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local.strategy",{"_index":421,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":422,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":433,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1384,"title":{},"body":{"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1379,"title":{},"body":{"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"interfaces/IUser.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["passwordfield",{"_index":1406,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["pastel",{"_index":2358,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pastelblue",{"_index":2359,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pastelpink",{"_index":2357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pastelpurple",{"_index":2361,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pastelyellow",{"_index":2360,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["patch",{"_index":88,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":118,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["patch(':id')@responsemessage('cập",{"_index":83,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/OrdersController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/UsersController.html":{}}}],["patch(':id/payment",{"_index":1465,"title":{},"body":{"controllers/OrdersController.html":{}}}],["patch(':id/status",{"_index":1484,"title":{},"body":{"controllers/OrdersController.html":{}}}],["patch(':id/status')@responsemessage('cập",{"_index":1461,"title":{},"body":{"controllers/OrdersController.html":{}}}],["path",{"_index":235,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CreatePermissionDto.html":{}}}],["payload",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["payment",{"_index":1475,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/UpdatePaymentStatusDto.html":{},"coverage.html":{}}}],["payment_method",{"_index":960,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderDto.html":{}}}],["payment_status",{"_index":1415,"title":{},"body":{"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/UpdatePaymentStatusDto.html":{}}}],["paymentmethod",{"_index":973,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{},"miscellaneous/enumerations.html":{}}}],["paymentstatus",{"_index":1515,"title":{},"body":{"injectables/OrdersService.html":{},"classes/UpdatePaymentStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["paymentstatus.cancelled",{"_index":2630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentstatus.failed",{"_index":2629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentstatus.paid",{"_index":2628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentstatus.pending",{"_index":1526,"title":{},"body":{"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["paymentstatustransitions",{"_index":1518,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paymentstatustransitions[currentstatus",{"_index":1574,"title":{},"body":{"injectables/OrdersService.html":{}}}],["pending",{"_index":2376,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["percentage",{"_index":2367,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permission",{"_index":991,"title":{"classes/Permission.html":{}},"body":{"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/JwtAuthGuard.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.apipath",{"_index":1375,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["permission.dto",{"_index":1622,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":987,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:12",{"_index":1006,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:21",{"_index":995,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:30",{"_index":996,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:39",{"_index":1003,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.method",{"_index":1376,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["permission.name",{"_index":1219,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/PermissionsModule.html":{},"classes/Role.html":{}}}],["permission_exist",{"_index":2417,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permission_id_not_exist",{"_index":2418,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permissiondocument",{"_index":1231,"title":{},"body":{"injectables/DatabaseService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodel",{"_index":1224,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":1152,"title":{},"body":{"classes/CreateRoleDto.html":{},"injectables/DatabaseService.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["permissions.controller",{"_index":1636,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.filter",{"_index":1664,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["permissions.find",{"_index":1374,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["permissions.service",{"_index":1621,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":2010,"title":{},"body":{"modules/RolesModule.html":{}}}],["permissions/permissions.service",{"_index":2023,"title":{},"body":{"injectables/RolesService.html":{}}}],["permissionschema",{"_index":1215,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionscontroller",{"_index":1593,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":251,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["permissionsservice",{"_index":1620,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"coverage.html":{},"overview.html":{}}}],["ph",{"_index":915,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreatePromotionDto.html":{}}}],["phonenumber",{"_index":10,"title":{},"body":{"classes/Address.html":{},"classes/CreateAddressDto.html":{}}}],["phân",{"_index":1603,"title":{},"body":{"controllers/PermissionsController.html":{},"classes/QueryDto.html":{},"controllers/RolesController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["phép",{"_index":2042,"title":{},"body":{"injectables/RolesService.html":{}}}],["phương",{"_index":975,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{}}}],["phường",{"_index":920,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/UpdateOrderDto.html":{}}}],["phạm",{"_index":2102,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["phải",{"_index":321,"title":{},"body":{"classes/ApplyAddressDto.html":{},"classes/CartItemDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/QueryDto.html":{},"classes/UpdateOrderDto.html":{},"miscellaneous/enumerations.html":{}}}],["phần",{"_index":1085,"title":{},"body":{"classes/CreatePromotionDto.html":{},"injectables/RolesService.html":{},"miscellaneous/enumerations.html":{}}}],["phẩm",{"_index":573,"title":{},"body":{"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"classes/CreateCartDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"injectables/ReviewsService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["picktype",{"_index":340,"title":{},"body":{"classes/ApplyPromotionDto.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateOrderDto.html":{}}}],["picktype(createorderdto",{"_index":2111,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["picktype(createpromotiondto",{"_index":338,"title":{},"body":{"classes/ApplyPromotionDto.html":{}}}],["picktype(createuserdto",{"_index":1409,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["pink",{"_index":2349,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pipetransform",{"_index":2252,"title":{},"body":{"injectables/ValidateObjectIdPipe.html":{}}}],["platform",{"_index":2481,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":178,"title":{},"body":{"injectables/AddressesService.html":{},"modules/AppModule.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["populate('items.product",{"_index":740,"title":{},"body":{"injectables/CartsService.html":{},"injectables/OrdersService.html":{}}}],["populate('shipping_address",{"_index":741,"title":{},"body":{"injectables/CartsService.html":{}}}],["populate(population",{"_index":1554,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":1536,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["post",{"_index":86,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/AuthController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/FilesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post(':id/addresses",{"_index":668,"title":{},"body":{"controllers/CartsController.html":{}}}],["post(':id/items",{"_index":655,"title":{},"body":{"controllers/CartsController.html":{}}}],["post(':id/items')@responsemessage('thêm",{"_index":617,"title":{},"body":{"controllers/CartsController.html":{}}}],["post(':id/promotions",{"_index":664,"title":{},"body":{"controllers/CartsController.html":{}}}],["post(':id/promotions')@responsemessage('áp",{"_index":627,"title":{},"body":{"controllers/CartsController.html":{}}}],["post('login",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":397,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload",{"_index":1322,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('upload')@apiconsumes('multipart/form",{"_index":1305,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@responsemessage('tạo",{"_index":61,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/CartsController.html":{},"controllers/OrdersController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/UsersController.html":{}}}],["prefix",{"_index":50,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/AuthController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/DatabaseController.html":{},"controllers/FilesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"interfaces/SwaggerDocumentOptions.html":{},"controllers/UsersController.html":{}}}],["price",{"_index":800,"title":{},"body":{"injectables/CartsService.html":{},"classes/CreateProductDto.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{}}}],["private",{"_index":185,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"classes/JwtStrategy.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["processnewtoken",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["processnewtoken(refreshtoken",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["product",{"_index":518,"title":{"classes/Product.html":{}},"body":{"classes/Cart.html":{},"injectables/CartsService.html":{},"classes/CreateReviewDto.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Review.html":{},"injectables/ReviewsService.html":{},"coverage.html":{}}}],["product.colors.includes(color",{"_index":1768,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.dto",{"_index":1710,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":1009,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:110",{"_index":1034,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:119",{"_index":1027,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:128",{"_index":1030,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:137",{"_index":1022,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:23",{"_index":1046,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:32",{"_index":1035,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:48",{"_index":1043,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:60",{"_index":1026,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:72",{"_index":1045,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:88",{"_index":1049,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:97",{"_index":1023,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.name",{"_index":1727,"title":{},"body":{"modules/ProductsModule.html":{},"classes/Review.html":{}}}],["product.sizes.includes(size",{"_index":1770,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product_exist",{"_index":2412,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["productdata",{"_index":1752,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productdata.sku",{"_index":1756,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productdocument",{"_index":1687,"title":{},"body":{"classes/Product.html":{},"injectables/ProductsService.html":{},"miscellaneous/typealiases.html":{}}}],["productexists",{"_index":600,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateCartDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["productexists(validationoptions",{"_index":2446,"title":{},"body":{"miscellaneous/functions.html":{}}}],["productexistsrule",{"_index":259,"title":{"injectables/ProductExistsRule.html":{}},"body":{"modules/AppModule.html":{},"injectables/ProductExistsRule.html":{},"coverage.html":{},"overview.html":{}}}],["productid",{"_index":557,"title":{},"body":{"classes/CartItemDto.html":{},"injectables/CartsService.html":{},"classes/CreateCartDto.html":{},"classes/CreateReviewDto.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"classes/UpdateReviewDto.html":{}}}],["productmodel",{"_index":1734,"title":{},"body":{"injectables/ProductsService.html":{}}}],["products",{"_index":1699,"title":{},"body":{"controllers/ProductsController.html":{},"miscellaneous/variables.html":{}}}],["products.controller",{"_index":1724,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.service",{"_index":1709,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["products/products.module",{"_index":680,"title":{},"body":{"modules/CartsModule.html":{},"modules/ReviewsModule.html":{}}}],["products/products.service",{"_index":713,"title":{},"body":{"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"injectables/ReviewsService.html":{}}}],["productschema",{"_index":1689,"title":{},"body":{"classes/Product.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productscontroller",{"_index":1697,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productservice",{"_index":692,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ReviewsService.html":{}}}],["productsmodule",{"_index":252,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["productsservice",{"_index":693,"title":{"injectables/ProductsService.html":{}},"body":{"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":2634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projection",{"_index":1658,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["promise",{"_index":165,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{}}}],["promise.all",{"_index":724,"title":{},"body":{"injectables/CartsService.html":{}}}],["promotion",{"_index":520,"title":{"classes/Promotion.html":{}},"body":{"classes/Cart.html":{},"classes/Promotion.html":{},"modules/PromotionsModule.html":{},"injectables/PromotionsService.html":{},"coverage.html":{}}}],["promotion.condition",{"_index":1860,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["promotion.coupon",{"_index":1850,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["promotion.discount_amount",{"_index":1862,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["promotion.discount_type",{"_index":1861,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["promotion.dto",{"_index":342,"title":{},"body":{"classes/ApplyPromotionDto.html":{},"controllers/CartsController.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"classes/UpdatePromotionDto.html":{}}}],["promotion.dto.ts",{"_index":335,"title":{},"body":{"classes/ApplyPromotionDto.html":{},"classes/CreatePromotionDto.html":{},"classes/UpdatePromotionDto.html":{},"coverage.html":{}}}],["promotion.dto.ts:106",{"_index":1109,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["promotion.dto.ts:118",{"_index":1099,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["promotion.dto.ts:26",{"_index":1075,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["promotion.dto.ts:39",{"_index":1115,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["promotion.dto.ts:49",{"_index":1077,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["promotion.dto.ts:64",{"_index":1083,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["promotion.dto.ts:74",{"_index":1104,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["promotion.dto.ts:85",{"_index":1089,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["promotion.dto.ts:94",{"_index":1073,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["promotion.end_date",{"_index":1856,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["promotion.name",{"_index":1819,"title":{},"body":{"modules/PromotionsModule.html":{}}}],["promotion.status",{"_index":1857,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["promotion_conditions_not_met",{"_index":2426,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["promotion_exist",{"_index":2420,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["promotion_expired",{"_index":2422,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["promotion_invalid",{"_index":2421,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["promotion_not_exist",{"_index":2419,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["promotiondocument",{"_index":1791,"title":{},"body":{"classes/Promotion.html":{},"injectables/PromotionsService.html":{},"miscellaneous/typealiases.html":{}}}],["promotionmodel",{"_index":1826,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["promotions",{"_index":1796,"title":{},"body":{"controllers/PromotionsController.html":{},"miscellaneous/variables.html":{}}}],["promotions.controller",{"_index":1816,"title":{},"body":{"modules/PromotionsModule.html":{}}}],["promotions.service",{"_index":1804,"title":{},"body":{"controllers/PromotionsController.html":{},"modules/PromotionsModule.html":{}}}],["promotions/dto/apply",{"_index":643,"title":{},"body":{"controllers/CartsController.html":{}}}],["promotions/promotions.module",{"_index":678,"title":{},"body":{"modules/CartsModule.html":{}}}],["promotions/promotions.service",{"_index":711,"title":{},"body":{"injectables/CartsService.html":{}}}],["promotionschema",{"_index":1792,"title":{},"body":{"classes/Promotion.html":{},"modules/PromotionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["promotionscontroller",{"_index":1794,"title":{"controllers/PromotionsController.html":{}},"body":{"controllers/PromotionsController.html":{},"modules/PromotionsModule.html":{},"coverage.html":{}}}],["promotionservice",{"_index":689,"title":{},"body":{"injectables/CartsService.html":{}}}],["promotionsmodule",{"_index":253,"title":{"modules/PromotionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/PromotionsModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["promotionsservice",{"_index":690,"title":{"injectables/PromotionsService.html":{}},"body":{"injectables/CartsService.html":{},"controllers/PromotionsController.html":{},"modules/PromotionsModule.html":{},"injectables/PromotionsService.html":{},"coverage.html":{},"overview.html":{}}}],["prop",{"_index":30,"title":{},"body":{"classes/Address.html":{},"classes/Cart.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/Permission.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["prop(['string",{"_index":1675,"title":{},"body":{"classes/Product.html":{}}}],["prop([string",{"_index":1688,"title":{},"body":{"classes/Product.html":{}}}],["prop({default",{"_index":1419,"title":{},"body":{"classes/Order.html":{}}}],["prop({enum",{"_index":1782,"title":{},"body":{"classes/Promotion.html":{}}}],["prop({required",{"_index":18,"title":{},"body":{"classes/Address.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["prop({type",{"_index":25,"title":{},"body":{"classes/Address.html":{},"classes/Cart.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/Permission.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["prop({unique",{"_index":1774,"title":{},"body":{"classes/Promotion.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/Address.html":{},"classes/ApplyAddressDto.html":{},"classes/Cart.html":{},"classes/CartItemDto.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/FileUploadDto.html":{},"interfaces/IUser.html":{},"classes/Order.html":{},"interfaces/OrderSummary.html":{},"classes/Permission.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"classes/QueryDto.html":{},"classes/RemoveCartItemsDto.html":{},"interfaces/Response.html":{},"classes/Review.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"interfaces/SwaggerDocumentOptions.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["protected",{"_index":1390,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["provide",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":133,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/CategoriesModule.html":{},"modules/DatabaseModule.html":{},"modules/FilesModule.html":{},"modules/OrdersModule.html":{},"modules/PermissionsModule.html":{},"modules/ProductsModule.html":{},"modules/PromotionsModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["province",{"_index":11,"title":{},"body":{"classes/Address.html":{},"injectables/AddressesService.html":{},"classes/CreateAddressDto.html":{}}}],["public",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@post('signup')@responsemessage('thực",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@responsemessage('áp",{"_index":622,"title":{},"body":{"controllers/CartsController.html":{}}}],["public/images",{"_index":2653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pull",{"_index":766,"title":{},"body":{"injectables/CartsService.html":{}}}],["purple",{"_index":2355,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["push",{"_index":757,"title":{},"body":{"injectables/CartsService.html":{}}}],["q.10",{"_index":1173,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["qs",{"_index":1455,"title":{},"body":{"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"classes/QueryDto.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["qu",{"_index":2032,"title":{},"body":{"injectables/RolesService.html":{}}}],["quan",{"_index":2457,"title":{},"body":{"index.html":{}}}],["quantity",{"_index":526,"title":{},"body":{"classes/Cart.html":{},"classes/CartItemDto.html":{},"injectables/CartsService.html":{},"classes/CreateCartDto.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{}}}],["query",{"_index":1468,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"classes/QueryDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["querydto",{"_index":1863,"title":{"classes/QueryDto.html":{}},"body":{"classes/QueryDto.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["querystring",{"_index":1612,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["quyền",{"_index":1252,"title":{},"body":{"injectables/DatabaseService.html":{},"controllers/PermissionsController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["quyền')@delete(':id",{"_index":1615,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["quyền')@get",{"_index":1610,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["quyền')@get(':id",{"_index":1613,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["quyền')@patch(':id",{"_index":1618,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["quyền')@post",{"_index":1597,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["quản",{"_index":1021,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/DatabaseService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["quận",{"_index":922,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/UpdateOrderDto.html":{}}}],["readonly",{"_index":108,"title":{},"body":{"controllers/AddressesController.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"controllers/DatabaseController.html":{},"injectables/DatabaseService.html":{},"classes/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["red",{"_index":2344,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ref",{"_index":514,"title":{},"body":{"classes/Cart.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["reflect",{"_index":2319,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1347,"title":{},"body":{"classes/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["refreshtoken",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["refreshtoken(@req",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtoken(request",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["refunded",{"_index":2383,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["registeruserdto",{"_index":373,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["registeruserdto.email",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruserdto.fullname",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruserdto.password",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["reject",{"_index":2666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["related",{"_index":1871,"title":{},"body":{"classes/QueryDto.html":{},"miscellaneous/variables.html":{}}}],["remove",{"_index":56,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"classes/RemoveCartItemsDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["remove(@param('id",{"_index":124,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/CategoriesController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["remove(_id",{"_index":76,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["remove(id",{"_index":171,"title":{},"body":{"injectables/AddressesService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/PromotionsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{}}}],["remove(user",{"_index":2197,"title":{},"body":{"injectables/UsersService.html":{}}}],["removecartdto",{"_index":636,"title":{},"body":{"controllers/CartsController.html":{}}}],["removecartdto.type",{"_index":663,"title":{},"body":{"controllers/CartsController.html":{}}}],["removecartitemsdto",{"_index":637,"title":{"classes/RemoveCartItemsDto.html":{}},"body":{"controllers/CartsController.html":{},"classes/RemoveCartItemsDto.html":{},"coverage.html":{}}}],["render",{"_index":2482,"title":{},"body":{"index.html":{}}}],["req",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{},"classes/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.cookies['refresh_token",{"_index":412,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.method",{"_index":1369,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["request.route?.path",{"_index":1371,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["request.user",{"_index":2681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('bcryptjs",{"_index":2205,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":27,"title":{},"body":{"classes/Address.html":{},"classes/ApplyAddressDto.html":{},"classes/Cart.html":{},"classes/CartItemDto.html":{},"classes/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Order.html":{},"controllers/PermissionsController.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"classes/QueryDto.html":{},"classes/RemoveCartItemsDto.html":{},"classes/Review.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["reset",{"_index":139,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/CategoriesModule.html":{},"modules/DatabaseModule.html":{},"modules/FilesModule.html":{},"modules/OrdersModule.html":{},"modules/PermissionsModule.html":{},"modules/ProductsModule.html":{},"modules/PromotionsModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":359,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.clearcookie('refresh_token",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('refresh_token",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_message",{"_index":2096,"title":{},"body":{"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsebody",{"_index":231,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["responsemessage",{"_index":103,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/AuthController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/FilesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage('cập",{"_index":119,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('lấy",{"_index":115,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/AuthController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('thêm",{"_index":656,"title":{},"body":{"controllers/CartsController.html":{}}}],["responsemessage('thực",{"_index":398,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('tạo",{"_index":109,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('upload",{"_index":1324,"title":{},"body":{"controllers/FilesController.html":{}}}],["responsemessage('xóa",{"_index":123,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/FilesController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('áp",{"_index":665,"title":{},"body":{"controllers/CartsController.html":{}}}],["responsemessage('đổi",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{}}}],["rest",{"_index":1576,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/ReviewsService.html":{}}}],["result",{"_index":1555,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["result.createdat",{"_index":1657,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["result.id",{"_index":1656,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["results",{"_index":44,"title":{},"body":{"classes/Address.html":{},"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyAddressDto.html":{},"classes/ApplyPromotionDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/CartExistsRule.html":{},"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"modules/CommonModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabaseController.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"interfaces/OrderSummary.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"controllers/PromotionsController.html":{},"modules/PromotionsModule.html":{},"injectables/PromotionsService.html":{},"classes/QueryDto.html":{},"classes/RegisterUserDto.html":{},"classes/RemoveCartItemsDto.html":{},"interfaces/Response.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"interfaces/SwaggerDocumentOptions.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePromotionDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"injectables/ValidateObjectIdPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":111,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CartExistsRule.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/FilesController.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"injectables/ValidateObjectIdPipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":69,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CartExistsRule.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"controllers/FilesController.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"injectables/ValidateObjectIdPipe.html":{}}}],["review",{"_index":1883,"title":{"classes/Review.html":{}},"body":{"classes/Review.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{}}}],["review.dto",{"_index":1915,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/UpdateReviewDto.html":{}}}],["review.dto.ts",{"_index":1130,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["review.dto.ts:14",{"_index":1141,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:28",{"_index":1146,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:37",{"_index":1137,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.name",{"_index":1931,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["review.score",{"_index":1963,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["reviewdocument",{"_index":1896,"title":{},"body":{"classes/Review.html":{},"injectables/ReviewsService.html":{},"miscellaneous/typealiases.html":{}}}],["reviewmodel",{"_index":1936,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["reviews",{"_index":1901,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"miscellaneous/variables.html":{}}}],["reviews.controller",{"_index":1929,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["reviews.length",{"_index":1964,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["reviews.reduce((accumulator",{"_index":1961,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["reviews.service",{"_index":1914,"title":{},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{}}}],["reviews/reviews.module",{"_index":1725,"title":{},"body":{"modules/ProductsModule.html":{}}}],["reviewschema",{"_index":1897,"title":{},"body":{"classes/Review.html":{},"modules/ReviewsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reviewscontroller",{"_index":1899,"title":{"controllers/ReviewsController.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"coverage.html":{}}}],["reviewsmodule",{"_index":254,"title":{"modules/ReviewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["reviewsservice",{"_index":1913,"title":{"injectables/ReviewsService.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{},"overview.html":{}}}],["role",{"_index":482,"title":{"classes/Role.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"interfaces/IUser.html":{},"classes/JwtStrategy.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role._id",{"_index":2215,"title":{},"body":{"injectables/UsersService.html":{}}}],["role.dto",{"_index":1995,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":1150,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:13",{"_index":1161,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:24",{"_index":1166,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:33",{"_index":1159,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:42",{"_index":1156,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":1217,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{}}}],["role?.permissions",{"_index":1396,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["roleadmin",{"_index":1273,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["roleadmin._id",{"_index":1285,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["roledocument",{"_index":1232,"title":{},"body":{"injectables/DatabaseService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/typealiases.html":{}}}],["roleid",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["rolemodel",{"_index":1227,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/RolesService.html":{}}}],["roles",{"_index":1980,"title":{},"body":{"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":2008,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":1994,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/roles.module",{"_index":1638,"title":{},"body":{"modules/PermissionsModule.html":{},"modules/UsersModule.html":{}}}],["roles/roles.service",{"_index":2202,"title":{},"body":{"injectables/UsersService.html":{}}}],["roleschema",{"_index":1212,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1978,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["rolesmodule",{"_index":255,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["rolesservice",{"_index":430,"title":{"injectables/RolesService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"classes/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["roletype",{"_index":2022,"title":{},"body":{"injectables/RolesService.html":{},"miscellaneous/enumerations.html":{}}}],["roletype.admin",{"_index":2028,"title":{},"body":{"injectables/RolesService.html":{}}}],["roleuser",{"_index":1275,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["roleuser._id",{"_index":1283,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["route",{"_index":994,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["routes",{"_index":2059,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["rxjs",{"_index":2092,"title":{},"body":{"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":2094,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["rồi",{"_index":1951,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["rộng",{"_index":1122,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/Promotion.html":{}}}],["s",{"_index":580,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateUserDto.html":{},"injectables/RolesService.html":{},"classes/UpdateOrderDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["saltorrounds",{"_index":2229,"title":{},"body":{"injectables/UsersService.html":{}}}],["sameday",{"_index":2391,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["schema",{"_index":31,"title":{},"body":{"classes/Address.html":{},"modules/AddressesModule.html":{},"classes/Cart.html":{},"modules/CartsModule.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"modules/DatabaseModule.html":{},"classes/Order.html":{},"modules/OrdersModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"classes/Promotion.html":{},"modules/PromotionsModule.html":{},"classes/Review.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":32,"title":{},"body":{"classes/Address.html":{},"classes/Cart.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/Permission.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(address",{"_index":43,"title":{},"body":{"classes/Address.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(cart",{"_index":531,"title":{},"body":{"classes/Cart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(category",{"_index":896,"title":{},"body":{"classes/Category.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(order",{"_index":1443,"title":{},"body":{"classes/Order.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1592,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(product",{"_index":1690,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(promotion",{"_index":1793,"title":{},"body":{"classes/Promotion.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(review",{"_index":1898,"title":{},"body":{"classes/Review.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1977,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":2153,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/address.schema",{"_index":144,"title":{},"body":{"modules/AddressesModule.html":{},"injectables/AddressesService.html":{}}}],["schemas/cart.schema",{"_index":677,"title":{},"body":{"modules/CartsModule.html":{},"injectables/CartsService.html":{}}}],["schemas/category.schema",{"_index":838,"title":{},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{}}}],["schemas/order.schema",{"_index":1493,"title":{},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["schemas/permission.schema",{"_index":1637,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schemas/product.schema",{"_index":1711,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["schemas/promotion.schema",{"_index":1817,"title":{},"body":{"modules/PromotionsModule.html":{},"injectables/PromotionsService.html":{}}}],["schemas/review.schema",{"_index":1930,"title":{},"body":{"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["schemas/role.schema",{"_index":2009,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schemas/user.schema",{"_index":2177,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["scheme",{"_index":2642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["score",{"_index":1132,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/Review.html":{}}}],["secret",{"_index":436,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":1394,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["security",{"_index":2484,"title":{},"body":{"index.html":{}}}],["select",{"_index":2219,"title":{},"body":{"injectables/UsersService.html":{}}}],["server",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["session",{"_index":434,"title":{},"body":{"modules/AuthModule.html":{}}}],["set",{"_index":2070,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["setdescription('api",{"_index":2635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setglobalprefix",{"_index":2072,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["setmetadata(is_public_key",{"_index":2677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle('danh",{"_index":2632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion('1.0.0",{"_index":2639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shipping",{"_index":2438,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["shipping_address",{"_index":508,"title":{},"body":{"classes/Cart.html":{},"injectables/CartsService.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderDto.html":{}}}],["shipping_address.fullname",{"_index":1523,"title":{},"body":{"injectables/OrdersService.html":{}}}],["shipping_address.phonenumber",{"_index":1524,"title":{},"body":{"injectables/OrdersService.html":{}}}],["shipping_address.province",{"_index":1529,"title":{},"body":{"injectables/OrdersService.html":{}}}],["shipping_address.streetaddress",{"_index":1528,"title":{},"body":{"injectables/OrdersService.html":{}}}],["shipping_cost",{"_index":1416,"title":{},"body":{"classes/Order.html":{},"injectables/OrdersService.html":{}}}],["shipping_method",{"_index":509,"title":{},"body":{"classes/Cart.html":{}}}],["shippingcost",{"_index":783,"title":{},"body":{"injectables/CartsService.html":{},"interfaces/OrderSummary.html":{}}}],["shippingmethod",{"_index":523,"title":{},"body":{"classes/Cart.html":{},"miscellaneous/enumerations.html":{}}}],["shippingmethod.standard",{"_index":529,"title":{},"body":{"classes/Cart.html":{}}}],["signoptions",{"_index":438,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(registeruserdto",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["single",{"_index":2333,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["size",{"_index":528,"title":{},"body":{"classes/Cart.html":{},"classes/CartItemDto.html":{},"injectables/CartsService.html":{},"classes/CreateCartDto.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["size_not_exist",{"_index":2431,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sizes",{"_index":1015,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["sizestype",{"_index":591,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{},"miscellaneous/enumerations.html":{}}}],["skip((current",{"_index":2220,"title":{},"body":{"injectables/UsersService.html":{}}}],["skip(offset",{"_index":1551,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{}}}],["sku",{"_index":1016,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{}}}],["soft",{"_index":177,"title":{},"body":{"injectables/AddressesService.html":{},"modules/AppModule.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdeletemodel",{"_index":155,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"injectables/DatabaseService.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":1535,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["sort(defaultsort",{"_index":1553,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Address.html":{},"controllers/AddressesController.html":{},"modules/AddressesModule.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ApplyAddressDto.html":{},"classes/ApplyPromotionDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/CartExistsRule.html":{},"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"modules/CommonModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabaseController.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"interfaces/OrderSummary.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"controllers/PromotionsController.html":{},"modules/PromotionsModule.html":{},"injectables/PromotionsService.html":{},"classes/QueryDto.html":{},"classes/RegisterUserDto.html":{},"classes/RemoveCartItemsDto.html":{},"interfaces/Response.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"interfaces/SwaggerDocumentOptions.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdatePromotionDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"injectables/ValidateObjectIdPipe.html":{}}}],["specific_products",{"_index":1124,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/Promotion.html":{}}}],["specification",{"_index":2067,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["src/.../address.schema.ts",{"_index":2505,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":2522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.decorator.ts",{"_index":2521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cart",{"_index":2325,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/.../cart.schema.ts",{"_index":2506,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../category.schema.ts",{"_index":2507,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":2517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../custom",{"_index":2328,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../enums.ts",{"_index":2327,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":2441,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../master",{"_index":2516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../multer.config.ts",{"_index":2520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../order.schema.ts",{"_index":2508,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../permission.schema.ts",{"_index":2509,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../product",{"_index":2442,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product.schema.ts",{"_index":2510,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../promotion.schema.ts",{"_index":2511,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../response.decorator.ts",{"_index":2523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../review.schema.ts",{"_index":2512,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":2513,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../status.enum.ts",{"_index":2331,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../swagger.config.ts",{"_index":2519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.decorator.ts",{"_index":2524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":2514,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../users.service.ts",{"_index":2518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":240,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":305,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":307,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:31",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:37",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:43",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.decorator",{"_index":645,"title":{},"body":{"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{}}}],["src/auth/auth.decorator.ts",{"_index":2263,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.module.ts",{"_index":418,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:33",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:49",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:82",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:89",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/guards/jwt",{"_index":1341,"title":{},"body":{"classes/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":1397,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":1378,"title":{},"body":{"classes/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:21",{"_index":1383,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:9",{"_index":1381,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":1399,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:16",{"_index":1403,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:8",{"_index":1401,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/common/common.module.ts",{"_index":898,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/constants/constants",{"_index":720,"title":{},"body":{"injectables/CartsService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["src/common/constants/constants.ts",{"_index":2267,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/cart",{"_index":981,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/decorators/product",{"_index":601,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateCartDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/decorators/response.decorator",{"_index":104,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/AuthController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/FilesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["src/common/decorators/response.decorator.ts",{"_index":2269,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/user.decorator",{"_index":101,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/AuthController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["src/common/decorators/user.decorator.ts",{"_index":2270,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dtos/query.dto",{"_index":1996,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/common/dtos/query.dto.ts",{"_index":1864,"title":{},"body":{"classes/QueryDto.html":{},"coverage.html":{}}}],["src/common/dtos/query.dto.ts:14",{"_index":1873,"title":{},"body":{"classes/QueryDto.html":{}}}],["src/common/enums/custom",{"_index":180,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"classes/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"miscellaneous/enumerations.html":{}}}],["src/common/enums/enums",{"_index":524,"title":{},"body":{"classes/Cart.html":{},"classes/CartItemDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"injectables/OrdersService.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{},"injectables/RolesService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentStatusDto.html":{}}}],["src/common/enums/enums.ts",{"_index":2335,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/status.enum",{"_index":983,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderStatusDto.html":{}}}],["src/common/enums/status.enum.ts",{"_index":2436,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/interceptors/transform.interceptor.ts",{"_index":2083,"title":{},"body":{"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/transform.interceptor.ts:16",{"_index":2085,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/common/interceptors/transform.interceptor.ts:18",{"_index":2089,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/common/interfaces/order",{"_index":717,"title":{},"body":{"injectables/CartsService.html":{},"interfaces/OrderSummary.html":{},"coverage.html":{}}}],["src/common/interfaces/response.interface.ts",{"_index":1881,"title":{},"body":{"interfaces/Response.html":{},"coverage.html":{}}}],["src/common/interfaces/swagger",{"_index":2050,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{},"coverage.html":{}}}],["src/common/interfaces/user.interface",{"_index":102,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/AuthController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["src/common/interfaces/user.interface.ts",{"_index":1339,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/common/pipes/validate_object_id.pipe",{"_index":98,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["src/common/pipes/validate_object_id.pipe.ts",{"_index":2246,"title":{},"body":{"injectables/ValidateObjectIdPipe.html":{},"coverage.html":{}}}],["src/common/pipes/validate_object_id.pipe.ts:7",{"_index":2251,"title":{},"body":{"injectables/ValidateObjectIdPipe.html":{}}}],["src/common/validators/cart",{"_index":532,"title":{},"body":{"injectables/CartExistsRule.html":{},"coverage.html":{}}}],["src/common/validators/product",{"_index":1691,"title":{},"body":{"injectables/ProductExistsRule.html":{},"coverage.html":{}}}],["src/config/multer.config",{"_index":1317,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/config/multer.config.ts",{"_index":2273,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/swagger.config.ts",{"_index":2275,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/filters/all_exception.filter.ts",{"_index":203,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/core/filters/all_exception.filter.ts:6",{"_index":209,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/core/filters/all_exception.filter.ts:9",{"_index":213,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/database/database.controller.ts",{"_index":1203,"title":{},"body":{"controllers/DatabaseController.html":{},"coverage.html":{}}}],["src/database/database.module.ts",{"_index":1210,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/database.service.ts",{"_index":1220,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{}}}],["src/database/database.service.ts:13",{"_index":1226,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/database/database.service.ts:23",{"_index":1228,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/database/master",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":2278,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models/addresses/addresses.controller.ts",{"_index":49,"title":{},"body":{"controllers/AddressesController.html":{},"coverage.html":{}}}],["src/models/addresses/addresses.controller.ts:18",{"_index":64,"title":{},"body":{"controllers/AddressesController.html":{}}}],["src/models/addresses/addresses.controller.ts:24",{"_index":75,"title":{},"body":{"controllers/AddressesController.html":{}}}],["src/models/addresses/addresses.controller.ts:30",{"_index":85,"title":{},"body":{"controllers/AddressesController.html":{}}}],["src/models/addresses/addresses.controller.ts:36",{"_index":78,"title":{},"body":{"controllers/AddressesController.html":{}}}],["src/models/addresses/addresses.module.ts",{"_index":141,"title":{},"body":{"modules/AddressesModule.html":{}}}],["src/models/addresses/addresses.service.ts",{"_index":150,"title":{},"body":{"injectables/AddressesService.html":{},"coverage.html":{}}}],["src/models/addresses/addresses.service.ts:11",{"_index":156,"title":{},"body":{"injectables/AddressesService.html":{}}}],["src/models/addresses/addresses.service.ts:17",{"_index":164,"title":{},"body":{"injectables/AddressesService.html":{}}}],["src/models/addresses/addresses.service.ts:24",{"_index":167,"title":{},"body":{"injectables/AddressesService.html":{}}}],["src/models/addresses/addresses.service.ts:28",{"_index":169,"title":{},"body":{"injectables/AddressesService.html":{}}}],["src/models/addresses/addresses.service.ts:32",{"_index":174,"title":{},"body":{"injectables/AddressesService.html":{}}}],["src/models/addresses/addresses.service.ts:46",{"_index":172,"title":{},"body":{"injectables/AddressesService.html":{}}}],["src/models/addresses/addresses.service.ts:50",{"_index":160,"title":{},"body":{"injectables/AddressesService.html":{}}}],["src/models/addresses/dto/apply",{"_index":311,"title":{},"body":{"classes/ApplyAddressDto.html":{},"coverage.html":{}}}],["src/models/addresses/dto/create",{"_index":899,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["src/models/addresses/dto/update",{"_index":2106,"title":{},"body":{"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["src/models/addresses/schemas/address.schema",{"_index":522,"title":{},"body":{"classes/Cart.html":{}}}],["src/models/addresses/schemas/address.schema.ts",{"_index":6,"title":{},"body":{"classes/Address.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/models/addresses/schemas/address.schema.ts:10",{"_index":28,"title":{},"body":{"classes/Address.html":{}}}],["src/models/addresses/schemas/address.schema.ts:13",{"_index":21,"title":{},"body":{"classes/Address.html":{}}}],["src/models/addresses/schemas/address.schema.ts:16",{"_index":24,"title":{},"body":{"classes/Address.html":{}}}],["src/models/addresses/schemas/address.schema.ts:19",{"_index":23,"title":{},"body":{"classes/Address.html":{}}}],["src/models/addresses/schemas/address.schema.ts:22",{"_index":22,"title":{},"body":{"classes/Address.html":{}}}],["src/models/carts/cart",{"_index":2332,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/models/carts/carts.controller.ts",{"_index":611,"title":{},"body":{"controllers/CartsController.html":{},"coverage.html":{}}}],["src/models/carts/carts.controller.ts:22",{"_index":632,"title":{},"body":{"controllers/CartsController.html":{}}}],["src/models/carts/carts.controller.ts:28",{"_index":634,"title":{},"body":{"controllers/CartsController.html":{}}}],["src/models/carts/carts.controller.ts:34",{"_index":620,"title":{},"body":{"controllers/CartsController.html":{}}}],["src/models/carts/carts.controller.ts:40",{"_index":640,"title":{},"body":{"controllers/CartsController.html":{}}}],["src/models/carts/carts.controller.ts:50",{"_index":629,"title":{},"body":{"controllers/CartsController.html":{}}}],["src/models/carts/carts.controller.ts:60",{"_index":625,"title":{},"body":{"controllers/CartsController.html":{}}}],["src/models/carts/carts.module.ts",{"_index":675,"title":{},"body":{"modules/CartsModule.html":{}}}],["src/models/carts/carts.service",{"_index":547,"title":{},"body":{"injectables/CartExistsRule.html":{}}}],["src/models/carts/carts.service.ts",{"_index":682,"title":{},"body":{"injectables/CartsService.html":{},"coverage.html":{}}}],["src/models/carts/carts.service.ts:125",{"_index":710,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/models/carts/carts.service.ts:16",{"_index":694,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/models/carts/carts.service.ts:168",{"_index":699,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/models/carts/carts.service.ts:201",{"_index":697,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/models/carts/carts.service.ts:235",{"_index":709,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/models/carts/carts.service.ts:24",{"_index":702,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/models/carts/carts.service.ts:255",{"_index":701,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/models/carts/carts.service.ts:263",{"_index":705,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/models/carts/carts.service.ts:276",{"_index":707,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/models/carts/carts.service.ts:51",{"_index":703,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/models/carts/carts.service.ts:64",{"_index":696,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/models/carts/dto/cart",{"_index":555,"title":{},"body":{"classes/CartItemDto.html":{},"coverage.html":{}}}],["src/models/carts/dto/create",{"_index":926,"title":{},"body":{"classes/CreateCartDto.html":{},"coverage.html":{}}}],["src/models/carts/dto/remove",{"_index":1875,"title":{},"body":{"classes/RemoveCartItemsDto.html":{},"coverage.html":{}}}],["src/models/carts/schemas/cart.schema.ts",{"_index":506,"title":{},"body":{"classes/Cart.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/models/carts/schemas/cart.schema.ts:14",{"_index":517,"title":{},"body":{"classes/Cart.html":{}}}],["src/models/carts/schemas/cart.schema.ts:27",{"_index":513,"title":{},"body":{"classes/Cart.html":{}}}],["src/models/carts/schemas/cart.schema.ts:35",{"_index":516,"title":{},"body":{"classes/Cart.html":{}}}],["src/models/carts/schemas/cart.schema.ts:38",{"_index":515,"title":{},"body":{"classes/Cart.html":{}}}],["src/models/carts/schemas/cart.schema.ts:41",{"_index":511,"title":{},"body":{"classes/Cart.html":{}}}],["src/models/categories/categories.controller.ts",{"_index":802,"title":{},"body":{"controllers/CategoriesController.html":{},"coverage.html":{}}}],["src/models/categories/categories.controller.ts:19",{"_index":808,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/models/categories/categories.controller.ts:26",{"_index":811,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/models/categories/categories.controller.ts:33",{"_index":814,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/models/categories/categories.controller.ts:39",{"_index":819,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/models/categories/categories.controller.ts:49",{"_index":816,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/models/categories/categories.module.ts",{"_index":834,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["src/models/categories/categories.service.ts",{"_index":840,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/models/categories/categories.service.ts:14",{"_index":844,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/models/categories/categories.service.ts:22",{"_index":849,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/models/categories/categories.service.ts:26",{"_index":846,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/models/categories/categories.service.ts:46",{"_index":847,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/models/categories/categories.service.ts:50",{"_index":848,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/models/categories/categories.service.ts:58",{"_index":851,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/models/categories/categories.service.ts:83",{"_index":850,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/models/categories/dto/create",{"_index":941,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/models/categories/dto/update",{"_index":2108,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["src/models/categories/schemas/category.schema",{"_index":1686,"title":{},"body":{"classes/Product.html":{}}}],["src/models/categories/schemas/category.schema.ts",{"_index":878,"title":{},"body":{"classes/Category.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/models/categories/schemas/category.schema.ts:12",{"_index":890,"title":{},"body":{"classes/Category.html":{}}}],["src/models/categories/schemas/category.schema.ts:15",{"_index":889,"title":{},"body":{"classes/Category.html":{}}}],["src/models/categories/schemas/category.schema.ts:18",{"_index":886,"title":{},"body":{"classes/Category.html":{}}}],["src/models/categories/schemas/category.schema.ts:24",{"_index":895,"title":{},"body":{"classes/Category.html":{}}}],["src/models/categories/schemas/category.schema.ts:30",{"_index":888,"title":{},"body":{"classes/Category.html":{}}}],["src/models/categories/schemas/category.schema.ts:36",{"_index":884,"title":{},"body":{"classes/Category.html":{}}}],["src/models/categories/schemas/category.schema.ts:39",{"_index":894,"title":{},"body":{"classes/Category.html":{}}}],["src/models/categories/schemas/category.schema.ts:42",{"_index":892,"title":{},"body":{"classes/Category.html":{}}}],["src/models/categories/schemas/category.schema.ts:45",{"_index":887,"title":{},"body":{"classes/Category.html":{}}}],["src/models/categories/schemas/category.schema.ts:9",{"_index":893,"title":{},"body":{"classes/Category.html":{}}}],["src/models/files/dto/file",{"_index":1289,"title":{},"body":{"classes/FileUploadDto.html":{},"coverage.html":{}}}],["src/models/files/files.controller.ts",{"_index":1298,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/models/files/files.controller.ts:19",{"_index":1309,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/models/files/files.controller.ts:28",{"_index":1302,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/models/files/files.module.ts",{"_index":1333,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/models/files/files.service.ts",{"_index":1336,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/models/orders/dto/create",{"_index":956,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["src/models/orders/dto/update",{"_index":2110,"title":{},"body":{"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"coverage.html":{}}}],["src/models/orders/orders.controller.ts",{"_index":1446,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{}}}],["src/models/orders/orders.controller.ts:21",{"_index":1451,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/models/orders/orders.controller.ts:28",{"_index":1454,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/models/orders/orders.controller.ts:34",{"_index":1456,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/models/orders/orders.controller.ts:40",{"_index":1458,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/models/orders/orders.controller.ts:50",{"_index":1462,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/models/orders/orders.controller.ts:59",{"_index":1467,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/models/orders/orders.module.ts",{"_index":1491,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/models/orders/orders.service.ts",{"_index":1496,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/models/orders/orders.service.ts:101",{"_index":1508,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/models/orders/orders.service.ts:131",{"_index":1509,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/models/orders/orders.service.ts:150",{"_index":1510,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/models/orders/orders.service.ts:169",{"_index":1507,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/models/orders/orders.service.ts:21",{"_index":1500,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/models/orders/orders.service.ts:27",{"_index":1502,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/models/orders/orders.service.ts:58",{"_index":1504,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/models/orders/orders.service.ts:93",{"_index":1505,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/models/orders/schemas/order.schema.ts",{"_index":1411,"title":{},"body":{"classes/Order.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/models/orders/schemas/order.schema.ts:11",{"_index":1440,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:25",{"_index":1429,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:34",{"_index":1423,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:37",{"_index":1424,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:40",{"_index":1431,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:43",{"_index":1432,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:46",{"_index":1433,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:49",{"_index":1420,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:52",{"_index":1427,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:55",{"_index":1434,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:58",{"_index":1435,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:61",{"_index":1436,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:64",{"_index":1437,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:67",{"_index":1430,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:70",{"_index":1422,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:76",{"_index":1439,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:82",{"_index":1426,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:88",{"_index":1421,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:91",{"_index":1438,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:94",{"_index":1428,"title":{},"body":{"classes/Order.html":{}}}],["src/models/orders/schemas/order.schema.ts:97",{"_index":1425,"title":{},"body":{"classes/Order.html":{}}}],["src/models/permissions/dto/create",{"_index":986,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/models/permissions/dto/update",{"_index":2126,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/models/permissions/permissions.controller.ts",{"_index":1594,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/models/permissions/permissions.controller.ts:18",{"_index":1598,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/models/permissions/permissions.controller.ts:31",{"_index":1611,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/models/permissions/permissions.controller.ts:37",{"_index":1614,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/models/permissions/permissions.controller.ts:43",{"_index":1619,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/models/permissions/permissions.controller.ts:53",{"_index":1616,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/models/permissions/permissions.module.ts",{"_index":1635,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/models/permissions/permissions.service.ts",{"_index":1639,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/models/permissions/permissions.service.ts:104",{"_index":1644,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/models/permissions/permissions.service.ts:12",{"_index":1642,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/models/permissions/permissions.service.ts:18",{"_index":1645,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/models/permissions/permissions.service.ts:40",{"_index":1646,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/models/permissions/permissions.service.ts:73",{"_index":1648,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/models/permissions/permissions.service.ts:77",{"_index":1650,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/models/permissions/permissions.service.ts:90",{"_index":1649,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/models/permissions/schemas/permission.schema",{"_index":1216,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/Role.html":{}}}],["src/models/permissions/schemas/permission.schema.ts",{"_index":1580,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/models/permissions/schemas/permission.schema.ts:12",{"_index":1581,"title":{},"body":{"classes/Permission.html":{}}}],["src/models/permissions/schemas/permission.schema.ts:15",{"_index":1587,"title":{},"body":{"classes/Permission.html":{}}}],["src/models/permissions/schemas/permission.schema.ts:18",{"_index":1588,"title":{},"body":{"classes/Permission.html":{}}}],["src/models/permissions/schemas/permission.schema.ts:21",{"_index":1583,"title":{},"body":{"classes/Permission.html":{}}}],["src/models/permissions/schemas/permission.schema.ts:27",{"_index":1591,"title":{},"body":{"classes/Permission.html":{}}}],["src/models/permissions/schemas/permission.schema.ts:33",{"_index":1585,"title":{},"body":{"classes/Permission.html":{}}}],["src/models/permissions/schemas/permission.schema.ts:39",{"_index":1582,"title":{},"body":{"classes/Permission.html":{}}}],["src/models/permissions/schemas/permission.schema.ts:42",{"_index":1590,"title":{},"body":{"classes/Permission.html":{}}}],["src/models/permissions/schemas/permission.schema.ts:45",{"_index":1586,"title":{},"body":{"classes/Permission.html":{}}}],["src/models/permissions/schemas/permission.schema.ts:48",{"_index":1584,"title":{},"body":{"classes/Permission.html":{}}}],["src/models/permissions/schemas/permission.schema.ts:9",{"_index":1589,"title":{},"body":{"classes/Permission.html":{}}}],["src/models/products/dto/create",{"_index":1008,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/models/products/dto/update",{"_index":2128,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/models/products/products.controller.ts",{"_index":1698,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/models/products/products.controller.ts:21",{"_index":1701,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/models/products/products.controller.ts:29",{"_index":1703,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/models/products/products.controller.ts:36",{"_index":1704,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/models/products/products.controller.ts:42",{"_index":1707,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/models/products/products.controller.ts:52",{"_index":1705,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/models/products/products.module.ts",{"_index":1722,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/models/products/products.service",{"_index":1693,"title":{},"body":{"injectables/ProductExistsRule.html":{}}}],["src/models/products/products.service.ts",{"_index":1728,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/models/products/products.service.ts:100",{"_index":1747,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/models/products/products.service.ts:125",{"_index":1746,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/models/products/products.service.ts:144",{"_index":1744,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/models/products/products.service.ts:15",{"_index":1733,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/models/products/products.service.ts:21",{"_index":1745,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/models/products/products.service.ts:25",{"_index":1735,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/models/products/products.service.ts:55",{"_index":1736,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/models/products/products.service.ts:87",{"_index":1742,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/models/products/products.service.ts:92",{"_index":1740,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/models/products/products.service.ts:96",{"_index":1738,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/models/products/schemas/product.schema",{"_index":519,"title":{},"body":{"classes/Cart.html":{},"classes/Order.html":{},"classes/Review.html":{}}}],["src/models/products/schemas/product.schema.ts",{"_index":1665,"title":{},"body":{"classes/Product.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/models/products/schemas/product.schema.ts:10",{"_index":1682,"title":{},"body":{"classes/Product.html":{}}}],["src/models/products/schemas/product.schema.ts:13",{"_index":1678,"title":{},"body":{"classes/Product.html":{}}}],["src/models/products/schemas/product.schema.ts:16",{"_index":1679,"title":{},"body":{"classes/Product.html":{}}}],["src/models/products/schemas/product.schema.ts:19",{"_index":1683,"title":{},"body":{"classes/Product.html":{}}}],["src/models/products/schemas/product.schema.ts:22",{"_index":1668,"title":{},"body":{"classes/Product.html":{}}}],["src/models/products/schemas/product.schema.ts:25",{"_index":1680,"title":{},"body":{"classes/Product.html":{}}}],["src/models/products/schemas/product.schema.ts:28",{"_index":1676,"title":{},"body":{"classes/Product.html":{}}}],["src/models/products/schemas/product.schema.ts:31",{"_index":1667,"title":{},"body":{"classes/Product.html":{}}}],["src/models/products/schemas/product.schema.ts:34",{"_index":1673,"title":{},"body":{"classes/Product.html":{}}}],["src/models/products/schemas/product.schema.ts:37",{"_index":1674,"title":{},"body":{"classes/Product.html":{}}}],["src/models/products/schemas/product.schema.ts:40",{"_index":1666,"title":{},"body":{"classes/Product.html":{}}}],["src/models/products/schemas/product.schema.ts:43",{"_index":1670,"title":{},"body":{"classes/Product.html":{}}}],["src/models/products/schemas/product.schema.ts:49",{"_index":1685,"title":{},"body":{"classes/Product.html":{}}}],["src/models/products/schemas/product.schema.ts:55",{"_index":1672,"title":{},"body":{"classes/Product.html":{}}}],["src/models/products/schemas/product.schema.ts:61",{"_index":1669,"title":{},"body":{"classes/Product.html":{}}}],["src/models/products/schemas/product.schema.ts:64",{"_index":1684,"title":{},"body":{"classes/Product.html":{}}}],["src/models/products/schemas/product.schema.ts:67",{"_index":1677,"title":{},"body":{"classes/Product.html":{}}}],["src/models/products/schemas/product.schema.ts:70",{"_index":1671,"title":{},"body":{"classes/Product.html":{}}}],["src/models/promotions/dto/apply",{"_index":334,"title":{},"body":{"classes/ApplyPromotionDto.html":{},"coverage.html":{}}}],["src/models/promotions/dto/create",{"_index":1057,"title":{},"body":{"classes/CreatePromotionDto.html":{},"coverage.html":{}}}],["src/models/promotions/dto/update",{"_index":2130,"title":{},"body":{"classes/UpdatePromotionDto.html":{},"coverage.html":{}}}],["src/models/promotions/promotions.controller.ts",{"_index":1795,"title":{},"body":{"controllers/PromotionsController.html":{},"coverage.html":{}}}],["src/models/promotions/promotions.controller.ts:30",{"_index":1798,"title":{},"body":{"controllers/PromotionsController.html":{}}}],["src/models/promotions/promotions.controller.ts:38",{"_index":1799,"title":{},"body":{"controllers/PromotionsController.html":{}}}],["src/models/promotions/promotions.controller.ts:45",{"_index":1800,"title":{},"body":{"controllers/PromotionsController.html":{}}}],["src/models/promotions/promotions.controller.ts:51",{"_index":1803,"title":{},"body":{"controllers/PromotionsController.html":{}}}],["src/models/promotions/promotions.controller.ts:61",{"_index":1801,"title":{},"body":{"controllers/PromotionsController.html":{}}}],["src/models/promotions/promotions.module.ts",{"_index":1815,"title":{},"body":{"modules/PromotionsModule.html":{}}}],["src/models/promotions/promotions.service.ts",{"_index":1820,"title":{},"body":{"injectables/PromotionsService.html":{},"coverage.html":{}}}],["src/models/promotions/promotions.service.ts:13",{"_index":1825,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["src/models/promotions/promotions.service.ts:131",{"_index":1837,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["src/models/promotions/promotions.service.ts:149",{"_index":1833,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["src/models/promotions/promotions.service.ts:159",{"_index":1836,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["src/models/promotions/promotions.service.ts:176",{"_index":1828,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["src/models/promotions/promotions.service.ts:18",{"_index":1829,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["src/models/promotions/promotions.service.ts:50",{"_index":1830,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["src/models/promotions/promotions.service.ts:82",{"_index":1831,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["src/models/promotions/promotions.service.ts:86",{"_index":1838,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["src/models/promotions/schemas/promotion.schema",{"_index":521,"title":{},"body":{"classes/Cart.html":{}}}],["src/models/promotions/schemas/promotion.schema.ts",{"_index":1772,"title":{},"body":{"classes/Promotion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/models/promotions/schemas/promotion.schema.ts:10",{"_index":1775,"title":{},"body":{"classes/Promotion.html":{}}}],["src/models/promotions/schemas/promotion.schema.ts:13",{"_index":1788,"title":{},"body":{"classes/Promotion.html":{}}}],["src/models/promotions/schemas/promotion.schema.ts:16",{"_index":1780,"title":{},"body":{"classes/Promotion.html":{}}}],["src/models/promotions/schemas/promotion.schema.ts:19",{"_index":1781,"title":{},"body":{"classes/Promotion.html":{}}}],["src/models/promotions/schemas/promotion.schema.ts:22",{"_index":1785,"title":{},"body":{"classes/Promotion.html":{}}}],["src/models/promotions/schemas/promotion.schema.ts:25",{"_index":1783,"title":{},"body":{"classes/Promotion.html":{}}}],["src/models/promotions/schemas/promotion.schema.ts:28",{"_index":1773,"title":{},"body":{"classes/Promotion.html":{}}}],["src/models/promotions/schemas/promotion.schema.ts:31",{"_index":1787,"title":{},"body":{"classes/Promotion.html":{}}}],["src/models/promotions/schemas/promotion.schema.ts:34",{"_index":1784,"title":{},"body":{"classes/Promotion.html":{}}}],["src/models/promotions/schemas/promotion.schema.ts:37",{"_index":1777,"title":{},"body":{"classes/Promotion.html":{}}}],["src/models/promotions/schemas/promotion.schema.ts:43",{"_index":1790,"title":{},"body":{"classes/Promotion.html":{}}}],["src/models/promotions/schemas/promotion.schema.ts:49",{"_index":1779,"title":{},"body":{"classes/Promotion.html":{}}}],["src/models/promotions/schemas/promotion.schema.ts:55",{"_index":1776,"title":{},"body":{"classes/Promotion.html":{}}}],["src/models/promotions/schemas/promotion.schema.ts:58",{"_index":1789,"title":{},"body":{"classes/Promotion.html":{}}}],["src/models/promotions/schemas/promotion.schema.ts:61",{"_index":1786,"title":{},"body":{"classes/Promotion.html":{}}}],["src/models/promotions/schemas/promotion.schema.ts:64",{"_index":1778,"title":{},"body":{"classes/Promotion.html":{}}}],["src/models/reviews/dto/create",{"_index":1129,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["src/models/reviews/dto/update",{"_index":2132,"title":{},"body":{"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["src/models/reviews/reviews.controller.ts",{"_index":1900,"title":{},"body":{"controllers/ReviewsController.html":{},"coverage.html":{}}}],["src/models/reviews/reviews.controller.ts:20",{"_index":1904,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/models/reviews/reviews.controller.ts:28",{"_index":1905,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/models/reviews/reviews.controller.ts:35",{"_index":1907,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/models/reviews/reviews.controller.ts:41",{"_index":1912,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/models/reviews/reviews.controller.ts:51",{"_index":1909,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/models/reviews/reviews.module.ts",{"_index":1928,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["src/models/reviews/reviews.service.ts",{"_index":1932,"title":{},"body":{"injectables/ReviewsService.html":{},"coverage.html":{}}}],["src/models/reviews/reviews.service.ts:107",{"_index":1941,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/models/reviews/reviews.service.ts:12",{"_index":1935,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/models/reviews/reviews.service.ts:18",{"_index":1937,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/models/reviews/reviews.service.ts:43",{"_index":1938,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/models/reviews/reviews.service.ts:76",{"_index":1939,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/models/reviews/reviews.service.ts:80",{"_index":1943,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/models/reviews/reviews.service.ts:93",{"_index":1942,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/models/reviews/schemas/review.schema.ts",{"_index":1884,"title":{},"body":{"classes/Review.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/models/reviews/schemas/review.schema.ts:15",{"_index":1891,"title":{},"body":{"classes/Review.html":{}}}],["src/models/reviews/schemas/review.schema.ts:22",{"_index":1895,"title":{},"body":{"classes/Review.html":{}}}],["src/models/reviews/schemas/review.schema.ts:25",{"_index":1892,"title":{},"body":{"classes/Review.html":{}}}],["src/models/reviews/schemas/review.schema.ts:28",{"_index":1885,"title":{},"body":{"classes/Review.html":{}}}],["src/models/reviews/schemas/review.schema.ts:31",{"_index":1887,"title":{},"body":{"classes/Review.html":{}}}],["src/models/reviews/schemas/review.schema.ts:37",{"_index":1894,"title":{},"body":{"classes/Review.html":{}}}],["src/models/reviews/schemas/review.schema.ts:43",{"_index":1889,"title":{},"body":{"classes/Review.html":{}}}],["src/models/reviews/schemas/review.schema.ts:49",{"_index":1886,"title":{},"body":{"classes/Review.html":{}}}],["src/models/reviews/schemas/review.schema.ts:52",{"_index":1893,"title":{},"body":{"classes/Review.html":{}}}],["src/models/reviews/schemas/review.schema.ts:55",{"_index":1890,"title":{},"body":{"classes/Review.html":{}}}],["src/models/reviews/schemas/review.schema.ts:58",{"_index":1888,"title":{},"body":{"classes/Review.html":{}}}],["src/models/roles/dto/create",{"_index":1149,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/models/roles/dto/update",{"_index":2134,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/models/roles/roles.controller.ts",{"_index":1979,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/models/roles/roles.controller.ts:20",{"_index":1983,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/models/roles/roles.controller.ts:27",{"_index":1986,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/models/roles/roles.controller.ts:33",{"_index":1988,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/models/roles/roles.controller.ts:39",{"_index":1993,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/models/roles/roles.controller.ts:49",{"_index":1990,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/models/roles/roles.module",{"_index":432,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/models/roles/roles.module.ts",{"_index":2007,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/models/roles/roles.service",{"_index":431,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"classes/JwtStrategy.html":{}}}],["src/models/roles/roles.service.ts",{"_index":2011,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/models/roles/roles.service.ts:116",{"_index":2020,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/models/roles/roles.service.ts:15",{"_index":2013,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/models/roles/roles.service.ts:22",{"_index":2019,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/models/roles/roles.service.ts:26",{"_index":2015,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/models/roles/roles.service.ts:61",{"_index":2016,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/models/roles/roles.service.ts:65",{"_index":2018,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/models/roles/roles.service.ts:69",{"_index":2014,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/models/roles/roles.service.ts:91",{"_index":2021,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/models/roles/schemas/role.schema",{"_index":1213,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/User.html":{}}}],["src/models/roles/schemas/role.schema.ts",{"_index":1965,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/models/roles/schemas/role.schema.ts:10",{"_index":1973,"title":{},"body":{"classes/Role.html":{}}}],["src/models/roles/schemas/role.schema.ts:13",{"_index":1970,"title":{},"body":{"classes/Role.html":{}}}],["src/models/roles/schemas/role.schema.ts:16",{"_index":1971,"title":{},"body":{"classes/Role.html":{}}}],["src/models/roles/schemas/role.schema.ts:19",{"_index":1974,"title":{},"body":{"classes/Role.html":{}}}],["src/models/roles/schemas/role.schema.ts:22",{"_index":1967,"title":{},"body":{"classes/Role.html":{}}}],["src/models/roles/schemas/role.schema.ts:28",{"_index":1976,"title":{},"body":{"classes/Role.html":{}}}],["src/models/roles/schemas/role.schema.ts:34",{"_index":1969,"title":{},"body":{"classes/Role.html":{}}}],["src/models/roles/schemas/role.schema.ts:40",{"_index":1966,"title":{},"body":{"classes/Role.html":{}}}],["src/models/roles/schemas/role.schema.ts:43",{"_index":1975,"title":{},"body":{"classes/Role.html":{}}}],["src/models/roles/schemas/role.schema.ts:46",{"_index":1972,"title":{},"body":{"classes/Role.html":{}}}],["src/models/roles/schemas/role.schema.ts:49",{"_index":1968,"title":{},"body":{"classes/Role.html":{}}}],["src/models/users/dto/create",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/models/users/dto/login",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/models/users/dto/register",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/models/users/dto/update",{"_index":2137,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/models/users/schemas/user.schema",{"_index":36,"title":{},"body":{"classes/Address.html":{},"classes/Cart.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/Order.html":{},"classes/Review.html":{}}}],["src/models/users/schemas/user.schema.ts",{"_index":2139,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/models/users/schemas/user.schema.ts:10",{"_index":2145,"title":{},"body":{"classes/User.html":{}}}],["src/models/users/schemas/user.schema.ts:13",{"_index":2148,"title":{},"body":{"classes/User.html":{}}}],["src/models/users/schemas/user.schema.ts:16",{"_index":2146,"title":{},"body":{"classes/User.html":{}}}],["src/models/users/schemas/user.schema.ts:19",{"_index":2140,"title":{},"body":{"classes/User.html":{}}}],["src/models/users/schemas/user.schema.ts:22",{"_index":2149,"title":{},"body":{"classes/User.html":{}}}],["src/models/users/schemas/user.schema.ts:25",{"_index":2150,"title":{},"body":{"classes/User.html":{}}}],["src/models/users/schemas/user.schema.ts:28",{"_index":2142,"title":{},"body":{"classes/User.html":{}}}],["src/models/users/schemas/user.schema.ts:34",{"_index":2152,"title":{},"body":{"classes/User.html":{}}}],["src/models/users/schemas/user.schema.ts:40",{"_index":2144,"title":{},"body":{"classes/User.html":{}}}],["src/models/users/schemas/user.schema.ts:46",{"_index":2141,"title":{},"body":{"classes/User.html":{}}}],["src/models/users/schemas/user.schema.ts:49",{"_index":2151,"title":{},"body":{"classes/User.html":{}}}],["src/models/users/schemas/user.schema.ts:52",{"_index":2147,"title":{},"body":{"classes/User.html":{}}}],["src/models/users/schemas/user.schema.ts:55",{"_index":2143,"title":{},"body":{"classes/User.html":{}}}],["src/models/users/users.controller.ts",{"_index":2155,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/models/users/users.controller.ts:19",{"_index":2157,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/models/users/users.controller.ts:26",{"_index":2159,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/models/users/users.controller.ts:32",{"_index":2160,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/models/users/users.controller.ts:38",{"_index":2162,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/models/users/users.controller.ts:48",{"_index":2161,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/models/users/users.module",{"_index":420,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/models/users/users.module.ts",{"_index":2175,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/models/users/users.service",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{}}}],["src/models/users/users.service.ts",{"_index":2178,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/models/users/users.service.ts:113",{"_index":2198,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/models/users/users.service.ts:133",{"_index":2201,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/models/users/users.service.ts:137",{"_index":2193,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/models/users/users.service.ts:142",{"_index":2196,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/models/users/users.service.ts:15",{"_index":2184,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/models/users/users.service.ts:25",{"_index":2185,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/models/users/users.service.ts:45",{"_index":2186,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/models/users/users.service.ts:77",{"_index":2187,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/models/users/users.service.ts:86",{"_index":2189,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/models/users/users.service.ts:90",{"_index":2191,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/models/users/users.service.ts:94",{"_index":2199,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/utils",{"_index":183,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/OrdersService.html":{}}}],["src/utils/utils.ts",{"_index":2232,"title":{},"body":{"classes/Utils.html":{},"coverage.html":{}}}],["src/utils/utils.ts:2",{"_index":2237,"title":{},"body":{"classes/Utils.html":{}}}],["standard",{"_index":2387,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["start_date",{"_index":1063,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{}}}],["started",{"_index":2448,"title":{"index.html":{}},"body":{}}],["statements",{"_index":2258,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":2233,"title":{},"body":{"classes/Utils.html":{}}}],["status",{"_index":1064,"title":{},"body":{"classes/CreatePromotionDto.html":{},"controllers/OrdersController.html":{},"classes/Promotion.html":{}}}],["status')@responsemessage('cập",{"_index":1466,"title":{},"body":{"controllers/OrdersController.html":{}}}],["status.dto",{"_index":1474,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["status.dto.ts",{"_index":2118,"title":{},"body":{"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"coverage.html":{}}}],["status.dto.ts:14",{"_index":2121,"title":{},"body":{"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{}}}],["statuscode",{"_index":232,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["stock",{"_index":1017,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["storage",{"_index":2664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":1388,"title":{},"body":{"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["streetaddress",{"_index":12,"title":{},"body":{"classes/Address.html":{},"classes/CreateAddressDto.html":{}}}],["strict",{"_index":856,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/RolesService.html":{}}}],["string",{"_index":16,"title":{},"body":{"classes/Address.html":{},"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"injectables/AppService.html":{},"classes/ApplyAddressDto.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/CartExistsRule.html":{},"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"interfaces/IUser.html":{},"classes/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"classes/QueryDto.html":{},"classes/RemoveCartItemsDto.html":{},"interfaces/Response.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"interfaces/SwaggerDocumentOptions.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["string'})@isenum(colorstype",{"_index":568,"title":{},"body":{"classes/CartItemDto.html":{}}}],["string'})@isenum(sizestype",{"_index":593,"title":{},"body":{"classes/CartItemDto.html":{}}}],["string'})@isnotempty({message",{"_index":1002,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["string'})@isstrongpassword({minlength",{"_index":1186,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["string'})@productexists",{"_index":575,"title":{},"body":{"classes/CartItemDto.html":{}}}],["sub",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["subtotal",{"_index":770,"title":{},"body":{"injectables/CartsService.html":{},"interfaces/OrderSummary.html":{},"injectables/PromotionsService.html":{}}}],["success",{"_index":1287,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["sum",{"_index":1960,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["summary.interface",{"_index":718,"title":{},"body":{"injectables/CartsService.html":{}}}],["summary.interface.ts",{"_index":1444,"title":{},"body":{"interfaces/OrderSummary.html":{},"coverage.html":{}}}],["summer2023",{"_index":1074,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["super",{"_index":1360,"title":{},"body":{"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":1365,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["support",{"_index":2490,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2491,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":2057,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{},"index.html":{}}}],["swaggerdocumentoptions",{"_index":2049,"title":{"interfaces/SwaggerDocumentOptions.html":{}},"body":{"interfaces/SwaggerDocumentOptions.html":{},"coverage.html":{}}}],["sách",{"_index":74,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/CategoriesController.html":{},"classes/CreateCartDto.html":{},"classes/CreateRoleDto.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["sản",{"_index":572,"title":{},"body":{"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"classes/CreateCartDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"injectables/ReviewsService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sắc",{"_index":562,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateProductDto.html":{},"miscellaneous/enumerations.html":{}}}],["sắp",{"_index":1607,"title":{},"body":{"controllers/PermissionsController.html":{},"classes/QueryDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sửa",{"_index":2459,"title":{},"body":{"index.html":{}}}],["t",{"_index":943,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/QueryDto.html":{},"interfaces/Response.html":{},"injectables/RolesService.html":{},"classes/UpdateOrderDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":2291,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2290,"title":{},"body":{"coverage.html":{}}}],["targetendpoint",{"_index":1370,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["targetmethod",{"_index":1368,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["tax_amount",{"_index":1417,"title":{},"body":{"classes/Order.html":{},"injectables/OrdersService.html":{}}}],["tax_rate",{"_index":719,"title":{},"body":{"injectables/CartsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taxamount",{"_index":787,"title":{},"body":{"injectables/CartsService.html":{},"interfaces/OrderSummary.html":{}}}],["taxrate",{"_index":779,"title":{},"body":{"injectables/CartsService.html":{}}}],["th",{"_index":924,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreateRoleDto.html":{},"classes/UpdateOrderDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["tham",{"_index":2486,"title":{},"body":{"index.html":{}}}],["thanh",{"_index":977,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrdersController.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["theo",{"_index":2465,"title":{},"body":{"index.html":{}}}],["this.addressesservice.create(createshippingaddressdto",{"_index":113,"title":{},"body":{"controllers/AddressesController.html":{}}}],["this.addressesservice.findallbyuser(user._id",{"_index":117,"title":{},"body":{"controllers/AddressesController.html":{}}}],["this.addressesservice.remove(_id",{"_index":125,"title":{},"body":{"controllers/AddressesController.html":{}}}],["this.addressesservice.update(_id",{"_index":121,"title":{},"body":{"controllers/AddressesController.html":{}}}],["this.addressmodel.create",{"_index":186,"title":{},"body":{"injectables/AddressesService.html":{}}}],["this.addressmodel.find",{"_index":187,"title":{},"body":{"injectables/AddressesService.html":{}}}],["this.addressmodel.findbyid(id",{"_index":188,"title":{},"body":{"injectables/AddressesService.html":{}}}],["this.addressmodel.findbyidandupdate",{"_index":195,"title":{},"body":{"injectables/AddressesService.html":{}}}],["this.addressmodel.softdelete",{"_index":196,"title":{},"body":{"injectables/AddressesService.html":{}}}],["this.addressservice.calculateshippingcost(shipping_address?.province",{"_index":784,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.addressservice.findone(addressid",{"_index":777,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.adminemail",{"_index":2206,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.authservice.login(user",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(refreshtoken",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(registeruserdto",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":1407,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.calculatetotalamount(cart.items",{"_index":782,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.cartmodel",{"_index":738,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.cartmodel.create",{"_index":732,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.cartmodel.findbyid(id).populate('items.product",{"_index":769,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.cartmodel.findbyid(id).populate('items.product').populate('shipping_address",{"_index":758,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.cartservice.findone(cartid",{"_index":1520,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.cartservice.formatitemsresponse(order.items",{"_index":1579,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.cartsservice.additem(id",{"_index":658,"title":{},"body":{"controllers/CartsController.html":{}}}],["this.cartsservice.applyaddress(id",{"_index":669,"title":{},"body":{"controllers/CartsController.html":{}}}],["this.cartsservice.applypromotion(id",{"_index":666,"title":{},"body":{"controllers/CartsController.html":{}}}],["this.cartsservice.create(createcartdto",{"_index":652,"title":{},"body":{"controllers/CartsController.html":{}}}],["this.cartsservice.findone(id",{"_index":551,"title":{},"body":{"injectables/CartExistsRule.html":{},"controllers/CartsController.html":{}}}],["this.cartsservice.remove(id",{"_index":662,"title":{},"body":{"controllers/CartsController.html":{}}}],["this.categoriesservice",{"_index":1750,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.categoriesservice.create(createcategorydto",{"_index":826,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.findall",{"_index":827,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.findone(categoryid",{"_index":1754,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.categoriesservice.findone(id",{"_index":828,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.remove(id",{"_index":830,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.update(_id",{"_index":829,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categorymodel.create",{"_index":862,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categorymodel.find",{"_index":865,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categorymodel.findbyidandupdate",{"_index":869,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categorymodel.findone",{"_index":858,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categorymodel.softdelete",{"_index":877,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categorymodel.updateone",{"_index":875,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.configservice.get('admin_email",{"_index":1277,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/UsersService.html":{}}}],["this.configservice.get('admin_password",{"_index":1279,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configservice.get('has_init",{"_index":1241,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.configservice.get('jwt_refresh_token_secret",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createrefreshtoken(payload",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.findone(id",{"_index":2225,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.finduserbyemail(createuserdto.email",{"_index":2208,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.formatcartresponse(cart",{"_index":743,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.formatitemsresponse(cart.items",{"_index":790,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.formatorderresponse(neworder",{"_index":1566,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.formatorderresponse(order",{"_index":1533,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.gethashpassword(createuserdto.password",{"_index":2211,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getordersummary(cart",{"_index":776,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.httpadapterhost",{"_index":223,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.isvalidpromotion(subtotal",{"_index":1854,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["this.jwtservice.sign(payload",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log('init",{"_index":1286,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.login(user",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.moduleref.get(categoriesservice",{"_index":1751,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.moduleref.get(permissionsservice",{"_index":2025,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.moduleref.get(productsservice",{"_index":855,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.ordermodel",{"_index":1549,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordermodel.create",{"_index":1521,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordermodel.find(filter)).length",{"_index":1545,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordermodel.findbyid(id",{"_index":1567,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordermodel.findbyid(id).populate('items.product",{"_index":1559,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersservice.create(createorderdto",{"_index":1478,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.findall(qs",{"_index":1481,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.findone(id",{"_index":1482,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.update(id",{"_index":1483,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.updateorderstatus(id",{"_index":1485,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.updatepaymentstatus(id",{"_index":1486,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.permissionmodel",{"_index":1660,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.countdocuments",{"_index":1243,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.permissionmodel.create",{"_index":1655,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter)).length",{"_index":1659,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select('_id",{"_index":1249,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.permissionmodel.findbyid(_id",{"_index":1661,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.findone",{"_index":1651,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(init_permissions",{"_index":1248,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.permissionmodel.softdelete",{"_index":1663,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone",{"_index":1662,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionsservice",{"_index":2024,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.permissionsservice.checkexistpermissions",{"_index":2044,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.permissionsservice.checkexistpermissions(permissions",{"_index":2037,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":1625,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall(querystring",{"_index":1628,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":1629,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":1631,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":1630,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.productmodel",{"_index":1761,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.countdocuments(filter",{"_index":1760,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.create",{"_index":1759,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.find",{"_index":1762,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.findbyid(productid)).toobject",{"_index":1767,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.findone",{"_index":1755,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.softdelete",{"_index":1766,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.updateone",{"_index":1764,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productservice.findone(productid",{"_index":1945,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.productservice.getproductifvalid(item.productid",{"_index":727,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.productservice.getproductifvalid(productid",{"_index":745,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.productsservice",{"_index":854,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.productsservice.create(createproductdto",{"_index":1714,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findall(qs",{"_index":1715,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findbycategoryid(id",{"_index":872,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.productsservice.findone(_id",{"_index":1716,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findone(id",{"_index":1694,"title":{},"body":{"injectables/ProductExistsRule.html":{}}}],["this.productsservice.remove(_id",{"_index":1718,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.update(_id",{"_index":1717,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.promotionmodel",{"_index":1847,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["this.promotionmodel.create",{"_index":1845,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["this.promotionmodel.find(filter)).length",{"_index":1846,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["this.promotionmodel.findbyid(_id",{"_index":1848,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["this.promotionmodel.findone",{"_index":1840,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["this.promotionmodel.softdelete",{"_index":1853,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["this.promotionmodel.updateone",{"_index":1852,"title":{},"body":{"injectables/PromotionsService.html":{}}}],["this.promotionservice.calculatediscountamount(coupon",{"_index":786,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.promotionservice.getvalidpromotion(coupon",{"_index":775,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.promotionsservice.create(createpromotiondto",{"_index":1807,"title":{},"body":{"controllers/PromotionsController.html":{}}}],["this.promotionsservice.findall(qs",{"_index":1808,"title":{},"body":{"controllers/PromotionsController.html":{}}}],["this.promotionsservice.findone(_id",{"_index":1809,"title":{},"body":{"controllers/PromotionsController.html":{}}}],["this.promotionsservice.remove(_id",{"_index":1811,"title":{},"body":{"controllers/PromotionsController.html":{}}}],["this.promotionsservice.update(_id",{"_index":1810,"title":{},"body":{"controllers/PromotionsController.html":{}}}],["this.reflector.get(response_message",{"_index":2098,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":1362,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["this.reviewmodel",{"_index":1954,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewmodel.create",{"_index":1952,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewmodel.exists",{"_index":1948,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewmodel.find",{"_index":1958,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewmodel.find(filter)).length",{"_index":1953,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewmodel.findone",{"_index":1955,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewmodel.softdelete",{"_index":1957,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewmodel.updateone",{"_index":1956,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewsservice.create(createreviewdto",{"_index":1918,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewsservice.findall(qs",{"_index":1920,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewsservice.findone(_id",{"_index":1921,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewsservice.remove(_id",{"_index":1923,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewsservice.update(id",{"_index":1922,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.rolemodel",{"_index":2030,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.countdocuments",{"_index":1245,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.rolemodel.create",{"_index":2041,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter)).length",{"_index":2029,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id).populate('permissions",{"_index":2033,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":1274,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/RolesService.html":{}}}],["this.rolemodel.insertmany",{"_index":1250,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.rolemodel.softdelete",{"_index":2048,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.updateone",{"_index":2046,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1999,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(qs",{"_index":2000,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(createuserdto.roleid",{"_index":2212,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.rolesservice.findone(id",{"_index":2001,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(payload.role))?.toobject",{"_index":1395,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["this.rolesservice.findonebyname(user_role",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.rolesservice.remove(id",{"_index":2003,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(_id",{"_index":2002,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.usermodel",{"_index":2218,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.countdocuments",{"_index":1247,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.usermodel.countdocuments(filter",{"_index":2217,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.create",{"_index":2214,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":2222,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":2224,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":1281,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.usermodel.softdelete",{"_index":2228,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":2227,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.gethashpassword(adminpassword",{"_index":1280,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["this.usersservice.findall(query",{"_index":2167,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":2168,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduserbyemail(username",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.finduserbytoken(refreshtoken",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isvalidpassword(password",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(user",{"_index":2170,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":2169,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateusertoken(user._id",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["thiểu",{"_index":1080,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/CreateUserDto.html":{}}}],["thoại",{"_index":909,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/UpdateOrderDto.html":{}}}],["throttlerguard",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["through",{"_index":2071,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["throw",{"_index":189,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"classes/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"injectables/ValidateObjectIdPipe.html":{}}}],["thuộc",{"_index":2460,"title":{},"body":{"index.html":{}}}],["thành",{"_index":2467,"title":{},"body":{"index.html":{}}}],["thái",{"_index":1113,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/CreateRoleDto.html":{},"controllers/OrdersController.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["thêm",{"_index":1869,"title":{},"body":{"classes/QueryDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["thông",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["thúc",{"_index":1095,"title":{},"body":{"classes/CreatePromotionDto.html":{},"miscellaneous/enumerations.html":{}}}],["thương",{"_index":2633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thất",{"_index":2379,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["thống",{"_index":2474,"title":{},"body":{"index.html":{}}}],["thời",{"_index":2454,"title":{},"body":{"index.html":{}}}],["thức",{"_index":976,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{}}}],["thực",{"_index":1032,"title":{},"body":{"classes/CreateProductDto.html":{},"controllers/PermissionsController.html":{},"classes/QueryDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["timestamp",{"_index":233,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["timestamps",{"_index":39,"title":{},"body":{"classes/Address.html":{},"classes/Cart.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/Permission.html":{},"classes/Product.html":{},"classes/Promotion.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["tin",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["tiêu",{"_index":2388,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tiền",{"_index":1078,"title":{},"body":{"classes/CreatePromotionDto.html":{},"miscellaneous/enumerations.html":{}}}],["token",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["token_expired",{"_index":2401,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["toobject",{"_index":759,"title":{},"body":{"injectables/CartsService.html":{}}}],["total",{"_index":772,"title":{},"body":{"injectables/CartsService.html":{},"interfaces/OrderSummary.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["total_amount",{"_index":1418,"title":{},"body":{"classes/Order.html":{},"injectables/OrdersService.html":{}}}],["totalamount",{"_index":788,"title":{},"body":{"injectables/CartsService.html":{}}}],["totalitems",{"_index":1544,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":1546,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["toán",{"_index":978,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrdersController.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["tp",{"_index":913,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["tphcm",{"_index":1174,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/UpdateOrderDto.html":{}}}],["tr",{"_index":1071,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/Promotion.html":{},"controllers/RolesController.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trang",{"_index":1604,"title":{},"body":{"controllers/PermissionsController.html":{},"classes/QueryDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trang')@get()@apiquery(api_param_query",{"_index":1985,"title":{},"body":{"controllers/RolesController.html":{}}}],["transform",{"_index":2247,"title":{},"body":{"injectables/ValidateObjectIdPipe.html":{}}}],["transform(value",{"_index":2248,"title":{},"body":{"injectables/ValidateObjectIdPipe.html":{}}}],["transformer",{"_index":935,"title":{},"body":{"classes/CreateCartDto.html":{},"classes/CreatePromotionDto.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":2082,"title":{"injectables/TransformInterceptor.html":{}},"body":{"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["trong",{"_index":639,"title":{},"body":{"controllers/CartsController.html":{},"classes/CreateCartDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["true",{"_index":19,"title":{},"body":{"classes/Address.html":{},"injectables/AddressesService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/CartExistsRule.html":{},"classes/CartItemDto.html":{},"injectables/CartsService.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/JwtAuthGuard.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"classes/Product.html":{},"injectables/ProductExistsRule.html":{},"classes/Promotion.html":{},"classes/RemoveCartItemsDto.html":{},"classes/Review.html":{},"classes/Role.html":{},"interfaces/SwaggerDocumentOptions.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["true})@isarray({message",{"_index":1163,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["true})@isboolean({message",{"_index":1157,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["true})@isemail",{"_index":1177,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["true})@ismongoid({message",{"_index":1139,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["true})@isnotempty({message",{"_index":564,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/RemoveCartItemsDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{}}}],["true})@isstring({message",{"_index":1001,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["true})@type(undefined",{"_index":931,"title":{},"body":{"classes/CreateCartDto.html":{}}}],["truy",{"_index":2404,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["try",{"_index":550,"title":{},"body":{"injectables/CartExistsRule.html":{},"injectables/ProductExistsRule.html":{}}}],["trò')@delete(':id",{"_index":1989,"title":{},"body":{"controllers/RolesController.html":{}}}],["trò')@get(':id",{"_index":1987,"title":{},"body":{"controllers/RolesController.html":{}}}],["trò')@patch(':id",{"_index":1992,"title":{},"body":{"controllers/RolesController.html":{}}}],["trò')@post",{"_index":1982,"title":{},"body":{"controllers/RolesController.html":{}}}],["trăm",{"_index":1086,"title":{},"body":{"classes/CreatePromotionDto.html":{},"miscellaneous/enumerations.html":{}}}],["trạng",{"_index":1112,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/CreateRoleDto.html":{},"controllers/OrdersController.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["trắng",{"_index":2339,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["trống",{"_index":603,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/RemoveCartItemsDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{}}}],["trống'})@isarray({message",{"_index":929,"title":{},"body":{"classes/CreateCartDto.html":{},"classes/CreateProductDto.html":{}}}],["trống'})@isboolean({message",{"_index":1103,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["trống'})@isdate({message",{"_index":1096,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["trống'})@isenum(cartremovetype",{"_index":1878,"title":{},"body":{"classes/RemoveCartItemsDto.html":{}}}],["trống'})@isenum(couponstatus",{"_index":1114,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["trống'})@isenum(discounttype",{"_index":1088,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["trống'})@isenum(orderstatus",{"_index":2120,"title":{},"body":{"classes/UpdateOrderStatusDto.html":{}}}],["trống'})@isenum(paymentmethod",{"_index":979,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["trống'})@isenum(paymentstatus",{"_index":2124,"title":{},"body":{"classes/UpdatePaymentStatusDto.html":{}}}],["trống'})@ismongoid({message",{"_index":962,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["trống'})@isnumber({allowinfinity",{"_index":582,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{}}}],["trống'})@isstring({message",{"_index":567,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{}}}],["ttl",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["tuyệt",{"_index":1133,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["type",{"_index":14,"title":{},"body":{"classes/Address.html":{},"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApplyAddressDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"injectables/CartExistsRule.html":{},"classes/CartItemDto.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"interfaces/IUser.html":{},"classes/JwtAuthGuard.html":{},"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"interfaces/OrderSummary.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"classes/QueryDto.html":{},"classes/RemoveCartItemsDto.html":{},"interfaces/Response.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"interfaces/SwaggerDocumentOptions.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/Utils.html":{},"injectables/ValidateObjectIdPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":715,"title":{},"body":{"injectables/CartsService.html":{},"classes/RemoveCartItemsDto.html":{}}}],["type.enum.ts",{"_index":2326,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":2503,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":2297,"title":{},"body":{"dependencies.html":{}}}],["types/ms",{"_index":2302,"title":{},"body":{"dependencies.html":{}}}],["tài",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tên",{"_index":903,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateOrderDto.html":{},"miscellaneous/enumerations.html":{}}}],["tìm",{"_index":1605,"title":{},"body":{"controllers/PermissionsController.html":{},"classes/QueryDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tím",{"_index":2356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tính",{"_index":2458,"title":{},"body":{"index.html":{}}}],["tôi",{"_index":2409,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tại",{"_index":1127,"title":{},"body":{"classes/CreatePromotionDto.html":{},"injectables/ProductExistsRule.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["tại'})@type(undefined",{"_index":1098,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["tạo",{"_index":2470,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tải",{"_index":2462,"title":{},"body":{"index.html":{}}}],["tất",{"_index":1609,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["tỉnh",{"_index":916,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["tỉnh/thành",{"_index":914,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["tốc",{"_index":2393,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tối",{"_index":1079,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/CreateUserDto.html":{}}}],["tồn",{"_index":1696,"title":{},"body":{"injectables/ProductExistsRule.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["tổng",{"_index":1070,"title":{},"body":{"classes/CreatePromotionDto.html":{},"classes/Promotion.html":{},"injectables/RolesService.html":{},"index.html":{}}}],["u",{"_index":1108,"title":{},"body":{"classes/CreatePromotionDto.html":{},"miscellaneous/enumerations.html":{}}}],["unauthorized_token",{"_index":2397,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unauthorizedexception",{"_index":1357,"title":{},"body":{"classes/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('token",{"_index":1367,"title":{},"body":{"classes/JwtAuthGuard.html":{}}}],["unauthorizedexception(custom_messages.unauthorized_token",{"_index":1408,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":26,"title":{},"body":{"classes/Address.html":{},"classes/Cart.html":{},"classes/CreateCartDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["undefined})@isnotempty({message",{"_index":928,"title":{},"body":{"classes/CreateCartDto.html":{}}}],["unique",{"_index":1681,"title":{},"body":{"classes/Product.html":{},"classes/Promotion.html":{}}}],["unisex",{"_index":2372,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unknown",{"_index":70,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CartExistsRule.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"controllers/FilesController.html":{},"classes/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ProductExistsRule.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":2502,"title":{},"body":{"properties.html":{}}}],["unlinksync(filepath",{"_index":2650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unsupported",{"_index":2667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["update",{"_index":57,"title":{},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@param('id",{"_index":120,"title":{},"body":{"controllers/AddressesController.html":{}}}],["update(_id",{"_index":80,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["update(id",{"_index":173,"title":{},"body":{"injectables/AddressesService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/PromotionsService.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateaddressdto",{"_index":82,"title":{"classes/UpdateAddressDto.html":{}},"body":{"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["updatecategorydto",{"_index":817,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":882,"title":{},"body":{"classes/Category.html":{},"classes/Order.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{},"classes/Review.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":870,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"classes/Promotion.html":{},"injectables/PromotionsService.html":{},"classes/Review.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["updatedcategory",{"_index":868,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatedproduct",{"_index":1763,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateorderdto",{"_index":1457,"title":{"classes/UpdateOrderDto.html":{}},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["updateorderstatus",{"_index":1448,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["updateorderstatus(id",{"_index":1459,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["updateorderstatusdto",{"_index":1460,"title":{"classes/UpdateOrderStatusDto.html":{}},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderStatusDto.html":{},"coverage.html":{}}}],["updatepaymentstatus",{"_index":1449,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["updatepaymentstatus(id",{"_index":1463,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["updatepaymentstatusdto",{"_index":1464,"title":{"classes/UpdatePaymentStatusDto.html":{}},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/UpdatePaymentStatusDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":1617,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updateproductdto",{"_index":1706,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updatepromotiondto",{"_index":1802,"title":{"classes/UpdatePromotionDto.html":{}},"body":{"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"classes/UpdatePromotionDto.html":{},"coverage.html":{}}}],["updatereviewdto",{"_index":1910,"title":{"classes/UpdateReviewDto.html":{}},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["updateroledto",{"_index":1991,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updateroledto.permissions",{"_index":2045,"title":{},"body":{"injectables/RolesService.html":{}}}],["updateshippingaddressdto",{"_index":81,"title":{},"body":{"controllers/AddressesController.html":{}}}],["updateuserdto",{"_index":2136,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateusertoken",{"_index":2182,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateusertoken(_id",{"_index":2200,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":1033,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/FileUploadDto.html":{},"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["upload(file",{"_index":1304,"title":{},"body":{"controllers/FilesController.html":{}}}],["upload.dto",{"_index":1319,"title":{},"body":{"controllers/FilesController.html":{}}}],["upload.dto.ts",{"_index":1290,"title":{},"body":{"classes/FileUploadDto.html":{},"coverage.html":{}}}],["upload.dto.ts:7",{"_index":1294,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["uploadedfile",{"_index":1310,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadpath",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uri",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["useclass",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":2076,"title":{},"body":{"interfaces/SwaggerDocumentOptions.html":{}}}],["usefactory",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":1311,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":1325,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":13,"title":{"classes/User.html":{}},"body":{"classes/Address.html":{},"controllers/AddressesController.html":{},"injectables/AddressesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cart.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/PromotionsController.html":{},"injectables/PromotionsService.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user._id",{"_index":114,"title":{},"body":{"controllers/AddressesController.html":{},"controllers/CartsController.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":1170,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:20",{"_index":1181,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:42",{"_index":1196,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:52",{"_index":1182,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:62",{"_index":1198,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:72",{"_index":1175,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":864,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/PermissionsService.html":{},"injectables/ProductsService.html":{},"injectables/PromotionsService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["user.fullname",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":1218,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/Order.html":{},"classes/Review.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":1372,"title":{},"body":{"classes/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["user.role",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.[data",{"_index":2682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user@gmail.com",{"_index":1282,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["user_role",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdocument",{"_index":1233,"title":{},"body":{"injectables/DatabaseService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":163,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/CartsService.html":{}}}],["usermodel",{"_index":1223,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["usernamefield",{"_index":1405,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userrole",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["userrole._id",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":997,"title":{},"body":{"classes/CreatePermissionDto.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":2176,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":2163,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userschema",{"_index":1214,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":2154,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":1225,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["usersmodule",{"_index":256,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["usersservice",{"_index":446,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["utils",{"_index":182,"title":{"classes/Utils.html":{}},"body":{"injectables/AddressesService.html":{},"injectables/OrdersService.html":{},"classes/Utils.html":{},"coverage.html":{}}}],["utils.getdatachange(updateaddressdto",{"_index":193,"title":{},"body":{"injectables/AddressesService.html":{}}}],["utils.getdatachange(updateorderdto",{"_index":1563,"title":{},"body":{"injectables/OrdersService.html":{}}}],["uuid()}${extname(file.originalname",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v",{"_index":902,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateOrderDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["vai",{"_index":1154,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/RolesController.html":{},"index.html":{}}}],["valid",{"_index":730,"title":{},"body":{"injectables/CartsService.html":{}}}],["validate",{"_index":535,"title":{},"body":{"injectables/CartExistsRule.html":{},"injectables/CartsService.html":{},"classes/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/ProductExistsRule.html":{},"injectables/ProductsService.html":{}}}],["validate(id",{"_index":543,"title":{},"body":{"injectables/CartExistsRule.html":{},"injectables/ProductExistsRule.html":{}}}],["validate(payload",{"_index":1382,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["validate(username",{"_index":1402,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":934,"title":{},"body":{"classes/CreateCartDto.html":{}}}],["validateobjectidpipe",{"_index":97,"title":{"injectables/ValidateObjectIdPipe.html":{}},"body":{"controllers/AddressesController.html":{},"controllers/CartsController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/PermissionsController.html":{},"controllers/ProductsController.html":{},"controllers/PromotionsController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"injectables/ValidateObjectIdPipe.html":{},"coverage.html":{}}}],["validateuser",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationarguments",{"_index":540,"title":{},"body":{"injectables/CartExistsRule.html":{},"injectables/ProductExistsRule.html":{}}}],["validationoptions",{"_index":2444,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":330,"title":{},"body":{"classes/ApplyAddressDto.html":{},"injectables/CartExistsRule.html":{},"classes/CartItemDto.html":{},"classes/CreateAddressDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/FileUploadDto.html":{},"injectables/ProductExistsRule.html":{},"classes/QueryDto.html":{},"classes/RemoveCartItemsDto.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"dependencies.html":{}}}],["validatorconstraint",{"_index":545,"title":{},"body":{"injectables/CartExistsRule.html":{},"injectables/ProductExistsRule.html":{}}}],["validatorconstraintinterface",{"_index":546,"title":{},"body":{"injectables/CartExistsRule.html":{},"injectables/ProductExistsRule.html":{}}}],["validnewstatuses",{"_index":1569,"title":{},"body":{"injectables/OrdersService.html":{}}}],["validnewstatuses.includes(order_status",{"_index":1571,"title":{},"body":{"injectables/OrdersService.html":{}}}],["validnewstatuses.includes(payment_status",{"_index":1575,"title":{},"body":{"injectables/OrdersService.html":{}}}],["validproduct",{"_index":744,"title":{},"body":{"injectables/CartsService.html":{}}}],["validproduct._id",{"_index":752,"title":{},"body":{"injectables/CartsService.html":{}}}],["validproduct._id.tostring",{"_index":749,"title":{},"body":{"injectables/CartsService.html":{}}}],["validpromotion",{"_index":774,"title":{},"body":{"injectables/CartsService.html":{}}}],["value",{"_index":1229,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/SwaggerDocumentOptions.html":{},"injectables/ValidateObjectIdPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":2203,"title":{},"body":{"injectables/UsersService.html":{}}}],["variable",{"_index":2260,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2515,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1708,"title":{},"body":{"controllers/ProductsController.html":{},"properties.html":{}}}],["viên",{"_index":1284,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["viết",{"_index":2468,"title":{},"body":{"index.html":{}}}],["việc",{"_index":2637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vnd",{"_index":1042,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreatePromotionDto.html":{}}}],["vnd'})@max(500000000",{"_index":1081,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["vnpay",{"_index":974,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{},"miscellaneous/enumerations.html":{}}}],["void",{"_index":215,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/RolesService.html":{}}}],["vui",{"_index":1178,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["vàng",{"_index":2346,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["vào",{"_index":618,"title":{},"body":{"controllers/CartsController.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["văn",{"_index":901,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateOrderDto.html":{}}}],["vạn",{"_index":1171,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["vận",{"_index":1101,"title":{},"body":{"classes/CreatePromotionDto.html":{}}}],["với",{"_index":1984,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["vời",{"_index":1134,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["white",{"_index":2338,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["world",{"_index":309,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":2119,"title":{},"body":{"classes/UpdateOrderStatusDto.html":{},"classes/UpdatePaymentStatusDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["xanh",{"_index":2352,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["xl",{"_index":2395,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["xs",{"_index":2394,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["xxl",{"_index":2396,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["xyz",{"_index":921,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/UpdateOrderDto.html":{}}}],["xác",{"_index":2399,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["xám",{"_index":2341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["xóa",{"_index":2047,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["xếp",{"_index":1626,"title":{},"body":{"controllers/PermissionsController.html":{},"classes/QueryDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["xếp'})@responsemessage('lấy",{"_index":1608,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["y",{"_index":1153,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["yellow",{"_index":2345,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yes",{"_index":2445,"title":{},"body":{"miscellaneous/functions.html":{}}}],["zoom",{"_index":138,"title":{},"body":{"modules/AddressesModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/CategoriesModule.html":{},"modules/DatabaseModule.html":{},"modules/FilesModule.html":{},"modules/OrdersModule.html":{},"modules/PermissionsModule.html":{},"modules/ProductsModule.html":{},"modules/PromotionsModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/addresses/schemas/address.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                fullName\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                province\n                            \n                            \n                                    \n                                streetAddress\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/addresses/schemas/address.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/addresses/schemas/address.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        province\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/addresses/schemas/address.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        streetAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/addresses/schemas/address.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/addresses/schemas/address.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { User } from 'src/models/users/schemas/user.schema';\n\nexport type AddressDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Address {\n  @Prop({ type: mongoose.Schema.Types.ObjectId, required: true })\n  user: User;\n\n  @Prop({ required: true })\n  fullName: string;\n\n  @Prop({ required: true })\n  streetAddress: string;\n\n  @Prop({ required: true })\n  province: string;\n\n  @Prop({ required: true })\n  phoneNumber: string;\n}\n\nexport const AddressSchema = SchemaFactory.createForClass(Address);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AddressesController.html":{"url":"controllers/AddressesController.html","title":"controller - AddressesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AddressesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/addresses/addresses.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                addresses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAllByUser\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createShippingAddressDto: CreateAddressDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Tạo mới địa chỉ')\n                \n            \n\n                    \n                        \n                            Defined in src/models/addresses/addresses.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createShippingAddressDto\n                                            \n                                                            CreateAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByUser(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Lấy danh sách địa chỉ')\n                \n            \n\n                    \n                        \n                            Defined in src/models/addresses/addresses.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Xóa địa chỉ')\n                \n            \n\n                    \n                        \n                            Defined in src/models/addresses/addresses.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updateShippingAddressDto: UpdateAddressDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Cập nhật địa chỉ')\n                \n            \n\n                    \n                        \n                            Defined in src/models/addresses/addresses.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateShippingAddressDto\n                                            \n                                                            UpdateAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { AddressesService } from './addresses.service';\nimport { CreateAddressDto } from './dto/create-address.dto';\nimport { UpdateAddressDto } from './dto/update-address.dto';\nimport { ValidateObjectIdPipe } from 'src/common/pipes/validate_object_id.pipe';\nimport { ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/common/decorators/user.decorator';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport { ResponseMessage } from 'src/common/decorators/response.decorator';\n\n@ApiTags('addresses')\n@Controller('addresses')\nexport class AddressesController {\n  constructor(private readonly addressesService: AddressesService) {}\n\n  @Post()\n  @ResponseMessage('Tạo mới địa chỉ')\n  async create(@Body() createShippingAddressDto: CreateAddressDto, @User() user: IUser) {\n    return await this.addressesService.create(createShippingAddressDto, user._id);\n  }\n\n  @Get()\n  @ResponseMessage('Lấy danh sách địa chỉ')\n  async findAllByUser(@User() user: IUser) {\n    return await this.addressesService.findAllByUser(user._id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Cập nhật địa chỉ')\n  async update(@Param('id') _id: string, @Body() updateShippingAddressDto: UpdateAddressDto) {\n    return await this.addressesService.update(_id, updateShippingAddressDto);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Xóa địa chỉ')\n  async remove(@Param('id') _id: string) {\n    return await this.addressesService.remove(_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AddressesModule.html":{"url":"modules/AddressesModule.html","title":"module - AddressesModule","body":"\n                   \n\n\n\n\n    Modules\n    AddressesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddressesModule\n\n\n\ncluster_AddressesModule_exports\n\n\n\ncluster_AddressesModule_providers\n\n\n\n\nAddressesService \n\nAddressesService \n\n\n\nAddressesModule\n\nAddressesModule\n\nAddressesService  -->\n\nAddressesModule->AddressesService \n\n\n\n\n\nAddressesService\n\nAddressesService\n\nAddressesModule -->\n\nAddressesService->AddressesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/addresses/addresses.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AddressesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AddressesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AddressesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AddressesService } from './addresses.service';\nimport { AddressesController } from './addresses.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Address, AddressSchema } from './schemas/address.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Address.name, schema: AddressSchema }])],\n  controllers: [AddressesController],\n  providers: [AddressesService],\n  exports: [AddressesService],\n})\nexport class AddressesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressesService.html":{"url":"injectables/AddressesService.html","title":"injectable - AddressesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/addresses/addresses.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateShippingCost\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllByUser\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(addressModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/models/addresses/addresses.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addressModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateShippingCost\n                        \n                    \n                \n            \n            \n                \ncalculateShippingCost(province: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/addresses/addresses.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                province\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAddressDto: CreateAddressDto, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/addresses/addresses.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAddressDto\n                                            \n                                                            CreateAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/addresses/addresses.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/addresses/addresses.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/addresses/addresses.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateAddressDto: UpdateAddressDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/addresses/addresses.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAddressDto\n                                            \n                                                            UpdateAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateAddressDto } from './dto/create-address.dto';\nimport { UpdateAddressDto } from './dto/update-address.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Address, AddressDocument } from './schemas/address.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { CUSTOM_MESSAGES } from 'src/common/enums/custom-messages.enum';\nimport { Utils } from 'src/utils/utils';\n\n@Injectable()\nexport class AddressesService {\n  constructor(\n    @InjectModel(Address.name)\n    private addressModel: SoftDeleteModel,\n  ) {}\n\n  async create(createAddressDto: CreateAddressDto, userId: string): Promise {\n    return await this.addressModel.create({\n      ...createAddressDto,\n      user: userId,\n    });\n  }\n\n  async findAllByUser(userId: string): Promise {\n    return await this.addressModel.find({ user: userId });\n  }\n\n  async findOne(id: string): Promise {\n    return await this.addressModel.findById(id);\n  }\n\n  async update(id: string, updateAddressDto: UpdateAddressDto): Promise {\n    const address = await this.addressModel.findById(id);\n    if (!address) {\n      throw new NotFoundException(CUSTOM_MESSAGES.ADDRESS_ID_NOT_EXIST);\n    }\n\n    const changes = Utils.getDataChange(updateAddressDto, address.toObject());\n    if (!changes) {\n      return null;\n    }\n\n    return await this.addressModel.findByIdAndUpdate({ _id: id }, updateAddressDto, { new: true });\n  }\n\n  async remove(id: string): Promise {\n    return await this.addressModel.softDelete({ id });\n  }\n\n  calculateShippingCost(province: string | null): number {\n    return province === 'Hồ Chí Minh' ? 20000 : province ? 30000 : 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filters/all_exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/core/filters/all_exception.filter.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filters/all_exception.filter.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException, HttpStatus } from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\nimport { MongoError } from 'mongodb';\n\n@Catch(MongoError)\nexport class AllExceptionsFilter implements ExceptionFilter {\n  constructor(private readonly httpAdapterHost: HttpAdapterHost) {}\n\n  catch(exception: any, host: ArgumentsHost): void {\n    const { httpAdapter } = this.httpAdapterHost;\n\n    const ctx = host.switchToHttp();\n\n    const httpStatus =\n      exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const error_msg = exception.errmsg;\n\n    const responseBody = {\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      path: httpAdapter.getRequestUrl(ctx.getRequest()),\n      message: error_msg,\n    };\n\n    httpAdapter.reply(ctx.getResponse(), responseBody, httpStatus);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class AppController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddressesModule\n\nAddressesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressesModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCartsModule\n\nCartsModule\n\nAppModule -->\n\nCartsModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nPromotionsModule\n\nPromotionsModule\n\nAppModule -->\n\nPromotionsModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCartExistsRule\n\nCartExistsRule\n\nAppModule -->\n\nCartExistsRule->AppModule\n\n\n\n\n\nProductExistsRule\n\nProductExistsRule\n\nAppModule -->\n\nProductExistsRule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            CartExistsRule\n                        \n                        \n                            ProductExistsRule\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddressesModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CartsModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            OrdersModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            PromotionsModule\n                        \n                        \n                            ReviewsModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './models/users/users.module';\nimport { RolesModule } from './models/roles/roles.module';\nimport { PermissionsModule } from './models/permissions/permissions.module';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { CategoriesModule } from './models/categories/categories.module';\nimport { ProductsModule } from './models/products/products.module';\nimport { ReviewsModule } from './models/reviews/reviews.module';\nimport { PromotionsModule } from './models/promotions/promotions.module';\nimport { CartsModule } from './models/carts/carts.module';\nimport { OrdersModule } from './models/orders/orders.module';\nimport { AddressesModule } from './models/addresses/addresses.module';\nimport { FilesModule } from './models/files/files.module';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\nimport { APP_GUARD } from '@nestjs/core';\nimport { DatabaseModule } from './database/database.module';\nimport { CartExistsRule } from './common/validators/cart-exists.rule';\nimport { ProductExistsRule } from './common/validators/product-exists.rule';\n\nconst modelModule = [\n  AuthModule,\n  UsersModule,\n  RolesModule,\n  PermissionsModule,\n  CategoriesModule,\n  ProductsModule,\n  ReviewsModule,\n  PromotionsModule,\n  AddressesModule,\n  OrdersModule,\n  CartsModule,\n  FilesModule,\n  CartsModule,\n  DatabaseModule,\n];\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    ThrottlerModule.forRoot([\n      {\n        ttl: 60000,\n        limit: 20,\n      },\n    ]),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGODB_URI'),\n        connectionFactory: connection => {\n          connection.plugin(softDeletePlugin);\n          return connection;\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    ...modelModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard,\n    },\n    CartExistsRule,\n    ProductExistsRule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplyAddressDto.html":{"url":"classes/ApplyAddressDto.html","title":"class - ApplyAddressDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplyAddressDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/addresses/dto/apply-address.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                addressId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        addressId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '66b0455e98a0e7320cc312f7', description: 'Mã địa chỉ nhận hàng', required: false})@IsOptional()@IsMongoId({message: 'AddressId phải là kiểu MongoId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/addresses/dto/apply-address.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId, IsNotEmpty, IsOptional } from 'class-validator';\n\nexport class ApplyAddressDto {\n  @ApiProperty({\n    example: '66b0455e98a0e7320cc312f7',\n    description: 'Mã địa chỉ nhận hàng',\n    required: false,\n  })\n  @IsOptional()\n  @IsMongoId({ message: 'AddressId phải là kiểu MongoId' })\n  addressId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplyPromotionDto.html":{"url":"classes/ApplyPromotionDto.html","title":"class - ApplyPromotionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplyPromotionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/promotions/dto/apply-promotion.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  PickType(CreatePromotionDto, ['coupon'] as const),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType, PickType } from '@nestjs/swagger';\nimport { CreatePromotionDto } from './create-promotion.dto';\n\nexport class ApplyPromotionDto extends PartialType(\n  PickType(CreatePromotionDto, ['coupon'] as const),\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getAccountByToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getAccountByToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccountByToken(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('account')@ResponseMessage('Lấy thông tin account bằng Token')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IUser\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(res: Response, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: LoginUserDto})@Public()@Post('login')@UseGuards(LocalAuthGuard)@ResponseMessage('Thực hiện đăng nhập')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('refresh')@ResponseMessage('Đổi access token mới')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('signup')@ResponseMessage('Thực hiện đăng ký tài khoản')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, UseGuards, Res, Get, Req } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RegisterUserDto } from 'src/models/users/dto/register-user.dto';\nimport { ResponseMessage } from 'src/common/decorators/response.decorator';\nimport { LocalAuthGuard } from './guards/local-auth.guard';\nimport { Public } from './auth.decorator';\nimport { Request, Response } from 'express';\nimport { User } from 'src/common/decorators/user.decorator';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport { ApiBearerAuth, ApiBody, ApiTags } from '@nestjs/swagger';\nimport { LoginUserDto } from 'src/models/users/dto/login-user.dto';\n\n@ApiTags('authencation')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Public()\n  @Post('signup')\n  @ResponseMessage('Thực hiện đăng ký tài khoản')\n  async signUp(@Body() registerUserDto: RegisterUserDto) {\n    console.warn(registerUserDto);\n    return await this.authService.signUp(registerUserDto);\n  }\n\n  @ApiBody({ type: LoginUserDto })\n  @Public()\n  @Post('login')\n  @UseGuards(LocalAuthGuard)\n  @ResponseMessage('Thực hiện đăng nhập')\n  async login(@Res({ passthrough: true }) res: Response, @User() user: IUser) {\n    return await this.authService.login(user, res);\n  }\n\n  @Get('account')\n  @ResponseMessage('Lấy thông tin account bằng Token')\n  getAccountByToken(@User() user: IUser) {\n    return user;\n  }\n\n  @Get('refresh')\n  @ResponseMessage('Đổi access token mới')\n  async refreshToken(@Req() request: Request, @Res({ passthrough: true }) response: Response) {\n    const refreshToken = request.cookies['refresh_token'];\n    return await this.authService.processNewToken(refreshToken, response);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from 'src/models/users/users.module';\nimport { LocalStrategy } from './passport/local.strategy';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport * as ms from 'node_modules/ms';\nimport { RolesService } from 'src/models/roles/roles.service';\nimport { RolesModule } from 'src/models/roles/roles.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    RolesModule,\n    PassportModule.register({ session: true }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: ms(configService.get('JWT_ACCESS_EXPIRE')),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                processNewToken\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n            \n                \ncreateRefreshToken(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: any, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processNewToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    processNewToken(refreshToken: string, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(registerUserDto: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Response } from 'express';\nimport * as ms from 'node_modules/ms';\nimport { CUSTOM_MESSAGES } from 'src/common/enums/custom-messages.enum';\nimport { USER_ROLE } from 'src/database/master-data';\nimport { RolesService } from 'src/models/roles/roles.service';\nimport { CreateUserDto } from 'src/models/users/dto/create-user.dto';\nimport { RegisterUserDto } from 'src/models/users/dto/register-user.dto';\nimport { UsersService } from 'src/models/users/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n    private readonly rolesService: RolesService,\n  ) {}\n\n  async validateUser(username: string, password: string): Promise {\n    const user = await this.usersService.findUserByEmail(username);\n\n    if (user) {\n      const isValidPassword = await this.usersService.isValidPassword(password, user.password);\n      if (isValidPassword) return user;\n    }\n\n    return null;\n  }\n\n  async signUp(registerUserDto: RegisterUserDto) {\n    const userRole = await this.rolesService.findOneByName(USER_ROLE);\n    const createUserDto: CreateUserDto = {\n      email: registerUserDto.email,\n      password: registerUserDto.password,\n      fullname: registerUserDto.fullname,\n      roleId: userRole._id as unknown as string,\n    };\n\n    const user = await this.usersService.create(createUserDto);\n    return {\n      fullname: user.fullname,\n      role: user.role,\n    };\n  }\n\n  async login(user: any, response: Response): Promise {\n    const { _id, email, fullname, age, address, gender, role } = user;\n    const payload = {\n      sub: 'refresh token',\n      iss: 'from server',\n      _id,\n      email,\n      fullname,\n      age,\n      address,\n      gender,\n      role,\n    };\n    const refresh_token = this.createRefreshToken(payload);\n    const access_token = this.jwtService.sign(payload);\n\n    await this.usersService.updateUserToken(user._id, refresh_token);\n\n    response.clearCookie('refresh_token');\n    response.cookie('refresh_token', refresh_token, {\n      httpOnly: true,\n      maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRE')),\n    });\n\n    return {\n      access_token,\n      user: {\n        fullname: user.fullname,\n        role: user.role,\n      },\n    };\n  }\n\n  createRefreshToken(payload: any): string {\n    return this.jwtService.sign(payload, {\n      secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      expiresIn: ms(this.configService.get('JWT_REFRESH_EXPIRE')) / 1000,\n    });\n  }\n\n  async processNewToken(refreshToken: string, res: Response): Promise {\n    const user = await this.usersService.findUserByToken(refreshToken);\n\n    if (user) {\n      return await this.login(user, res);\n    } else {\n      throw new BadRequestException(CUSTOM_MESSAGES.INVALID_TOKEN);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cart.html":{"url":"classes/Cart.html","title":"class - Cart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/carts/schemas/cart.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                coupon\n                            \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                shipping_address\n                            \n                            \n                                    \n                                shipping_method\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        coupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/carts/schemas/cart.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/carts/schemas/cart.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shipping_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/carts/schemas/cart.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shipping_method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/carts/schemas/cart.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/carts/schemas/cart.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { User } from 'src/models/users/schemas/user.schema';\nimport { Product } from 'src/models/products/schemas/product.schema';\nimport { Promotion } from 'src/models/promotions/schemas/promotion.schema';\nimport { Address } from 'src/models/addresses/schemas/address.schema';\nimport { ShippingMethod } from 'src/common/enums/enums';\n\nexport type CartDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Cart {\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true })\n  user: User;\n\n  @Prop({\n    type: [\n      {\n        product: { type: mongoose.Schema.Types.ObjectId, ref: 'Product', required: true },\n        quantity: { type: Number, required: true },\n        color: { type: String, required: true },\n        size: { type: String, required: true },\n      },\n    ],\n    default: [],\n  })\n  items: {\n    product: Product;\n    quantity: number;\n    color: string;\n    size: string;\n  }[];\n\n  @Prop({ type: String, default: ShippingMethod.Standard })\n  shipping_method: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Address.name, default: null })\n  shipping_address: Address;\n\n  @Prop({ type: String, default: null })\n  coupon: string;\n}\n\nexport const CartSchema = SchemaFactory.createForClass(Cart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartExistsRule.html":{"url":"injectables/CartExistsRule.html","title":"injectable - CartExistsRule","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartExistsRule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validators/cart-exists.rule.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cartsService: CartsService)\n                    \n                \n                        \n                            \n                                Defined in src/common/validators/cart-exists.rule.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cartsService\n                                                  \n                                                        \n                                                                        CartsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/validators/cart-exists.rule.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/validators/cart-exists.rule.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport { CartsService } from 'src/models/carts/carts.service';\nimport { CUSTOM_MESSAGES } from '../enums/custom-messages.enum';\n\n@ValidatorConstraint({ name: 'CartExists', async: true })\n@Injectable()\nexport class CartExistsRule implements ValidatorConstraintInterface {\n  constructor(private cartsService: CartsService) {}\n\n  async validate(id: string) {\n    try {\n      return (await this.cartsService.findOne(id)) ? true : false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    return CUSTOM_MESSAGES.CART_ID_NOT_EXIST;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CartItemDto.html":{"url":"classes/CartItemDto.html","title":"class - CartItemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CartItemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/carts/dto/cart-item.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                color\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                productId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, enum: ColorsType, example: 'Màu sắc 1', required: true})@IsNotEmpty({message: 'Màu sắc không được để trống'})@IsString({message: 'Màu sắc phải là kiểu String'})@IsEnum(ColorsType, {message: 'Màu sắc không hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/carts/dto/cart-item.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID sản phẩm', example: '64d8c080a78a9c46126a8a2a', required: true})@IsNotEmpty({message: 'ID sản phẩm không được để trống'})@IsString({message: 'ID sản phẩm phải là kiểu String'})@ProductExists()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/carts/dto/cart-item.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({minimum: 1, maximum: 1000000, description: 'Số lượng sản phẩm', example: 1, required: true})@IsNotEmpty({message: 'Số lượng không được để trống'})@IsNumber({allowInfinity: false, allowNaN: false, maxDecimalPlaces: 0}, {message: 'Số lượng không hợp lệ'})@Min(1, {message: 'Số lượng phải lớn hơn 0'})@Max(1000000, {message: 'Số lượng không được lớn hơn 1.000.000'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/carts/dto/cart-item.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, enum: SizesType, example: 'Kích cỡ 1', required: true})@IsNotEmpty({message: 'Kích cỡ không được để trống'})@IsString({message: 'Kích cỡ phải là kiểu String'})@IsEnum(SizesType, {message: 'Kích cỡ không hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/carts/dto/cart-item.dto.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, IsNumber, IsOptional, Min, Max, IsEnum } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { ColorsType, SizesType } from 'src/common/enums/enums';\nimport { ProductExists } from 'src/common/decorators/product-exists.decorator';\n\nexport class CartItemDto {\n  @ApiProperty({\n    description: 'ID sản phẩm',\n    example: '64d8c080a78a9c46126a8a2a',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'ID sản phẩm không được để trống' })\n  @IsString({ message: 'ID sản phẩm phải là kiểu String' })\n  @ProductExists()\n  productId: string;\n\n  @ApiProperty({\n    minimum: 1,\n    maximum: 1000000,\n    description: 'Số lượng sản phẩm',\n    example: 1,\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Số lượng không được để trống' })\n  @IsNumber(\n    { allowInfinity: false, allowNaN: false, maxDecimalPlaces: 0 },\n    { message: 'Số lượng không hợp lệ' },\n  )\n  @Min(1, { message: 'Số lượng phải lớn hơn 0' })\n  @Max(1000000, { message: 'Số lượng không được lớn hơn 1.000.000' })\n  quantity: number;\n\n  @ApiProperty({\n    type: String,\n    enum: ColorsType,\n    example: 'Màu sắc 1',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Màu sắc không được để trống' })\n  @IsString({ message: 'Màu sắc phải là kiểu String' })\n  @IsEnum(ColorsType, { message: 'Màu sắc không hợp lệ' })\n  color: string;\n\n  @ApiProperty({\n    type: String,\n    enum: SizesType,\n    example: 'Kích cỡ 1',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Kích cỡ không được để trống' })\n  @IsString({ message: 'Kích cỡ phải là kiểu String' })\n  @IsEnum(SizesType, { message: 'Kích cỡ không hợp lệ' })\n  size: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CartsController.html":{"url":"controllers/CartsController.html","title":"controller - CartsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CartsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/carts/carts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                carts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                addItem\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                applyAddress\n                            \n                            \n                                    \n                                    \n                                    Async\n                                applyCoupon\n                            \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        addItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    addItem(id: string, cartItemDto: CartItemDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/items')@ResponseMessage('Thêm sản phẩm vào giỏ hàng')\n                \n            \n\n                    \n                        \n                            Defined in src/models/carts/carts.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cartItemDto\n                                            \n                                                            CartItemDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        applyAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyAddress(id: string, applyAddressDto: ApplyAddressDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Áp dụng địa chỉ nhận hàng')@Post(':id/addresses')\n                \n            \n\n                    \n                        \n                            Defined in src/models/carts/carts.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                applyAddressDto\n                                            \n                                                            ApplyAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        applyCoupon\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyCoupon(id: string, applyPromotionDto: ApplyPromotionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/promotions')@ResponseMessage('Áp dụng mã giảm giá')\n                \n            \n\n                    \n                        \n                            Defined in src/models/carts/carts.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                applyPromotionDto\n                                            \n                                                            ApplyPromotionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCartDto: CreateCartDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Tạo mới giỏ hàng')\n                \n            \n\n                    \n                        \n                            Defined in src/models/carts/carts.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCartDto\n                                            \n                                                            CreateCartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Lấy thông tin giỏ hàng')\n                \n            \n\n                    \n                        \n                            Defined in src/models/carts/carts.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, itemId: string, removeCartDto: RemoveCartItemsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id/items/:itemId')@ResponseMessage('Xóa sản phẩm trong giỏ hàng')\n                \n            \n\n                    \n                        \n                            Defined in src/models/carts/carts.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                itemId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                removeCartDto\n                                            \n                                                            RemoveCartItemsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Delete } from '@nestjs/common';\nimport { CartsService } from './carts.service';\nimport { CreateCartDto } from './dto/create-cart.dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/common/decorators/user.decorator';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport { ValidateObjectIdPipe } from 'src/common/pipes/validate_object_id.pipe';\nimport { ApplyPromotionDto } from '../promotions/dto/apply-promotion.dto';\nimport { ApplyAddressDto } from '../addresses/dto/apply-address.dto';\nimport { Public } from 'src/auth/auth.decorator';\nimport { ResponseMessage } from 'src/common/decorators/response.decorator';\nimport { CartItemDto } from './dto/cart-item.dto';\nimport { RemoveCartItemsDto } from './dto/remove-cart-items.dto';\n\n@ApiTags('carts')\n@Controller('carts')\nexport class CartsController {\n  constructor(private readonly cartsService: CartsService) {}\n\n  @Post()\n  @ResponseMessage('Tạo mới giỏ hàng')\n  async create(@Body() createCartDto: CreateCartDto, @User() user: IUser) {\n    return await this.cartsService.create(createCartDto, user._id);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Lấy thông tin giỏ hàng')\n  findOne(@Param('id', ValidateObjectIdPipe) id: string) {\n    return this.cartsService.findOne(id);\n  }\n\n  @Post(':id/items')\n  @ResponseMessage('Thêm sản phẩm vào giỏ hàng')\n  async addItem(@Param('id', ValidateObjectIdPipe) id: string, @Body() cartItemDto: CartItemDto) {\n    return await this.cartsService.addItem(id, cartItemDto);\n  }\n\n  @Delete(':id/items/:itemId')\n  @ResponseMessage('Xóa sản phẩm trong giỏ hàng')\n  async remove(\n    @Param('id', ValidateObjectIdPipe) id: string,\n    @Param('itemId', ValidateObjectIdPipe) itemId: string,\n    @Body() removeCartDto: RemoveCartItemsDto,\n  ) {\n    return await this.cartsService.remove(id, itemId, removeCartDto.type);\n  }\n\n  @Post(':id/promotions')\n  @ResponseMessage('Áp dụng mã giảm giá')\n  async applyCoupon(\n    @Param('id', ValidateObjectIdPipe) id: string,\n    @Body() applyPromotionDto: ApplyPromotionDto,\n  ) {\n    return await this.cartsService.applyPromotion(id, applyPromotionDto.coupon);\n  }\n\n  @Public()\n  @ResponseMessage('Áp dụng địa chỉ nhận hàng')\n  @Post(':id/addresses')\n  async applyAddress(\n    @Param('id', ValidateObjectIdPipe) id: string,\n    @Body() applyAddressDto: ApplyAddressDto,\n  ) {\n    return await this.cartsService.applyAddress(id, applyAddressDto.addressId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartsModule.html":{"url":"modules/CartsModule.html","title":"module - CartsModule","body":"\n                   \n\n\n\n\n    Modules\n    CartsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CartsModule\n\n\n\ncluster_CartsModule_exports\n\n\n\ncluster_CartsModule_providers\n\n\n\ncluster_CartsModule_imports\n\n\n\n\nAddressesModule\n\nAddressesModule\n\n\n\nCartsModule\n\nCartsModule\n\nCartsModule -->\n\nAddressesModule->CartsModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nCartsModule -->\n\nProductsModule->CartsModule\n\n\n\n\n\nPromotionsModule\n\nPromotionsModule\n\nCartsModule -->\n\nPromotionsModule->CartsModule\n\n\n\n\n\nCartsService \n\nCartsService \n\nCartsService  -->\n\nCartsModule->CartsService \n\n\n\n\n\nCartsService\n\nCartsService\n\nCartsModule -->\n\nCartsService->CartsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/carts/carts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CartsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddressesModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            PromotionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CartsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CartsService } from './carts.service';\nimport { CartsController } from './carts.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Cart, CartSchema } from './schemas/cart.schema';\nimport { PromotionsModule } from '../promotions/promotions.module';\nimport { AddressesModule } from '../addresses/addresses.module';\nimport { ProductsModule } from '../products/products.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Cart.name, schema: CartSchema }]),\n    PromotionsModule,\n    AddressesModule,\n    ProductsModule,\n  ],\n  controllers: [CartsController],\n  providers: [CartsService],\n  exports: [CartsService],\n})\nexport class CartsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartsService.html":{"url":"injectables/CartsService.html","title":"injectable - CartsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/carts/carts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addItem\n                            \n                            \n                                    Async\n                                applyAddress\n                            \n                            \n                                    Async\n                                applyPromotion\n                            \n                            \n                                    Private\n                                calculateTotalAmount\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                    Async\n                                formatCartResponse\n                            \n                            \n                                formatItemsResponse\n                            \n                            \n                                    Private\n                                    Async\n                                getOrderSummary\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cartModel: SoftDeleteModel, promotionService: PromotionsService, addressService: AddressesService, productService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/models/carts/carts.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cartModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        promotionService\n                                                  \n                                                        \n                                                                        PromotionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressService\n                                                  \n                                                        \n                                                                        AddressesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    addItem(id: string, cartItemDto: CartItemDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/carts/carts.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cartItemDto\n                                            \n                                                            CartItemDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        applyAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyAddress(id: string, addressId: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/carts/carts.service.ts:201\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                addressId\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        applyPromotion\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyPromotion(id: string, coupon: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/carts/carts.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                coupon\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        calculateTotalAmount\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateTotalAmount(items: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/carts/carts.service.ts:255\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                items\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCartDto: CreateCartDto, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/carts/carts.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCartDto\n                                            \n                                                            CreateCartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/carts/carts.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        formatCartResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    formatCartResponse(cart: Cart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/carts/carts.service.ts:263\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cart\n                                            \n                                                            Cart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatItemsResponse\n                        \n                    \n                \n            \n            \n                \nformatItemsResponse(items)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/carts/carts.service.ts:276\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                items\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getOrderSummary\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderSummary(cart: Cart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/carts/carts.service.ts:235\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cart\n                                            \n                                                            Cart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, itemId: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/carts/carts.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                itemId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Cart, CartDocument } from './schemas/cart.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { CreateCartDto } from './dto/create-cart.dto';\nimport { PromotionsService } from '../promotions/promotions.service';\nimport { AddressesService } from '../addresses/addresses.service';\nimport { CUSTOM_MESSAGES } from 'src/common/enums/custom-messages.enum';\nimport { ProductsService } from '../products/products.service';\nimport { CartItemDto } from './dto/cart-item.dto';\nimport { CartRemoveType } from './cart-remove-type.enum';\nimport { OrderSummary } from 'src/common/interfaces/order-summary.interface';\nimport { TAX_RATE } from 'src/common/constants/constants';\n\n@Injectable()\nexport class CartsService {\n  constructor(\n    @InjectModel(Cart.name) private cartModel: SoftDeleteModel,\n    private readonly promotionService: PromotionsService,\n    private readonly addressService: AddressesService,\n    private readonly productService: ProductsService,\n  ) {}\n\n  async create(createCartDto: CreateCartDto, userId: string) {\n    const { items } = createCartDto;\n\n    // Validate all items in parallel\n    const isValid = await Promise.all(\n      items.map(async item => {\n        return await this.productService.getProductIfValid(item.productId, item.color, item.size);\n      }),\n    );\n\n    // If all items are valid, create the cart\n    if (isValid.every(item => item !== null)) {\n      const cart = await this.cartModel.create({\n        user: userId,\n        items: items.map(item => ({\n          product: item.productId,\n          quantity: item.quantity,\n          color: item.color,\n          size: item.size,\n        })),\n      });\n      return cart;\n    } else {\n      throw new BadRequestException('Invalid product information in the cart.');\n    }\n  }\n\n  async findOne(id: string) {\n    const cart = await this.cartModel\n      .findById(id)\n      .populate('items.product')\n      .populate('shipping_address');\n\n    if (!cart) {\n      throw new NotFoundException(CUSTOM_MESSAGES.CART_ID_NOT_EXIST);\n    }\n\n    return await this.formatCartResponse(cart);\n  }\n\n  async addItem(id: string, cartItemDto: CartItemDto) {\n    const { productId, quantity, color, size } = cartItemDto;\n    let cart = await this.cartModel\n      .findById(id)\n      .populate('items.product')\n      .populate('shipping_address');\n\n    if (!cart) {\n      throw new NotFoundException(CUSTOM_MESSAGES.CART_ID_NOT_EXIST);\n    }\n\n    const validProduct = await this.productService.getProductIfValid(productId, color, size);\n\n    if (!validProduct) {\n      throw new BadRequestException('Invalid product information.');\n    }\n\n    const cartItemExist = cart.items.find(\n      item =>\n        item.product.toString() === validProduct._id.toString() &&\n        item.color === color &&\n        item.size === size,\n    );\n\n    if (cartItemExist) {\n      cart = await this.cartModel\n        .findOneAndUpdate(\n          {\n            _id: id,\n            'items.product': validProduct._id,\n            'items.color': color,\n            'items.size': size,\n          },\n          { $inc: { 'items.$.quantity': quantity } },\n          { new: true },\n        )\n        .populate('items.product')\n        .populate('shipping_address');\n    } else {\n      cart = await this.cartModel\n        .findOneAndUpdate(\n          { _id: id },\n          {\n            $push: {\n              items: {\n                product: validProduct._id,\n                color: color,\n                size: size,\n                quantity,\n              },\n            },\n          },\n          { new: true },\n        )\n        .populate('items.product')\n        .populate('shipping_address');\n    }\n\n    return await this.formatCartResponse(cart);\n  }\n\n  async remove(id: string, itemId: string, type: string) {\n    let cart = (\n      await this.cartModel.findById(id).populate('items.product').populate('shipping_address')\n    )?.toObject();\n\n    if (!cart) {\n      throw new NotFoundException(CUSTOM_MESSAGES.CART_ID_NOT_EXIST);\n    }\n\n    if (type === CartRemoveType.ALL) {\n      cart = await this.cartModel\n        .findOneAndUpdate({ _id: id }, { items: [] }, { new: true })\n        .populate('items.product')\n        .populate('shipping_address');\n    } else {\n      const cartItem = cart.items.find(item => (item as any)._id.toString() === itemId);\n\n      if (!cartItem) {\n        throw new NotFoundException(CUSTOM_MESSAGES.CART_ITEM_ID_NOT_EXIST);\n      }\n\n      if (type === CartRemoveType.SINGLE) {\n        cart = await this.cartModel\n          .findOneAndUpdate({ _id: id }, { $pull: { items: { _id: itemId } } }, { new: true })\n          .populate('items.product')\n          .populate('shipping_address');\n      }\n\n      if (type === CartRemoveType.DESCREASE) {\n        cart = await this.cartModel\n          .findOneAndUpdate(\n            { _id: id, 'items._id': itemId },\n            { $inc: { 'items.$.quantity': -1 } },\n            { new: true },\n          )\n          .populate('items.product')\n          .populate('shipping_address');\n      }\n    }\n\n    return await this.formatCartResponse(cart);\n  }\n\n  async applyPromotion(id: string, coupon: string | null): Promise {\n    let cart = await this.cartModel.findById(id).populate('items.product');\n\n    if (!cart) {\n      throw new NotFoundException(CUSTOM_MESSAGES.CART_ID_NOT_EXIST);\n    }\n\n    if (coupon) {\n      const subTotal = cart.items.reduce(\n        (total, item) => total + item.product.price * item.quantity,\n        0,\n      );\n      const validPromotion = await this.promotionService.getValidPromotion(coupon, subTotal);\n\n      if (validPromotion) {\n        cart = await this.cartModel\n          .findOneAndUpdate({ _id: id }, { coupon: coupon }, { new: true })\n          .populate('items.product')\n          .populate('shipping_address');\n      }\n    } else {\n      cart = await this.cartModel\n        .findOneAndUpdate({ _id: id }, { coupon: null }, { new: true })\n        .populate('items.product')\n        .populate('shipping_address');\n    }\n\n    return {\n      coupon,\n      orderSummary: await this.getOrderSummary(cart),\n    };\n  }\n\n  async applyAddress(id: string, addressId: string | null) {\n    let cart = await this.cartModel\n      .findById(id)\n      .populate('shipping_address')\n      .populate('items.product');\n\n    if (!cart) {\n      throw new NotFoundException(CUSTOM_MESSAGES.CART_ID_NOT_EXIST);\n    }\n\n    if (addressId) {\n      const address = await this.addressService.findOne(addressId);\n\n      if (!address) {\n        throw new NotFoundException(CUSTOM_MESSAGES.ADDRESS_ID_NOT_EXIST);\n      }\n\n      cart = await this.cartModel\n        .findOneAndUpdate({ _id: id }, { shipping_address: addressId }, { new: true })\n        .populate('shipping_address')\n        .populate('items.product');\n    } else {\n      cart = await this.cartModel\n        .findOneAndUpdate({ _id: id }, { shipping_address: null }, { new: true })\n        .populate('shipping_address')\n        .populate('items.product');\n    }\n\n    return {\n      shipping_address: cart.shipping_address,\n      orderSummary: await this.getOrderSummary(cart),\n    };\n  }\n\n  private async getOrderSummary(cart: Cart): Promise {\n    const { items, shipping_address, coupon } = cart;\n    const taxRate = TAX_RATE;\n    const itemCount = items.reduce((total, item) => total + item.quantity, 0) ?? 0;\n    const subTotal = this.calculateTotalAmount(cart.items);\n    const shippingCost = this.addressService.calculateShippingCost(shipping_address?.province) ?? 0;\n    const discountAmount = await this.promotionService.calculateDiscountAmount(coupon, subTotal);\n    const taxAmount = subTotal * taxRate;\n    const totalAmount = subTotal + taxAmount + shippingCost - discountAmount;\n\n    return {\n      itemCount: itemCount,\n      subTotal: subTotal,\n      taxAmount: taxAmount,\n      shippingCost: shippingCost,\n      discountAmount: discountAmount,\n      total: totalAmount,\n    };\n  }\n\n  private calculateTotalAmount(items: any[]): number {\n    if (!items || items.length === 0) {\n      return 0;\n    }\n\n    return items.reduce((total, item) => total + item.product.price * item.quantity, 0);\n  }\n\n  private async formatCartResponse(cart: Cart) {\n    const orderSummary = await this.getOrderSummary(cart);\n    const items = this.formatItemsResponse(cart.items);\n\n    return {\n      _id: (cart as any)._id,\n      items: items,\n      shipping_address: cart.shipping_address,\n      coupon: cart.coupon,\n      orderSummary: orderSummary,\n    };\n  }\n\n  formatItemsResponse(items: Cart['items']) {\n    return items.map((item: any) => ({\n      _id: item._id,\n      productId: item.product._id,\n      name: item.product.name,\n      image: item.product.images[0] ?? null,\n      price: item.product.price,\n      quantity: item.quantity,\n      color: item.color,\n      size: item.size,\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriesController.html":{"url":"controllers/CategoriesController.html","title":"controller - CategoriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/categories/categories.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                categories\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCategoryDto: CreateCategoryDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Tạo mới danh mục')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/models/categories/categories.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryDto\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Lấy danh sách danh mục')\n                \n            \n\n                    \n                        \n                            Defined in src/models/categories/categories.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()@ResponseMessage('Lấy thông tin của danh mục')\n                \n            \n\n                    \n                        \n                            Defined in src/models/categories/categories.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Xóa danh mục')@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/models/categories/categories.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updateCategoryDto: UpdateCategoryDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Cập nhật thông tin danh mục')@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/models/categories/categories.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCategoryDto\n                                            \n                                                            UpdateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { CategoriesService } from './categories.service';\nimport { CreateCategoryDto } from './dto/create-category.dto';\nimport { UpdateCategoryDto } from './dto/update-category.dto';\nimport { User } from 'src/common/decorators/user.decorator';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport { ResponseMessage } from 'src/common/decorators/response.decorator';\nimport { Public } from 'src/auth/auth.decorator';\nimport { ValidateObjectIdPipe } from 'src/common/pipes/validate_object_id.pipe';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('categories')\n@Controller('categories')\nexport class CategoriesController {\n  constructor(private readonly categoriesService: CategoriesService) {}\n\n  @ResponseMessage('Tạo mới danh mục')\n  @Post()\n  async create(@Body() createCategoryDto: CreateCategoryDto, @User() user: IUser) {\n    return await this.categoriesService.create(createCategoryDto, user);\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage('Lấy danh sách danh mục')\n  async findAll() {\n    return await this.categoriesService.findAll();\n  }\n\n  @Get(':id')\n  @Public()\n  @ResponseMessage('Lấy thông tin của danh mục')\n  async findOne(@Param('id', ValidateObjectIdPipe) id: string) {\n    return await this.categoriesService.findOne(id);\n  }\n\n  @ResponseMessage('Cập nhật thông tin danh mục')\n  @Patch(':id')\n  async update(\n    @Param('id', ValidateObjectIdPipe) _id: string,\n    @Body() updateCategoryDto: UpdateCategoryDto,\n    @User() user: IUser,\n  ) {\n    return await this.categoriesService.update(_id, updateCategoryDto, user);\n  }\n\n  @ResponseMessage('Xóa danh mục')\n  @Delete(':id')\n  async remove(@Param('id') id: string, @User() user: IUser) {\n    return await this.categoriesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_CategoriesModule_exports\n\n\n\n\nCategoriesService \n\nCategoriesService \n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/categories/categories.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CategoriesService } from './categories.service';\nimport { CategoriesController } from './categories.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Category, CategorySchema } from './schemas/category.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Category.name, schema: CategorySchema }])],\n  controllers: [CategoriesController],\n  providers: [CategoriesService],\n  exports: [CategoriesService],\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/categories/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                productsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryModel: SoftDeleteModel, moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/models/categories/categories.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCategoryDto: CreateCategoryDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/categories/categories.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryDto\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/categories/categories.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/categories/categories.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/categories/categories.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/categories/categories.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updateCategoryDto: UpdateCategoryDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/categories/categories.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCategoryDto\n                                            \n                                                            UpdateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        productsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductsService\n\n                    \n                \n                    \n                        \n                                Defined in src/models/categories/categories.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException, OnModuleInit } from '@nestjs/common';\nimport { CreateCategoryDto } from './dto/create-category.dto';\nimport { UpdateCategoryDto } from './dto/update-category.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Category, CategoryDocument } from './schemas/category.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport { CUSTOM_MESSAGES } from 'src/common/enums/custom-messages.enum';\nimport { ModuleRef } from '@nestjs/core';\nimport { ProductsService } from '../products/products.service';\n\n@Injectable()\nexport class CategoriesService implements OnModuleInit {\n  private productsService: ProductsService;\n\n  constructor(\n    @InjectModel(Category.name)\n    private categoryModel: SoftDeleteModel,\n    private moduleRef: ModuleRef,\n  ) {}\n\n  onModuleInit() {\n    this.productsService = this.moduleRef.get(ProductsService, { strict: false });\n  }\n\n  async create(createCategoryDto: CreateCategoryDto, user: IUser): Promise {\n    const isExist = await this.categoryModel.findOne({\n      name: createCategoryDto.name,\n    });\n\n    if (isExist) {\n      throw new BadRequestException(CUSTOM_MESSAGES.CATEGORY_EXIST);\n    }\n\n    const newCategory = await this.categoryModel.create({\n      ...createCategoryDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n\n    return newCategory;\n  }\n\n  async findAll(): Promise {\n    return await this.categoryModel.find();\n  }\n\n  async findOne(id: string): Promise {\n    const category = await this.categoryModel.findOne({ _id: id });\n    if (!category) {\n      throw new NotFoundException(CUSTOM_MESSAGES.CATEGORY_ID_NOT_EXIST);\n    }\n    return category;\n  }\n\n  async update(\n    _id: string,\n    updateCategoryDto: UpdateCategoryDto,\n    user: IUser,\n  ): Promise {\n    const existingCategory = await this.categoryModel.findOne({ _id });\n    if (!existingCategory) {\n      throw new NotFoundException(CUSTOM_MESSAGES.CATEGORY_ID_NOT_EXIST);\n    }\n\n    const updatedCategory = await this.categoryModel.findByIdAndUpdate(\n      { _id },\n      {\n        ...updateCategoryDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n      { new: true },\n    );\n\n    return updatedCategory;\n  }\n\n  async remove(id: string, user: IUser): Promise {\n    const category = await this.categoryModel.findOne({ _id: id });\n    if (!category) {\n      throw new NotFoundException(CUSTOM_MESSAGES.CATEGORY_ID_NOT_EXIST);\n    }\n\n    const isExistProduct = await this.productsService.findByCategoryId(id);\n    if (isExistProduct.length > 0) {\n      throw new BadRequestException(CUSTOM_MESSAGES.CATEGORY_HAS_PRODUCT);\n    }\n\n    await this.categoryModel.updateOne(\n      { id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n\n    return await this.categoryModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/categories/schemas/category.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                image\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/categories/schemas/category.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/categories/schemas/category.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/categories/schemas/category.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/categories/schemas/category.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/categories/schemas/category.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/categories/schemas/category.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/categories/schemas/category.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/categories/schemas/category.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/categories/schemas/category.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/categories/schemas/category.schema.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CategoryDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Category {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop()\n  image: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const CategorySchema = SchemaFactory.createForClass(Category);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAddressDto.html":{"url":"classes/CreateAddressDto.html","title":"class - CreateAddressDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAddressDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/addresses/dto/create-address.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                fullName\n                            \n                            \n                                    \n                                    \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                province\n                            \n                            \n                                    \n                                    \n                                    \n                                streetAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'Nguyễn Văn A', description: 'Họ và tên người nhận', required: true})@IsNotEmpty({message: 'Họ và tên không được bỏ trống'})@IsString({message: 'Họ và tên phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/addresses/dto/create-address.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: '0987654321', description: 'Số điện thoại liên lạc', required: true})@IsNotEmpty({message: 'Số điện thoại không được bỏ trống'})@IsString({message: 'Số điện thoại phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/addresses/dto/create-address.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        province\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'TP. Hồ Chí Minh', description: 'Tên tỉnh/thành phố', required: true})@IsNotEmpty({message: 'Tên tỉnh không được bỏ trống'})@IsString({message: 'Tên tỉnh phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/addresses/dto/create-address.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        streetAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: '123 Đường ABC, Phường XYZ, Quận DEF', description: 'Địa chỉ cụ thể', required: true})@IsNotEmpty({message: 'Tên đường không được bỏ trống'})@IsString({message: 'Tên đường phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/addresses/dto/create-address.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateAddressDto {\n  @ApiProperty({\n    type: String,\n    example: 'Nguyễn Văn A',\n    description: 'Họ và tên người nhận',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Họ và tên không được bỏ trống' })\n  @IsString({ message: 'Họ và tên phải là kiểu String' })\n  fullName: string;\n\n  @ApiProperty({\n    type: String,\n    example: '123 Đường ABC, Phường XYZ, Quận DEF',\n    description: 'Địa chỉ cụ thể',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Tên đường không được bỏ trống' })\n  @IsString({ message: 'Tên đường phải là kiểu String' })\n  streetAddress: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'TP. Hồ Chí Minh',\n    description: 'Tên tỉnh/thành phố',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Tên tỉnh không được bỏ trống' })\n  @IsString({ message: 'Tên tỉnh phải là kiểu String' })\n  province: string;\n\n  @ApiProperty({\n    type: String,\n    example: '0987654321',\n    description: 'Số điện thoại liên lạc',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Số điện thoại không được bỏ trống' })\n  @IsString({ message: 'Số điện thoại phải là kiểu String' })\n  phoneNumber: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCartDto.html":{"url":"classes/CreateCartDto.html","title":"class - CreateCartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/carts/dto/create-cart.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CartItemDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Danh sách sản phẩm trong giỏ hàng', type: undefined, required: true, example: undefined})@IsNotEmpty({message: 'items không được để trống'})@IsArray({message: 'items phải là kiểu Array'})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/carts/dto/create-cart.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsArray, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { CartItemDto } from './cart-item.dto';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { ProductExists } from 'src/common/decorators/product-exists.decorator';\nexport class CreateCartDto {\n  @ApiProperty({\n    description: 'Danh sách sản phẩm trong giỏ hàng',\n    type: [CartItemDto],\n    required: true,\n    example: [\n      {\n        productId: '66b585d13bbbf0141a9d284a',\n        quantity: 1,\n        color: 'Màu sắc 1',\n        size: 'Kích cỡ 1',\n      },\n      {\n        productId: '66b585da09162457ad25baea',\n        quantity: 2,\n        color: 'Màu sắc 2',\n        size: 'Kích cỡ 2',\n      },\n    ],\n  })\n  @IsNotEmpty({ message: 'items không được để trống' })\n  @IsArray({ message: 'items phải là kiểu Array' })\n  @ValidateNested({ each: true })\n  @Type(() => CartItemDto)\n  items: CartItemDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/categories/dto/create-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                image\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Mô tả danh mục 1', description: 'Mô tả danh mục', required: false})@IsOptional()@IsString({message: 'Description phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/categories/dto/create-category.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'e2ccb489-21e0-43a5-9a8d-f1be2ef547cf.jpg', description: 'Hình ảnh danh mục', required: false})@IsOptional()@IsString({message: 'Image phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/categories/dto/create-category.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Danh mục 1', description: 'Tên danh mục', required: true})@IsNotEmpty({message: 'Name không được bỏ trống'})@IsString({message: 'Name phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/categories/dto/create-category.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateCategoryDto {\n  @ApiProperty({\n    example: 'Danh mục 1',\n    description: 'Tên danh mục',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Name không được bỏ trống' })\n  @IsString({ message: 'Name phải là kiểu String' })\n  name: string;\n\n  @ApiProperty({\n    example: 'e2ccb489-21e0-43a5-9a8d-f1be2ef547cf.jpg',\n    description: 'Hình ảnh danh mục',\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Image phải là kiểu String' })\n  image?: string;\n\n  @ApiProperty({\n    example: 'Mô tả danh mục 1',\n    description: 'Mô tả danh mục',\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Description phải là kiểu String' })\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/orders/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                cartId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                note\n                            \n                            \n                                    \n                                    \n                                    \n                                payment_method\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        cartId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '66b090c57336945ce1a69ffd', description: 'ID giỏ hàng', required: true})@IsNotEmpty({message: 'ID giỏ hàng không được bỏ trống'})@IsMongoId({message: 'ID giỏ hàng phải là kiểu MongoID'})@CartExists()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/dto/create-order.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Giao hàng giờ hành chính', description: 'Ghi chú cho đơn hàng', required: false})@IsOptional()@IsString({message: 'Ghi chú giao hàng phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/dto/create-order.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        payment_method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: PaymentMethod, example: 'Ví điện tử VNPay', description: 'Phương thức thanh toán', required: true})@IsNotEmpty({message: 'Phương thức thanh toán không được bỏ trống'})@IsEnum(PaymentMethod, {message: 'Phương thức thanh toán không hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/dto/create-order.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsMongoId, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { CartExists } from 'src/common/decorators/cart-exists.decorator';\nimport { PaymentMethod } from 'src/common/enums/enums';\nimport { OrderStatus } from 'src/common/enums/status.enum';\n\nexport class CreateOrderDto {\n  @ApiProperty({\n    example: '66b090c57336945ce1a69ffd',\n    description: 'ID giỏ hàng',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'ID giỏ hàng không được bỏ trống' })\n  @IsMongoId({ message: 'ID giỏ hàng phải là kiểu MongoID' })\n  @CartExists()\n  cartId: string;\n\n  @ApiProperty({\n    enum: PaymentMethod,\n    example: 'Ví điện tử VNPay',\n    description: 'Phương thức thanh toán',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Phương thức thanh toán không được bỏ trống' })\n  @IsEnum(PaymentMethod, { message: 'Phương thức thanh toán không hợp lệ' })\n  payment_method: string;\n\n  @ApiProperty({\n    example: 'Giao hàng giờ hành chính',\n    description: 'Ghi chú cho đơn hàng',\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Ghi chú giao hàng phải là kiểu String' })\n  note?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                    \n                                    \n                                method\n                            \n                            \n                                    \n                                    \n                                    \n                                module\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '/api/v1/users', description: 'Path của permission (dùng /api/v1/{tên route})', required: true})@IsNotEmpty({message: 'ApiPath không được bỏ trống'})@IsString({message: 'ApiPath phải là String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/permissions/dto/create-permission.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'GET', description: 'Method của permission', required: true})@IsNotEmpty({message: 'Method không được bỏ trống'})@IsString({message: 'Method phải là String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/permissions/dto/create-permission.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'USERS', description: 'Module chứa các permission giống kiểu category', required: true})@IsString({message: 'Module phải là String'})@IsNotEmpty({message: 'Module không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/permissions/dto/create-permission.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Fetch users with paginate', description: 'Tên của permission', required: true})@IsNotEmpty({message: 'Tên Permission không được bỏ trống'})@IsString({message: 'Tên Permission phải là String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/permissions/dto/create-permission.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreatePermissionDto {\n  @ApiProperty({\n    example: 'Fetch users with paginate',\n    description: 'Tên của permission',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Tên Permission không được bỏ trống' })\n  @IsString({ message: 'Tên Permission phải là String' })\n  name: string;\n\n  @ApiProperty({\n    example: '/api/v1/users',\n    description: 'Path của permission (dùng /api/v1/{tên route})',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'ApiPath không được bỏ trống' })\n  @IsString({ message: 'ApiPath phải là String' })\n  apiPath: string;\n\n  @ApiProperty({\n    example: 'GET',\n    description: 'Method của permission',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Method không được bỏ trống' })\n  @IsString({ message: 'Method phải là String' })\n  method: string;\n\n  @ApiProperty({\n    example: 'USERS',\n    description: 'Module chứa các permission giống kiểu category',\n    required: true,\n  })\n  @IsString({ message: 'Module phải là String' })\n  @IsNotEmpty({ message: 'Module không được bỏ trống' })\n  module: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/products/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                care_instructions\n                            \n                            \n                                    \n                                    \n                                    \n                                categoryId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                colors\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                fabric\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                images\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                sizes\n                            \n                            \n                                    \n                                    \n                                    \n                                sku\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                stock\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        care_instructions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Hướng dẫn bảo quản sản phẩm', example: 'Hướng dẫn bảo quản 1', required: false})@IsOptional()@IsString({message: 'Hướng dẫn bảo quản phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/dto/create-product.dto.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID danh mục sản phẩm', example: '64d8c080a78a9c46126a8a2a', required: true})@IsNotEmpty({message: 'ID danh mục không được trống'})@IsMongoId({message: 'ID danh mục phải là kiểu MongoId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/dto/create-product.dto.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        colors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, enumName: 'Màu sắc hợp lệ:', enum: ColorsType, example: undefined, required: true})@IsNotEmpty({message: 'Màu sắc không được trống'})@IsArray({message: 'Màu sắc phải là kiểu Array'})@IsEnum(ColorsType, {each: true, message: 'Màu sắc không hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/dto/create-product.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Mô tả sản phẩm', example: 'Sản phẩm 1', required: false})@IsOptional()@IsString({message: 'Mô tả phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/dto/create-product.dto.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        fabric\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Chất liệu sản phẩm', example: 'Chất liệu 1', required: false})@IsOptional()@IsString({message: 'Chất liệu phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/dto/create-product.dto.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'Lưu ý: thực hiện upload file để có tên hình ảnh', example: undefined, required: false})@IsOptional()@IsString({message: 'Hình ảnh phải là kiểu String', each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/dto/create-product.dto.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tên sản phẩm', example: 'Sản phẩm 1', required: true})@IsNotEmpty({message: 'Tên sản phẩm không được trống'})@IsString({message: 'Tên sản phẩm phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/dto/create-product.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({minimum: 0, maximum: 1000000000, description: 'Giá bán', example: 100000, required: true})@IsNotEmpty({message: 'Giá không được trống'})@IsNumber({allowInfinity: false, allowNaN: false, maxDecimalPlaces: 0}, {message: 'Giá không hợp lệ'})@Min(0, {message: 'Giá không được nhỏ hơn 0'})@Max(1000000000, {message: 'Giá không được lớn hơn 1.000.000.000 VND'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/dto/create-product.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        sizes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, enumName: 'Kích cỡ hợp lệ:', enum: SizesType, example: undefined, required: true})@IsNotEmpty({message: 'Kích cỡ không được trống'})@IsArray({message: 'Kích cỡ phải là kiểu Array'})@IsEnum(SizesType, {each: true, message: 'Kích cỡ không hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/dto/create-product.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        sku\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Mã định danh sản phẩm', example: 'SKU 1', required: true})@IsNotEmpty({message: 'SKU không được trống'})@IsString({message: 'SKU phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/dto/create-product.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({minimum: 0, maximum: 1000000, description: 'Số lượng kho', example: 100, required: true})@IsNotEmpty({message: 'Số lượng kho không được trống'})@IsNumber({allowInfinity: false, allowNaN: false, maxDecimalPlaces: 0}, {message: 'Số lượng kho không hợp lệ'})@Min(0, {message: 'Số lượng kho không được nhỏ hơn 0'})@Max(1000000, {message: 'Số lượng kho không được lớn hơn 1.000.000 VND'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/dto/create-product.dto.ts:88\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsArray,\n  IsEnum,\n  IsMongoId,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  Max,\n  Min,\n} from 'class-validator';\nimport { ColorsType, SizesType } from 'src/common/enums/enums';\n\nexport class CreateProductDto {\n  @ApiProperty({\n    description: 'Mã định danh sản phẩm',\n    example: 'SKU 1',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'SKU không được trống' })\n  @IsString({ message: 'SKU phải là kiểu String' })\n  sku: string;\n\n  @ApiProperty({\n    description: 'Tên sản phẩm',\n    example: 'Sản phẩm 1',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Tên sản phẩm không được trống' })\n  @IsString({ message: 'Tên sản phẩm phải là kiểu String' })\n  name: string;\n\n  @ApiProperty({\n    minimum: 0,\n    maximum: 1000000000,\n    description: 'Giá bán',\n    example: 100000,\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Giá không được trống' })\n  @IsNumber(\n    { allowInfinity: false, allowNaN: false, maxDecimalPlaces: 0 },\n    { message: 'Giá không hợp lệ' },\n  )\n  @Min(0, { message: 'Giá không được nhỏ hơn 0' })\n  @Max(1000000000, { message: 'Giá không được lớn hơn 1.000.000.000 VND' })\n  price: number;\n\n  @ApiProperty({\n    type: [String],\n    enumName: 'Màu sắc hợp lệ:',\n    enum: ColorsType,\n    example: ['Màu sắc 1', 'Màu sắc 2'],\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Màu sắc không được trống' })\n  @IsArray({ message: 'Màu sắc phải là kiểu Array' })\n  @IsEnum(ColorsType, { each: true, message: 'Màu sắc không hợp lệ' })\n  colors: string[];\n\n  @ApiProperty({\n    type: [String],\n    enumName: 'Kích cỡ hợp lệ:',\n    enum: SizesType,\n    example: ['Kích cỡ 1', 'Kích cỡ 2'],\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Kích cỡ không được trống' })\n  @IsArray({ message: 'Kích cỡ phải là kiểu Array' })\n  @IsEnum(SizesType, { each: true, message: 'Kích cỡ không hợp lệ' })\n  sizes: string[];\n\n  @ApiProperty({\n    minimum: 0,\n    maximum: 1000000,\n    description: 'Số lượng kho',\n    example: 100,\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Số lượng kho không được trống' })\n  @IsNumber(\n    { allowInfinity: false, allowNaN: false, maxDecimalPlaces: 0 },\n    { message: 'Số lượng kho không hợp lệ' },\n  )\n  @Min(0, { message: 'Số lượng kho không được nhỏ hơn 0' })\n  @Max(1000000, { message: 'Số lượng kho không được lớn hơn 1.000.000 VND' })\n  stock: number;\n\n  @ApiProperty({\n    description: 'ID danh mục sản phẩm',\n    example: '64d8c080a78a9c46126a8a2a',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'ID danh mục không được trống' })\n  @IsMongoId({ message: 'ID danh mục phải là kiểu MongoId' })\n  categoryId: string;\n\n  @ApiProperty({\n    type: [String],\n    description: 'Lưu ý: thực hiện upload file để có tên hình ảnh',\n    example: [\n      '906a3aa4-870a-4922-a418-2cdad00d09e2.jpg',\n      'e2ccb489-21e0-43a5-9a8d-f1be2ef547cf.jpg',\n    ],\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Hình ảnh phải là kiểu String', each: true })\n  images?: string[];\n\n  @ApiProperty({\n    description: 'Mô tả sản phẩm',\n    example: 'Sản phẩm 1',\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Mô tả phải là kiểu String' })\n  description?: string;\n\n  @ApiProperty({\n    description: 'Chất liệu sản phẩm',\n    example: 'Chất liệu 1',\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Chất liệu phải là kiểu String' })\n  fabric?: string;\n\n  @ApiProperty({\n    description: 'Hướng dẫn bảo quản sản phẩm',\n    example: 'Hướng dẫn bảo quản 1',\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Hướng dẫn bảo quản phải là kiểu String' })\n  care_instructions: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePromotionDto.html":{"url":"classes/CreatePromotionDto.html","title":"class - CreatePromotionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePromotionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/promotions/dto/create-promotion.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                condition\n                            \n                            \n                                    \n                                    \n                                    \n                                coupon\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                discount_amount\n                            \n                            \n                                    \n                                    \n                                    \n                                discount_type\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                end_date\n                            \n                            \n                                    \n                                    \n                                    \n                                free_shipping\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                start_date\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        condition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 1000000, description: 'Điều kiện áp dụng mã khuyến mãi (Tổng giá trị đơn hàng)', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/dto/create-promotion.dto.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        coupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'SUMMER2023', description: 'Mã khuyến mãi', required: true})@IsNotEmpty({message: 'Mã khuyến mãi không được bỏ trống'})@IsString({message: 'Mã khuyến mãi phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/dto/create-promotion.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'Giảm giá mùa hè', description: 'Mô tả cho mã khuyến mãi', required: false})@IsOptional()@IsString({message: 'Mô tả phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/dto/create-promotion.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        discount_amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 100000, description: 'Số tiền giảm giá', required: true})@IsNotEmpty({message: 'Số tiền giảm giá không được bỏ trống'})@IsNumber({allowInfinity: false, allowNaN: false, maxDecimalPlaces: 0}, {message: 'Số tiền giảm giá không hợp lệ'})@Min(0, {message: 'Số tiền giảm giá tối thiểu là 0 VND'})@Max(500000000, {message: 'Số tiền giảm giá tối đa là 500.000.000 VND'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/dto/create-promotion.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        discount_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, enum: DiscountType, example: 'Phần trăm', description: 'Loại giảm giá', required: true})@IsNotEmpty({message: 'Loại giảm giá không được bỏ trống'})@IsEnum(DiscountType, {message: 'Loại giảm giá không hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/dto/create-promotion.dto.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        end_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, example: '2023-07-31T00:00:00.000Z', description: 'Ngày kết thúc áp dụng mã khuyến mãi', required: true})@IsNotEmpty({message: 'Ngày kết thúc không được bỏ trống'})@IsDate({message: 'Ngày kết thúc phải là kiểu Date'})@MinDate(new Date(), {message: 'Ngày kết thúc phải lớn hơn ngày hiện tại'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/dto/create-promotion.dto.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        free_shipping\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, example: true, description: 'Miễn phí vận chuyển', required: true})@IsNotEmpty({message: 'Miễn phí vận chuyển không được bỏ trống'})@IsBoolean({message: 'Miễn phí vận chuyển phải là kiểu Boolean '})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/dto/create-promotion.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        start_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, example: '2023-06-01T00:00:00.000Z', description: 'Ngày bắt đầu áp dụng mã khuyến mãi', required: true})@IsNotEmpty({message: 'Ngày bắt đầu không được bỏ trống'})@IsDate({message: 'Ngày bắt đầu phải là kiểu Date'})@MinDate(new Date(), {message: 'Ngày bắt đầu phải lớn hơn ngày hiện tại'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/dto/create-promotion.dto.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, enum: CouponStatus, example: 'Không hoạt động', description: 'Trạng thái của mã khuyến mãi', required: true})@IsNotEmpty({message: 'Trạng thái không được bỏ trống'})@IsEnum(CouponStatus, {message: 'Trạng thái không hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/dto/create-promotion.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsEnum,\n  IsNumber,\n  IsBoolean,\n  IsOptional,\n  IsDate,\n  IsNotEmpty,\n  Min,\n  Max,\n  MinDate,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { CouponStatus, DiscountType } from 'src/common/enums/enums';\n\nexport class CreatePromotionDto {\n  @ApiProperty({\n    type: String,\n    example: 'SUMMER2023',\n    description: 'Mã khuyến mãi',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Mã khuyến mãi không được bỏ trống' })\n  @IsString({ message: 'Mã khuyến mãi phải là kiểu String' })\n  coupon: string;\n\n  @ApiProperty({\n    type: String,\n    enum: CouponStatus,\n    example: 'Không hoạt động',\n    description: 'Trạng thái của mã khuyến mãi',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Trạng thái không được bỏ trống' })\n  @IsEnum(CouponStatus, {\n    message: 'Trạng thái không hợp lệ',\n  })\n  status: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'Giảm giá mùa hè',\n    description: 'Mô tả cho mã khuyến mãi',\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Mô tả phải là kiểu String' })\n  description?: string;\n\n  @ApiProperty({\n    type: Number,\n    example: 100000,\n    description: 'Số tiền giảm giá',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Số tiền giảm giá không được bỏ trống' })\n  @IsNumber(\n    { allowInfinity: false, allowNaN: false, maxDecimalPlaces: 0 },\n    { message: 'Số tiền giảm giá không hợp lệ' },\n  )\n  @Min(0, { message: 'Số tiền giảm giá tối thiểu là 0 VND' })\n  @Max(500000000, { message: 'Số tiền giảm giá tối đa là 500.000.000 VND' })\n  discount_amount: number;\n\n  @ApiProperty({\n    type: Boolean,\n    example: true,\n    description: 'Miễn phí vận chuyển',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Miễn phí vận chuyển không được bỏ trống' })\n  @IsBoolean({ message: 'Miễn phí vận chuyển phải là kiểu Boolean ' })\n  free_shipping: boolean;\n\n  @ApiProperty({\n    type: String,\n    enum: DiscountType,\n    example: 'Phần trăm',\n    description: 'Loại giảm giá',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Loại giảm giá không được bỏ trống' })\n  @IsEnum(DiscountType, { message: 'Loại giảm giá không hợp lệ' })\n  discount_type: string;\n\n  @ApiProperty({\n    type: Number,\n    example: 1000000,\n    description: 'Điều kiện áp dụng mã khuyến mãi (Tổng giá trị đơn hàng)',\n    required: false,\n  })\n  @IsOptional()\n  condition: number; // Điều kiện là tổng giá trị đơn hàng - (Mở rộng: Minimum_purchase, Specific_products, Customer_group)\n\n  @ApiProperty({\n    type: Date,\n    example: '2023-06-01T00:00:00.000Z',\n    description: 'Ngày bắt đầu áp dụng mã khuyến mãi',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Ngày bắt đầu không được bỏ trống' })\n  @IsDate({ message: 'Ngày bắt đầu phải là kiểu Date' })\n  @MinDate(new Date(), { message: 'Ngày bắt đầu phải lớn hơn ngày hiện tại' })\n  @Type(() => Date)\n  start_date: Date;\n\n  @ApiProperty({\n    type: Date,\n    example: '2023-07-31T00:00:00.000Z',\n    description: 'Ngày kết thúc áp dụng mã khuyến mãi',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Ngày kết thúc không được bỏ trống' })\n  @IsDate({ message: 'Ngày kết thúc phải là kiểu Date' })\n  @MinDate(new Date(), { message: 'Ngày kết thúc phải lớn hơn ngày hiện tại' })\n  @Type(() => Date)\n  end_date: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReviewDto.html":{"url":"classes/CreateReviewDto.html","title":"class - CreateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/reviews/dto/create-review.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                comment\n                            \n                            \n                                    \n                                    \n                                    \n                                productId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                score\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Sản phẩm tuyệt vời', description: 'Nội dung đánh giá', required: false})@IsOptional()@IsString({message: 'Comment phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/reviews/dto/create-review.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: '66ae2bf115e4b8f80d4d15c5', description: 'Product ID', required: true})@IsMongoId({message: 'Product phải là kiểu MongoID'})@IsNotEmpty({message: 'Product không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/reviews/dto/create-review.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 5, description: 'Điểm đánh giá', required: true})@IsNotEmpty({message: 'Score không được bỏ trống'})@IsNumber({allowInfinity: false, maxDecimalPlaces: 0, allowNaN: false}, {message: 'Score phải từ 1 - 5'})@Min(1, {message: 'Score không được nhỏ hơn 1'})@Max(5, {message: 'Score không được lớn hơn 5'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/reviews/dto/create-review.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId, IsNotEmpty, IsNumber, IsOptional, IsString, Max, Min } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateReviewDto {\n  @ApiProperty({\n    type: String,\n    example: '66ae2bf115e4b8f80d4d15c5',\n    description: 'Product ID',\n    required: true,\n  })\n  @IsMongoId({ message: 'Product phải là kiểu MongoID' })\n  @IsNotEmpty({ message: 'Product không được bỏ trống' })\n  productId: string;\n\n  @ApiProperty({\n    example: 5,\n    description: 'Điểm đánh giá',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Score không được bỏ trống' })\n  @IsNumber(\n    { allowInfinity: false, maxDecimalPlaces: 0, allowNaN: false },\n    { message: 'Score phải từ 1 - 5' },\n  )\n  @Min(1, { message: 'Score không được nhỏ hơn 1' })\n  @Max(5, { message: 'Score không được lớn hơn 5' })\n  score: number;\n\n  @ApiProperty({\n    example: 'Sản phẩm tuyệt vời',\n    description: 'Nội dung đánh giá',\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Comment phải là kiểu String' })\n  comment?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Đây là vai trò của ABCXYZ', description: 'Mô tả của vai trò', required: false})@IsOptional()@IsString({message: 'Mô tả phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/roles/dto/create-role.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, description: 'Trạng thái của vai trò', required: true})@IsBoolean({message: 'Trạng thái phải là kiểu Boolean'})@IsNotEmpty({message: 'Trạng thái không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/roles/dto/create-role.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ADMIN', description: 'Tên vai trò', required: true})@IsNotEmpty({message: 'Tên Role không được bỏ trống'})@IsString({message: 'Tên Role phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/roles/dto/create-role.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, example: undefined, description: 'Danh sách ID của các permission (chưa có thì để [])', required: true})@IsArray({message: 'Permissions phải là kiểu Array'})@IsMongoId({each: true, message: 'Permission phải là kiểu ObjectId'})@IsNotEmpty({message: 'Permission không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/roles/dto/create-role.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsBoolean, IsMongoId, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateRoleDto {\n  @ApiProperty({\n    example: 'ADMIN',\n    description: 'Tên vai trò',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Tên Role không được bỏ trống' })\n  @IsString({ message: 'Tên Role phải là kiểu String' })\n  name: string;\n\n  @ApiProperty({\n    type: [String],\n    example: ['66acbd21063ecc329966db01', '66acbe9d87b37e9a46ed0a2d'],\n    description: 'Danh sách ID của các permission (chưa có thì để [])',\n    required: true,\n  })\n  @IsArray({ message: 'Permissions phải là kiểu Array' })\n  @IsMongoId({ each: true, message: 'Permission phải là kiểu ObjectId' })\n  @IsNotEmpty({ message: 'Permission không được bỏ trống' })\n  permissions: string[];\n\n  @ApiProperty({\n    example: false,\n    description: 'Trạng thái của vai trò',\n    required: true,\n  })\n  @IsBoolean({ message: 'Trạng thái phải là kiểu Boolean' })\n  @IsNotEmpty({ message: 'Trạng thái không được bỏ trống' })\n  isActive: boolean;\n\n  @ApiProperty({\n    example: 'Đây là vai trò của ABCXYZ',\n    description: 'Mô tả của vai trò',\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Mô tả phải là kiểu String' })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                fullname\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                roleId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'Sư Vạn Hạnh, Q.10, TPHCM', description: 'Địa chỉ của người dùng', required: false})@IsOptional()@IsString({message: 'Địa chỉ phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/dto/create-user.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'example@gmail.com', description: 'Email của người dùng', required: true})@IsEmail({}, {message: 'Vui lòng nhập đúng định email'})@IsNotEmpty({message: 'Email không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        fullname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'Nguyễn Văn A', description: 'Tên của người dùng', required: true})@IsNotEmpty({message: 'Tên người dùng không được bỏ trống'})@IsString({message: 'Tên người dùng phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/dto/create-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'Example123@', description: 'Mật khẩu của người dùng', required: true})@IsNotEmpty({message: 'Mật khẩu không được bỏ trống'})@IsString({message: 'Mật khẩu phải là kiểu String'})@IsStrongPassword({minLength: 8, minLowercase: 1, minNumbers: 1, minSymbols: 1, minUppercase: 1}, {message: 'Mật khẩu tối thiểu 8 ký tự và bao gồm các ký tự in hoa, số và 1 ký tự đặc biệt'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/dto/create-user.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: '66acad58fc32612044cf6d0d', description: 'ID của vai trò', required: true})@IsNotEmpty({message: 'Role không được bỏ trống'})@IsMongoId({message: 'Role phải là kiểu MongoId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/dto/create-user.dto.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsStrongPassword,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    type: String,\n    example: 'example@gmail.com',\n    description: 'Email của người dùng',\n    required: true,\n  })\n  @IsEmail({}, { message: 'Vui lòng nhập đúng định email' })\n  @IsNotEmpty({ message: 'Email không được bỏ trống' })\n  email: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'Example123@',\n    description: 'Mật khẩu của người dùng',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Mật khẩu không được bỏ trống' })\n  @IsString({ message: 'Mật khẩu phải là kiểu String' })\n  @IsStrongPassword(\n    {\n      minLength: 8,\n      minLowercase: 1,\n      minNumbers: 1,\n      minSymbols: 1,\n      minUppercase: 1,\n    },\n    {\n      message: 'Mật khẩu tối thiểu 8 ký tự và bao gồm các ký tự in hoa, số và 1 ký tự đặc biệt',\n    },\n  )\n  password: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'Nguyễn Văn A',\n    description: 'Tên của người dùng',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Tên người dùng không được bỏ trống' })\n  @IsString({ message: 'Tên người dùng phải là kiểu String' })\n  fullname: string;\n\n  @ApiProperty({\n    type: String,\n    example: '66acad58fc32612044cf6d0d',\n    description: 'ID của vai trò',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Role không được bỏ trống' })\n  @IsMongoId({ message: 'Role phải là kiểu MongoId' })\n  roleId: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'Sư Vạn Hạnh, Q.10, TPHCM',\n    description: 'Địa chỉ của người dùng',\n    required: false,\n  })\n  @IsOptional()\n  @IsString({ message: 'Địa chỉ phải là kiểu String' })\n  address?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabaseController.html":{"url":"controllers/DatabaseController.html","title":"controller - DatabaseController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/database.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                database\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabaseService } from './database.service';\n\n@Controller('database')\nexport class DatabaseController {\n  constructor(private readonly databaseService: DatabaseService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_providers\n\n\n\n\nDatabaseService\n\nDatabaseService\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDatabaseModule -->\n\nDatabaseService->DatabaseModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nDatabaseModule -->\n\nRolesService->DatabaseModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabaseModule -->\n\nUsersService->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabaseService\n                        \n                        \n                            RolesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabaseController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseService } from './database.service';\nimport { DatabaseController } from './database.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from 'src/models/roles/schemas/role.schema';\nimport { User, UserSchema } from 'src/models/users/schemas/user.schema';\nimport { Permission, PermissionSchema } from 'src/models/permissions/schemas/permission.schema';\nimport { UsersService } from 'src/models/users/users.service';\nimport { RolesService } from 'src/models/roles/roles.service';\n\n@Module({\n  controllers: [DatabaseController],\n  providers: [DatabaseService, UsersService, RolesService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: Role.name, schema: RoleSchema },\n      { name: User.name, schema: UserSchema },\n      { name: Permission.name, schema: PermissionSchema },\n    ]),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/database.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel, userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/database/database.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/database.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabaseService.name)\n                    \n                \n                    \n                        \n                                Defined in src/database/database.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Permission, PermissionDocument } from 'src/models/permissions/schemas/permission.schema';\nimport { Role, RoleDocument } from 'src/models/roles/schemas/role.schema';\nimport { User, UserDocument } from 'src/models/users/schemas/user.schema';\nimport { UsersService } from 'src/models/users/users.service';\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './master-data';\n\n@Injectable()\nexport class DatabaseService implements OnModuleInit {\n  private readonly logger = new Logger(DatabaseService.name);\n\n  constructor(\n    @InjectModel(Role.name) private roleModel: SoftDeleteModel,\n    @InjectModel(User.name) private userModel: SoftDeleteModel,\n    @InjectModel(Permission.name) private permissionModel: SoftDeleteModel,\n    private configService: ConfigService,\n    private userService: UsersService,\n  ) {}\n\n  async onModuleInit() {\n    const isInit = this.configService.get('HAS_INIT') === 'true' ? true : false;\n\n    if (isInit) {\n      const countPermission = await this.permissionModel.countDocuments({});\n      const countRole = await this.roleModel.countDocuments({});\n      const countUser = await this.userModel.countDocuments({});\n\n      if (countPermission === 0) await this.permissionModel.insertMany(INIT_PERMISSIONS);\n\n      if (countRole === 0) {\n        const permissions = await this.permissionModel.find({}).select('_id');\n        await this.roleModel.insertMany([\n          {\n            name: ADMIN_ROLE,\n            description: 'Admin full quyền',\n            isActive: true,\n            permissions: permissions,\n          },\n          {\n            name: USER_ROLE,\n            description: 'USER không có quyền',\n            isActive: true,\n            permissions: [\n              '66b1a082dceab9ffa83859b2',\n              '66b1a0f083f52957f939db71',\n              '648ab750fa16b294212e404c',\n              '66b48f8f40dcef39a3b69366',\n              '648ad4fedafdb9754f40b863',\n              '648ad511dafdb9754f40b868',\n              '648ad522dafdb9754f40b86d',\n              '648ad53bdafdb9754f40b872',\n              '66b23378479f3a391f6de1d1',\n              '648ad56ddafdb9754f40b87c',\n              '66b1907d501d62fae994efde',\n              '66b191a1f6b6fb427a86fbcf',\n              '66b191a9ec8b8a81d95f0529',\n              '66b191af653fc6a655b6bfb5',\n              '66b192b2cf1438d644e4b1d8',\n              '66b192dba213d537f77e9de5',\n              '66b192ece8ba550a7158c94a',\n              '66b1934e8101f94033fdd60d',\n              '66b1936b1d011920962d999c',\n              '66b1937104add905a56447d8',\n            ],\n          },\n        ]);\n      }\n\n      if (countUser === 0) {\n        const roleAdmin = await this.roleModel.findOne({ name: ADMIN_ROLE });\n        const roleUser = await this.roleModel.findOne({ name: USER_ROLE });\n        const adminEmail = this.configService.get('ADMIN_EMAIL');\n        const adminPassword = this.configService.get('ADMIN_PASSWORD');\n        const password = await this.userService.getHashPassword(adminPassword);\n\n        await this.userModel.insertMany([\n          {\n            email: 'user@gmail.com',\n            password: password,\n            fullname: 'Người dùng',\n            address: 'TPHCM',\n            role: roleUser._id,\n          },\n          {\n            email: adminEmail,\n            password: password,\n            fullname: 'Quản trị viên',\n            address: 'TPHCM',\n            role: roleAdmin._id,\n          },\n        ]);\n\n        this.logger.log('Init Data Success');\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileUploadDto.html":{"url":"classes/FileUploadDto.html","title":"class - FileUploadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileUploadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/files/dto/file-upload.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Express.Multer.File\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary'})@IsNotEmpty({message: 'Không có file để upload'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/files/dto/file-upload.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiConsumes, ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  @IsNotEmpty({ message: 'Không có file để upload' })\n  file: Express.Multer.File;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(fileName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':fileName')@ResponseMessage('Xóa hình ảnh')\n                \n            \n\n                    \n                        \n                            Defined in src/models/files/files.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@ApiConsumes('multipart/form-data')@ApiBody({description: 'Upload hình ảnh', type: FileUploadDto})@ResponseMessage('Upload hình ảnh')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/models/files/files.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Param, Post, UploadedFile, UseInterceptors } from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express/multer';\nimport { ApiBody, ApiConsumes, ApiTags } from '@nestjs/swagger';\nimport { ResponseMessage } from 'src/common/decorators/response.decorator';\nimport { deleteFileFromDiskStorage, multerOptions } from 'src/config/multer.config';\nimport { FileUploadDto } from './dto/file-upload.dto';\n\n@ApiTags('files')\n@Controller('files')\nexport class FilesController {\n  @Post('upload')\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    description: 'Upload hình ảnh',\n    type: FileUploadDto,\n  })\n  @ResponseMessage('Upload hình ảnh')\n  @UseInterceptors(FileInterceptor('file', multerOptions))\n  async upload(\n    @UploadedFile()\n    file: Express.Multer.File,\n  ) {\n    return file.filename;\n  }\n\n  @Delete(':fileName')\n  @ResponseMessage('Xóa hình ảnh')\n  delete(@Param('fileName') fileName: string) {\n    return deleteFileFromDiskStorage(fileName);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\n\n@Module({\n  controllers: [FilesController],\n  providers: [FilesService],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/files/files.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class FilesService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            fullname\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import mongoose from 'mongoose';\n\nexport interface IUser {\n  _id: string;\n  email: string;\n  password: string;\n  fullname: string;\n  address?: string;\n  role?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtAuthGuard.html":{"url":"classes/JwtAuthGuard.html","title":"class - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt-auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext, ForbiddenException, UnauthorizedException } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { IS_PUBLIC_KEY } from '../auth.decorator';\nimport { CUSTOM_MESSAGES } from 'src/common/enums/custom-messages.enum';\n\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (isPublic) return true;\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info, context: ExecutionContext) {\n    const request: Request = context.switchToHttp().getRequest();\n\n    if (err || !user) {\n      throw err || new UnauthorizedException('Token không hợp lệ');\n    }\n\n    const targetMethod = request.method;\n    const targetEndpoint = request.route?.path as string;\n\n    const permissions = user.permissions ?? [];\n\n    const isExistPermission = permissions.find(\n      permission => permission.apiPath === targetEndpoint && permission.method === targetMethod,\n    );\n\n    if (!isExistPermission) throw new ForbiddenException(CUSTOM_MESSAGES.FORBIDDEN);\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtStrategy.html":{"url":"classes/JwtStrategy.html","title":"class - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt.strategy.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt } from 'passport-jwt';\nimport { Strategy } from 'passport-jwt';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport { RolesService } from 'src/models/roles/roles.service';\n\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @Inject(ConfigService) protected configService: ConfigService,\n    private readonly rolesService: RolesService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n    });\n  }\n\n  async validate(payload: IUser) {\n    const role = (await this.rolesService.findOne(payload.role))?.toObject();\n\n    return { ...payload, permissions: role?.permissions };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/local.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from '../auth.service';\nimport { CUSTOM_MESSAGES } from 'src/common/enums/custom-messages.enum';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'email',\n      passwordField: 'password',\n    });\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n\n    if (!user) {\n      throw new UnauthorizedException(CUSTOM_MESSAGES.UNAUTHORIZED_TOKEN);\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/users/dto/login-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PickType(CreateUserDto, ['email', 'password'] as const)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class LoginUserDto extends PickType(CreateUserDto, ['email', 'password'] as const) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/orders/schemas/order.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                coupon\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                customer_full_name\n                            \n                            \n                                    \n                                customer_phone_number\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                discount_amount\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                note\n                            \n                            \n                                    \n                                order_status\n                            \n                            \n                                    \n                                payment_method\n                            \n                            \n                                    \n                                payment_status\n                            \n                            \n                                    \n                                shipping_address\n                            \n                            \n                                    \n                                shipping_cost\n                            \n                            \n                                    \n                                tax_amount\n                            \n                            \n                                    \n                                total_amount\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        coupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customer_full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customer_phone_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount_amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payment_method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payment_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shipping_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shipping_cost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tax_amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        total_amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/schemas/order.schema.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Product } from 'src/models/products/schemas/product.schema';\nimport { User } from 'src/models/users/schemas/user.schema';\n\nexport type OrderDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Order {\n  @Prop({ type: mongoose.Schema.Types.ObjectId, required: true, ref: User.name })\n  user: User;\n\n  @Prop({\n    type: [\n      {\n        product: { type: mongoose.Schema.Types.ObjectId, ref: 'Product', required: true },\n        quantity: { type: Number, required: true },\n        price: { type: Number, required: true },\n        color: { type: String, required: true },\n        size: { type: String, required: true },\n      },\n    ],\n    default: [],\n  })\n  items: {\n    product: Product;\n    quantity: number;\n    price: number;\n    color: string;\n    size: string;\n  }[];\n\n  @Prop({ required: true })\n  customer_full_name: string;\n\n  @Prop({ required: true })\n  customer_phone_number: string;\n\n  @Prop({ required: true })\n  order_status: string;\n\n  @Prop({ required: true })\n  payment_method: string;\n\n  @Prop({ required: true })\n  payment_status: string;\n\n  @Prop({ default: null })\n  coupon: string;\n\n  @Prop({ default: 0 })\n  discount_amount: number;\n\n  @Prop({ required: true })\n  shipping_address: string;\n\n  @Prop({ required: true })\n  shipping_cost: number;\n\n  @Prop({ required: true })\n  tax_amount: number;\n\n  @Prop({ required: true })\n  total_amount: number;\n\n  @Prop({ default: null })\n  note: string;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const OrderSchema = SchemaFactory.createForClass(Order);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderSummary.html":{"url":"interfaces/OrderSummary.html","title":"interface - OrderSummary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderSummary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/order-summary.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            discountAmount\n                                        \n                                \n                                \n                                        \n                                            itemCount\n                                        \n                                \n                                \n                                        \n                                            shippingCost\n                                        \n                                \n                                \n                                        \n                                            subTotal\n                                        \n                                \n                                \n                                        \n                                            taxAmount\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        discountAmount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        discountAmount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shippingCost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shippingCost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subTotal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subTotal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taxAmount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taxAmount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrderSummary {\n  itemCount: number;\n  subTotal: number;\n  shippingCost: number;\n  discountAmount: number;\n  taxAmount: number;\n  total: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/orders/orders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateOrderStatus\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updatePaymentStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createOrderDto: CreateOrderDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Tạo mới đơn hàng')\n                \n            \n\n                    \n                        \n                            Defined in src/models/orders/orders.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiQuery(API_PARAM_QUERY)@ResponseMessage('Lấy danh sách đơn hàng')\n                \n            \n\n                    \n                        \n                            Defined in src/models/orders/orders.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Lấy thông tin đơn hàng')\n                \n            \n\n                    \n                        \n                            Defined in src/models/orders/orders.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateOrderDto: UpdateOrderDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Cập nhật thông tin đơn hàng')\n                \n            \n\n                    \n                        \n                            Defined in src/models/orders/orders.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateOrderDto\n                                            \n                                                            UpdateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateOrderStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOrderStatus(id: string, updateOrderStatusDto: UpdateOrderStatusDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/status')@ResponseMessage('Cập nhật trạng thái đơn hàng')\n                \n            \n\n                    \n                        \n                            Defined in src/models/orders/orders.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateOrderStatusDto\n                                            \n                                                            UpdateOrderStatusDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updatePaymentStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePaymentStatus(id: string, updatePaymentStatusDto: UpdatePaymentStatusDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/payment-status')@ResponseMessage('Cập nhật trạng thái thanh toán')\n                \n            \n\n                    \n                        \n                            Defined in src/models/orders/orders.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePaymentStatusDto\n                                            \n                                                            UpdatePaymentStatusDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Query } from '@nestjs/common';\nimport { OrdersService } from './orders.service';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { UpdateOrderDto } from './dto/update-order.dto';\nimport { User } from 'src/common/decorators/user.decorator';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport { ValidateObjectIdPipe } from 'src/common/pipes/validate_object_id.pipe';\nimport { ApiTags, ApiQuery } from '@nestjs/swagger';\nimport { ResponseMessage } from 'src/common/decorators/response.decorator';\nimport { API_PARAM_QUERY } from 'src/common/constants/constants';\nimport { UpdateOrderStatusDto } from './dto/update-order-status.dto';\nimport { UpdatePaymentStatusDto } from './dto/update-payment-status.dto';\n\n@ApiTags('orders')\n@Controller('orders')\nexport class OrdersController {\n  constructor(private readonly ordersService: OrdersService) {}\n\n  @Post()\n  @ResponseMessage('Tạo mới đơn hàng')\n  async create(@Body() createOrderDto: CreateOrderDto, @User() user: IUser) {\n    return await this.ordersService.create(createOrderDto, user);\n  }\n\n  @Get()\n  @ApiQuery(API_PARAM_QUERY)\n  @ResponseMessage('Lấy danh sách đơn hàng')\n  findAll(@Query('qs') qs: string) {\n    return this.ordersService.findAll(qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Lấy thông tin đơn hàng')\n  async findOne(@Param('id', ValidateObjectIdPipe) id: string) {\n    return await this.ordersService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Cập nhật thông tin đơn hàng')\n  update(\n    @Param('id', ValidateObjectIdPipe) id: string,\n    @Body() updateOrderDto: UpdateOrderDto,\n    @User() user: IUser,\n  ) {\n    return this.ordersService.update(id, updateOrderDto, user);\n  }\n\n  @Patch(':id/status')\n  @ResponseMessage('Cập nhật trạng thái đơn hàng')\n  async updateOrderStatus(\n    @Param('id', ValidateObjectIdPipe) id: string,\n    @Body() updateOrderStatusDto: UpdateOrderStatusDto,\n  ) {\n    return await this.ordersService.updateOrderStatus(id, updateOrderStatusDto);\n  }\n\n  @Patch(':id/payment-status')\n  @ResponseMessage('Cập nhật trạng thái thanh toán')\n  async updatePaymentStatus(\n    @Param('id', ValidateObjectIdPipe) id: string,\n    @Body() updatePaymentStatusDto: UpdatePaymentStatusDto,\n  ) {\n    return await this.ordersService.updatePaymentStatus(id, updatePaymentStatusDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_OrdersModule_imports\n\n\n\ncluster_OrdersModule_exports\n\n\n\n\nCartsModule\n\nCartsModule\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nCartsModule->OrdersModule\n\n\n\n\n\nOrdersService \n\nOrdersService \n\nOrdersService  -->\n\nOrdersModule->OrdersService \n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/orders/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CartsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrdersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrdersService } from './orders.service';\nimport { OrdersController } from './orders.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Order, OrderSchema } from './schemas/order.schema';\nimport { CartsModule } from '../carts/carts.module';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Order.name, schema: OrderSchema }]), CartsModule],\n  controllers: [OrdersController],\n  providers: [OrdersService],\n  exports: [OrdersService],\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/orders/orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                formatOrderResponse\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateOrderStatus\n                            \n                            \n                                    Async\n                                updatePaymentStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderModel: SoftDeleteModel, cartService: CartsService)\n                    \n                \n                        \n                            \n                                Defined in src/models/orders/orders.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createOrderDto: CreateOrderDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/orders/orders.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/orders/orders.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/orders/orders.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formatOrderResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    formatOrderResponse(order: Order)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/orders/orders.service.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                order\n                                            \n                                                            Order\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateOrderDto: UpdateOrderDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/orders/orders.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateOrderDto\n                                            \n                                                            UpdateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOrderStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOrderStatus(id: string, updateOrderStatusDto: UpdateOrderStatusDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/orders/orders.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateOrderStatusDto\n                                            \n                                                            UpdateOrderStatusDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updatePaymentStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePaymentStatus(id: string, updatePaymentStatusDto: UpdatePaymentStatusDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/orders/orders.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePaymentStatusDto\n                                            \n                                                            UpdatePaymentStatusDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { UpdateOrderDto } from './dto/update-order.dto';\nimport { Order, OrderDocument } from './schemas/order.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { AddressesService } from '../addresses/addresses.service';\nimport aqp from 'api-query-params';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport { CartsService } from '../carts/carts.service';\nimport { OrderStatus } from 'src/common/enums/status.enum';\nimport { PaymentStatus } from 'src/common/enums/enums';\nimport { CUSTOM_MESSAGES } from 'src/common/enums/custom-messages.enum';\nimport { Document } from 'mongoose';\nimport { Utils } from 'src/utils/utils';\nimport { UpdateOrderStatusDto } from './dto/update-order-status.dto';\nimport { OrderStatusTransitions, PaymentStatusTransitions } from 'src/common/constants/constants';\nimport { UpdatePaymentStatusDto } from './dto/update-payment-status.dto';\n\n@Injectable()\nexport class OrdersService {\n  constructor(\n    @InjectModel(Order.name) private orderModel: SoftDeleteModel,\n    private readonly cartService: CartsService,\n  ) {}\n\n  async create(createOrderDto: CreateOrderDto, user: IUser) {\n    const { cartId, payment_method, note } = createOrderDto;\n    const cart = await this.cartService.findOne(cartId);\n    const { shipping_address, coupon, orderSummary, items } = cart;\n\n    const order = await this.orderModel.create({\n      user: user._id,\n      items: items.map(item => ({\n        product: item.productId,\n        quantity: item.quantity,\n        price: item.price,\n        color: item.color,\n        size: item.size,\n      })),\n      customer_full_name: shipping_address.fullName,\n      customer_phone_number: shipping_address.phoneNumber,\n      order_status: OrderStatus.Pending,\n      payment_method: payment_method,\n      payment_status: PaymentStatus.Pending,\n      coupon: coupon,\n      discount_amount: orderSummary.discountAmount,\n      shipping_address: shipping_address.streetAddress + ', ' + shipping_address.province,\n      shipping_cost: orderSummary.shippingCost,\n      tax_amount: orderSummary.taxAmount,\n      total_amount: orderSummary.total,\n      note: note,\n    });\n\n    return this.formatOrderResponse(order);\n  }\n\n  async findAll(query: string) {\n    const { filter, sort, population } = aqp(query);\n    const current = +filter.current;\n    const pageSize = +filter.pageSize;\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (current - 1) * pageSize;\n    let limit = pageSize ? pageSize : 10;\n\n    const totalItems = (await this.orderModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / limit);\n    const defaultSort = sort ? (sort as unknown as string) : '-createdAt';\n\n    const orders = await this.orderModel\n      .find(filter)\n      .skip(offset)\n      .limit(limit)\n      .sort(defaultSort)\n      .populate(population)\n      .populate('items.product');\n\n    const result = orders.map(order => this.formatOrderResponse(order));\n\n    return {\n      meta: {\n        current,\n        pageSize,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    const order = await this.orderModel.findById(id).populate('items.product');\n    if (!order) {\n      throw new NotFoundException(CUSTOM_MESSAGES.ORDER_NOT_EXIST);\n    }\n    return this.formatOrderResponse(order);\n  }\n\n  async update(id: string, updateOrderDto: UpdateOrderDto, user: IUser) {\n    const order = await this.orderModel.findById(id).populate('items.product');\n    if (!order) throw new NotFoundException(CUSTOM_MESSAGES.ORDER_NOT_EXIST);\n\n    if (order.order_status !== OrderStatus.Pending) {\n      throw new BadRequestException(CUSTOM_MESSAGES.ORDER_CANNOT_UPDATE);\n    }\n\n    const changes = Utils.getDataChange(updateOrderDto, order.toObject());\n\n    if (changes) {\n      const newOrder = await this.orderModel\n        .findOneAndUpdate(\n          { _id: id },\n          {\n            ...updateOrderDto,\n            updatedBy: {\n              _id: user._id,\n              email: user.email,\n            },\n          },\n          { new: true },\n        )\n        .populate('items.product');\n      return this.formatOrderResponse(newOrder);\n    }\n\n    return null;\n  }\n\n  async updateOrderStatus(id: string, updateOrderStatusDto: UpdateOrderStatusDto) {\n    const { order_status } = updateOrderStatusDto;\n    const order = await this.orderModel.findById(id);\n    if (!order) {\n      throw new NotFoundException(CUSTOM_MESSAGES.ORDER_NOT_EXIST);\n    }\n\n    const currentStatus = order.order_status;\n    const validNewStatuses = OrderStatusTransitions[currentStatus];\n    if (!validNewStatuses || !validNewStatuses.includes(order_status)) {\n      throw new BadRequestException(CUSTOM_MESSAGES.ORDER_STATUS_INVALID);\n    }\n\n    const newOrder = await this.orderModel\n      .findOneAndUpdate({ _id: id }, { order_status }, { new: true })\n      .populate('items.product');\n    return this.formatOrderResponse(newOrder);\n  }\n\n  async updatePaymentStatus(id: string, updatePaymentStatusDto: UpdatePaymentStatusDto) {\n    const { payment_status } = updatePaymentStatusDto;\n    const order = await this.orderModel.findById(id);\n    if (!order) {\n      throw new NotFoundException(CUSTOM_MESSAGES.ORDER_NOT_EXIST);\n    }\n\n    const currentStatus = order.payment_status;\n    const validNewStatuses = PaymentStatusTransitions[currentStatus];\n    if (!validNewStatuses || !validNewStatuses.includes(payment_status)) {\n      throw new BadRequestException(CUSTOM_MESSAGES.ORDER_STATUS_INVALID);\n    }\n\n    const newOrder = await this.orderModel\n      .findOneAndUpdate({ _id: id }, { payment_status }, { new: true })\n      .populate('items.product');\n    return this.formatOrderResponse(newOrder);\n  }\n\n  private formatOrderResponse(order: Order) {\n    const { items, ...rest } = (order as unknown as Document).toObject();\n    const itemsResponse = this.cartService.formatItemsResponse(order.items);\n\n    return {\n      items: itemsResponse,\n      ...rest,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/permissions/schemas/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/permissions/schemas/permission.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/permissions/schemas/permission.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/permissions/schemas/permission.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/permissions/schemas/permission.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/permissions/schemas/permission.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/permissions/schemas/permission.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/permissions/schemas/permission.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/permissions/schemas/permission.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/permissions/schemas/permission.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/permissions/schemas/permission.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/permissions/schemas/permission.schema.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\"\nimport mongoose, { HydratedDocument } from \"mongoose\";\n\nexport type PermissionDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Permission {\n    @Prop()\n    name: string;\n\n    @Prop()\n    apiPath: string;\n\n    @Prop()\n    method: string;\n\n    @Prop()\n    module: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId,\n        email: string\n    };\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId,\n        email: string\n    };\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId,\n        email: string\n    };\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const PermissionSchema = SchemaFactory.createForClass(Permission);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Tạo mới một quyền')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/models/permissions/permissions.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiParam({name: 'qs', required: false, type: String, example: 'current=1&pageSize=2&method=GET&sort=createdAt', description: 'Build  query string để thực hiện phân trang, tìm kiếm, sắp xếp'})@ResponseMessage('Lấy danh sách tất cả quyền')@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/models/permissions/permissions.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Lấy thông tin của quyền')@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/models/permissions/permissions.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Xóa một quyền')@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/models/permissions/permissions.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Cập nhật một quyền')@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/models/permissions/permissions.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { ResponseMessage } from 'src/common/decorators/response.decorator';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport { User } from 'src/common/decorators/user.decorator';\nimport { ValidateObjectIdPipe } from 'src/common/pipes/validate_object_id.pipe';\nimport { ApiParam, ApiQuery, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('permissions')\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) {}\n\n  @ResponseMessage('Tạo mới một quyền')\n  @Post()\n  async create(@Body() createPermissionDto: CreatePermissionDto, @User() user: IUser) {\n    return await this.permissionsService.create(createPermissionDto, user);\n  }\n\n  @ApiParam({\n    name: 'qs',\n    required: false,\n    type: String,\n    example: 'current=1&pageSize=2&method=GET&sort=createdAt',\n    description: 'Build  query string để thực hiện phân trang, tìm kiếm, sắp xếp',\n  })\n  @ResponseMessage('Lấy danh sách tất cả quyền')\n  @Get()\n  async findAll(@Query() queryString: string) {\n    return await this.permissionsService.findAll(queryString);\n  }\n\n  @ResponseMessage('Lấy thông tin của quyền')\n  @Get(':id')\n  async findOne(@Param('id', ValidateObjectIdPipe) id: string) {\n    return await this.permissionsService.findOne(id);\n  }\n\n  @ResponseMessage('Cập nhật một quyền')\n  @Patch(':id')\n  async update(\n    @Param('id', ValidateObjectIdPipe) id: string,\n    @Body() updatePermissionDto: UpdatePermissionDto,\n    @User() user: IUser,\n  ) {\n    return await this.permissionsService.update(id, updatePermissionDto, user);\n  }\n\n  @ResponseMessage('Xóa một quyền')\n  @Delete(':id')\n  async remove(@Param('id', ValidateObjectIdPipe) id: string, @User() user: IUser) {\n    return await this.permissionsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_exports\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService \n\nPermissionsService \n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsService  -->\n\nPermissionsModule->PermissionsService \n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Permission, PermissionSchema } from './schemas/permission.schema';\nimport { RolesModule } from '../roles/roles.module';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Permission.name, schema: PermissionSchema }])],\n  controllers: [PermissionsController],\n  providers: [PermissionsService],\n  exports: [PermissionsService],\n})\nexport class PermissionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkExistPermissions\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/models/permissions/permissions.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkExistPermissions\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkExistPermissions(permissions: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/permissions/permissions.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                permissions\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/permissions/permissions.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/permissions/permissions.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/permissions/permissions.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/permissions/permissions.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/permissions/permissions.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Permission, PermissionDocument } from './schemas/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport aqp from 'api-query-params';\nimport { CUSTOM_MESSAGES } from 'src/common/enums/custom-messages.enum';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n  ) {}\n\n  async create(createPermissionDto: CreatePermissionDto, user: IUser) {\n    const permission = await this.permissionModel.findOne({\n      apiPath: createPermissionDto.apiPath,\n      method: createPermissionDto.method,\n    });\n\n    if (permission) throw new BadRequestException(CUSTOM_MESSAGES.PERMISSION_EXIST);\n\n    let result = await this.permissionModel.create({\n      ...createPermissionDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n\n    return {\n      _id: result.id,\n      createdAt: result.createdAt,\n    };\n  }\n\n  async findAll(query: string) {\n    const { filter, sort, population, projection } = aqp(query);\n    const current = +filter.current;\n    const pageSize = +filter.pageSize;\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (current - 1) * pageSize;\n    let limit = pageSize ? pageSize : 10;\n\n    const totalItems = (await this.permissionModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / limit);\n\n    let defaultSort = sort ? (sort as unknown as string) : '-updatedAt';\n\n    const result = await this.permissionModel\n      .find(filter)\n      .skip(offset)\n      .limit(limit)\n      .sort(defaultSort)\n      .populate(population);\n\n    return {\n      meta: {\n        current: current,\n        pageSize: pageSize,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(_id: string) {\n    return await this.permissionModel.findById(_id);\n  }\n\n  async update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser) {\n    return await this.permissionModel.updateOne(\n      { _id: id },\n      {\n        ...updatePermissionDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.permissionModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n\n    return await this.permissionModel.softDelete({ _id: id });\n  }\n\n  async checkExistPermissions(permissions: string[]): Promise {\n    return permissions.filter(\n      async permission => !(await this.permissionModel.findOne({ _id: permission })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/products/schemas/product.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                care_instructions\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                colors\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                fabric\n                            \n                            \n                                    \n                                images\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                sizes\n                            \n                            \n                                    \n                                sku\n                            \n                            \n                                    \n                                stock\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        care_instructions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        colors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fabric\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop(['String'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sizes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sku\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/products/schemas/product.schema.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Category } from 'src/models/categories/schemas/category.schema';\n\nexport type ProductDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Product {\n  @Prop({ required: true, unique: true })\n  sku: string;\n\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ required: true })\n  price: number;\n\n  @Prop({ required: true })\n  stock: number;\n\n  @Prop({ type: [String], required: true, default: [] })\n  colors: string[];\n\n  @Prop({ type: [String], required: true, default: [] })\n  sizes: string[];\n\n  @Prop([String])\n  images: string[];\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Category.name, required: true })\n  category: Category;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  fabric: string;\n\n  @Prop()\n  care_instructions: string;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const ProductSchema = SchemaFactory.createForClass(Product);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductExistsRule.html":{"url":"injectables/ProductExistsRule.html","title":"injectable - ProductExistsRule","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductExistsRule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validators/product-exists.rule.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/common/validators/product-exists.rule.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/validators/product-exists.rule.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/validators/product-exists.rule.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport { CUSTOM_MESSAGES } from '../enums/custom-messages.enum';\nimport { ProductsService } from 'src/models/products/products.service';\n\n@ValidatorConstraint({ name: 'CartExists', async: true })\n@Injectable()\nexport class ProductExistsRule implements ValidatorConstraintInterface {\n  constructor(private productsService: ProductsService) {}\n\n  async validate(id: string) {\n    try {\n      return (await this.productsService.findOne(id)) ? true : false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    return `ID ${args.value} sản phẩm không tồn tại`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Tạo mới sản phẩm')\n                \n            \n\n                    \n                        \n                            Defined in src/models/products/products.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ApiQuery(API_PARAM_QUERY)@ResponseMessage('Lấy danh sách sản phẩm')\n                \n            \n\n                    \n                        \n                            Defined in src/models/products/products.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()@ResponseMessage('Lấy thông tin sản phẩm')\n                \n            \n\n                    \n                        \n                            Defined in src/models/products/products.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Xóa sản phẩm')\n                \n            \n\n                    \n                        \n                            Defined in src/models/products/products.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updateProductDto: UpdateProductDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Cập nhật sản phẩm')\n                \n            \n\n                    \n                        \n                            Defined in src/models/products/products.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query, Version } from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { User } from 'src/common/decorators/user.decorator';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport { Product } from './schemas/product.schema';\nimport { ValidateObjectIdPipe } from 'src/common/pipes/validate_object_id.pipe';\nimport { Public } from 'src/auth/auth.decorator';\nimport { ApiTags, ApiQuery } from '@nestjs/swagger';\nimport { ResponseMessage } from 'src/common/decorators/response.decorator';\nimport { API_PARAM_QUERY } from 'src/common/constants/constants';\n\n@ApiTags('products')\n@Controller('products')\nexport class ProductsController {\n  constructor(private readonly productsService: ProductsService) {}\n\n  @Post()\n  @ResponseMessage('Tạo mới sản phẩm')\n  async create(@Body() createProductDto: CreateProductDto, @User() user: IUser): Promise {\n    return await this.productsService.create(createProductDto, user);\n  }\n\n  @Get()\n  @Public()\n  @ApiQuery(API_PARAM_QUERY)\n  @ResponseMessage('Lấy danh sách sản phẩm')\n  async findAll(@Query('qs') qs: string) {\n    return await this.productsService.findAll(qs);\n  }\n\n  @Get(':id')\n  @Public()\n  @ResponseMessage('Lấy thông tin sản phẩm')\n  async findOne(@Param('id', ValidateObjectIdPipe) _id: string) {\n    return await this.productsService.findOne(_id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Cập nhật sản phẩm')\n  async update(\n    @Param('id', ValidateObjectIdPipe) _id: string,\n    @Body() updateProductDto: UpdateProductDto,\n    @User() user: IUser,\n  ) {\n    return await this.productsService.update(_id, updateProductDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Xóa sản phẩm')\n  remove(@Param('id', ValidateObjectIdPipe) _id: string, @User() user: IUser) {\n    return this.productsService.remove(_id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ProductsModule_exports\n\n\n\n\nProductsService \n\nProductsService \n\n\n\nProductsModule\n\nProductsModule\n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { ProductsController } from './products.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Product, ProductSchema } from './schemas/product.schema';\nimport { ReviewsModule } from '../reviews/reviews.module';\nimport { CategoriesModule } from '../categories/categories.module';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Product.name, schema: ProductSchema }])],\n  controllers: [ProductsController],\n  providers: [ProductsService],\n  exports: [ProductsService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                categoriesService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByCategoryId\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getProductIfValid\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productModel: SoftDeleteModel, moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/models/products/products.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/products/products.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/products/products.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByCategoryId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCategoryId(categoryId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/products/products.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMany(ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/products/products.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/products/products.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProductIfValid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProductIfValid(productId: string, color: string, size: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/products/products.service.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                size\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/products/products.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/products/products.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updateProductDto: UpdateProductDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/products/products.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        categoriesService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoriesService\n\n                    \n                \n                    \n                        \n                                Defined in src/models/products/products.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException, OnModuleInit } from '@nestjs/common';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport { Product, ProductDocument } from './schemas/product.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport aqp from 'api-query-params';\nimport { CategoriesService } from '../categories/categories.service';\nimport { ModuleRef } from '@nestjs/core';\nimport { CUSTOM_MESSAGES } from 'src/common/enums/custom-messages.enum';\n\n@Injectable()\nexport class ProductsService implements OnModuleInit {\n  private categoriesService: CategoriesService;\n\n  constructor(\n    @InjectModel(Product.name) private productModel: SoftDeleteModel,\n    private moduleRef: ModuleRef,\n  ) {}\n  onModuleInit() {\n    this.categoriesService = this.moduleRef.get(CategoriesService, { strict: false });\n  }\n\n  async create(createProductDto: CreateProductDto, user: IUser): Promise {\n    const { categoryId, ...productData } = createProductDto;\n\n    // Validate category\n    const isExistCategory = await this.categoriesService.findOne(categoryId);\n    if (!isExistCategory) {\n      throw new NotFoundException(CUSTOM_MESSAGES.CATEGORY_ID_NOT_EXIST);\n    }\n\n    // Validate product name\n    const isExistProduct = await this.productModel.findOne({\n      sku: productData.sku,\n    });\n    if (isExistProduct) {\n      throw new BadRequestException(CUSTOM_MESSAGES.PRODUCT_EXIST);\n    }\n\n    // Create product\n    const newProduct = await this.productModel.create({\n      ...productData,\n      category: categoryId,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n\n    return newProduct;\n  }\n\n  async findAll(query: string) {\n    const { filter, sort, population } = aqp(query);\n    const current = +filter.current || 1;\n    const pageSize = +filter.pageSize || 10;\n    delete filter.current;\n    delete filter.pageSize;\n\n    const offset = (current - 1) * pageSize;\n    const limit = pageSize;\n\n    const totalItems = await this.productModel.countDocuments(filter);\n    const totalPages = Math.ceil(totalItems / limit);\n    const defaultSort = sort ? (sort as unknown as string) : '-updatedAt';\n\n    const result = await this.productModel\n      .find(filter)\n      .skip(offset)\n      .limit(limit)\n      .sort(defaultSort)\n      .populate(population);\n\n    return {\n      meta: {\n        current,\n        pageSize,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    const product = await this.productModel.findOne({ _id: id });\n    return product;\n  }\n\n  async findMany(ids: string[]) {\n    return await this.productModel.find({ _id: { $in: ids } });\n  }\n\n  async findByCategoryId(categoryId: string) {\n    return await this.productModel.find({ category: categoryId });\n  }\n\n  async update(_id: string, updateProductDto: UpdateProductDto, user: IUser) {\n    const { categoryId, ...productData } = updateProductDto;\n\n    // Validate category\n    const isExistCategory = await this.categoriesService.findOne(categoryId);\n    if (!isExistCategory) {\n      throw new NotFoundException(CUSTOM_MESSAGES.CATEGORY_ID_NOT_EXIST);\n    }\n\n    // Update product\n    const updatedProduct = await this.productModel.updateOne(\n      { _id },\n      {\n        ...productData,\n        category: categoryId,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n\n    return updatedProduct;\n  }\n\n  async remove(_id: string, user: IUser) {\n    const product = await this.productModel.findOne({ _id });\n    if (!product) {\n      throw new NotFoundException(CUSTOM_MESSAGES.PRODUCT_EXIST);\n    }\n\n    await this.productModel.updateOne(\n      { _id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n\n    return await this.productModel.softDelete({ _id });\n  }\n\n  async getProductIfValid(productId: string, color: string, size: string) {\n    const product = (await this.productModel.findById(productId)).toObject();\n\n    if (!product.colors.includes(color)) {\n      throw new NotFoundException(CUSTOM_MESSAGES.COLOR_NOT_EXIST);\n    }\n\n    if (!product.sizes.includes(size)) {\n      throw new NotFoundException(CUSTOM_MESSAGES.SIZE_NOT_EXIST);\n    }\n\n    return product;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Promotion.html":{"url":"classes/Promotion.html","title":"class - Promotion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Promotion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/promotions/schemas/promotion.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                condition\n                            \n                            \n                                    \n                                coupon\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                discount_amount\n                            \n                            \n                                    \n                                discount_type\n                            \n                            \n                                    \n                                end_date\n                            \n                            \n                                    \n                                free_shipping\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                start_date\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        condition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/schemas/promotion.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        coupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({unique: true, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/schemas/promotion.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/schemas/promotion.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/schemas/promotion.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/schemas/promotion.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/schemas/promotion.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/schemas/promotion.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount_amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/schemas/promotion.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({enum: DiscountType, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/schemas/promotion.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        end_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/schemas/promotion.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        free_shipping\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/schemas/promotion.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/schemas/promotion.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        start_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/schemas/promotion.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({enum: CouponStatus, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/schemas/promotion.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/schemas/promotion.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/promotions/schemas/promotion.schema.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { Document } from 'mongoose';\nimport { CouponStatus, DiscountType } from 'src/common/enums/enums';\n\nexport type PromotionDocument = Promotion & Document;\n\n@Schema({ timestamps: true })\nexport class Promotion {\n  @Prop({ unique: true, required: true })\n  coupon: string;\n\n  @Prop({ enum: CouponStatus, required: true })\n  status: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({ type: Number, required: true })\n  discount_amount: number;\n\n  @Prop({ type: Boolean, required: true })\n  free_shipping: boolean;\n\n  @Prop({ enum: DiscountType, required: true })\n  discount_type: string;\n\n  @Prop({ type: Number, default: 0 })\n  condition: number; // Điều kiện là tổng giá trị đơn hàng - (Mở rộng: Minimum_purchase, Specific_products, Customer_group)\n\n  @Prop({ type: Date, required: true })\n  start_date: Date;\n\n  @Prop({ type: Date, required: true })\n  end_date: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const PromotionSchema = SchemaFactory.createForClass(Promotion);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PromotionsController.html":{"url":"controllers/PromotionsController.html","title":"controller - PromotionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PromotionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/promotions/promotions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                promotions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPromotionDto: CreatePromotionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Tạo mới mã giảm giá')\n                \n            \n\n                    \n                        \n                            Defined in src/models/promotions/promotions.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPromotionDto\n                                            \n                                                            CreatePromotionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ApiQuery(API_PARAM_QUERY)@ResponseMessage('Lấy danh sách mã giảm giá')\n                \n            \n\n                    \n                        \n                            Defined in src/models/promotions/promotions.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()@ResponseMessage('Lấy thông tin mã giảm giá')\n                \n            \n\n                    \n                        \n                            Defined in src/models/promotions/promotions.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Xóa mã giảm giá')\n                \n            \n\n                    \n                        \n                            Defined in src/models/promotions/promotions.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updatePromotionDto: UpdatePromotionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Cập nhật thông tin mã giảm giá')\n                \n            \n\n                    \n                        \n                            Defined in src/models/promotions/promotions.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePromotionDto\n                                            \n                                                            UpdatePromotionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n  BadRequestException,\n} from '@nestjs/common';\nimport { PromotionsService } from './promotions.service';\nimport { CreatePromotionDto } from './dto/create-promotion.dto';\nimport { UpdatePromotionDto } from './dto/update-promotion.dto';\nimport { User } from 'src/common/decorators/user.decorator';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport { ValidateObjectIdPipe } from 'src/common/pipes/validate_object_id.pipe';\nimport { ApiQuery, ApiTags } from '@nestjs/swagger';\nimport { ResponseMessage } from 'src/common/decorators/response.decorator';\nimport { Public } from 'src/auth/auth.decorator';\nimport { API_PARAM_QUERY } from 'src/common/constants/constants';\n\n@ApiTags('promotions')\n@Controller('promotions')\nexport class PromotionsController {\n  constructor(private readonly promotionsService: PromotionsService) {}\n\n  @Post()\n  @ResponseMessage('Tạo mới mã giảm giá')\n  async create(@Body() createPromotionDto: CreatePromotionDto, @User() user: IUser) {\n    return await this.promotionsService.create(createPromotionDto, user);\n  }\n\n  @Get()\n  @Public()\n  @ApiQuery(API_PARAM_QUERY)\n  @ResponseMessage('Lấy danh sách mã giảm giá')\n  async findAll(@Query('qs') qs: string) {\n    return await this.promotionsService.findAll(qs);\n  }\n\n  @Get(':id')\n  @Public()\n  @ResponseMessage('Lấy thông tin mã giảm giá')\n  async findOne(@Param('id', ValidateObjectIdPipe) _id: string) {\n    return await this.promotionsService.findOne(_id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Cập nhật thông tin mã giảm giá')\n  async update(\n    @Param('id', ValidateObjectIdPipe) _id: string,\n    @Body() updatePromotionDto: UpdatePromotionDto,\n    @User() user: IUser,\n  ) {\n    return await this.promotionsService.update(_id, updatePromotionDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Xóa mã giảm giá')\n  async remove(@Param('id', ValidateObjectIdPipe) _id: string, user: IUser) {\n    return await this.promotionsService.remove(_id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PromotionsModule.html":{"url":"modules/PromotionsModule.html","title":"module - PromotionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PromotionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PromotionsModule\n\n\n\ncluster_PromotionsModule_providers\n\n\n\ncluster_PromotionsModule_exports\n\n\n\n\nPromotionsService \n\nPromotionsService \n\n\n\nPromotionsModule\n\nPromotionsModule\n\nPromotionsService  -->\n\nPromotionsModule->PromotionsService \n\n\n\n\n\nPromotionsService\n\nPromotionsService\n\nPromotionsModule -->\n\nPromotionsService->PromotionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/promotions/promotions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PromotionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PromotionsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PromotionsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PromotionsService } from './promotions.service';\nimport { PromotionsController } from './promotions.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Promotion, PromotionSchema } from './schemas/promotion.schema';\nimport { OrdersModule } from '../orders/orders.module';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Promotion.name, schema: PromotionSchema }])],\n  controllers: [PromotionsController],\n  providers: [PromotionsService],\n  exports: [PromotionsService],\n})\nexport class PromotionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PromotionsService.html":{"url":"injectables/PromotionsService.html","title":"injectable - PromotionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PromotionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/promotions/promotions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calculateDiscountAmount\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getValidPromotion\n                            \n                            \n                                    Private\n                                isValidPromotion\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(promotionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/models/promotions/promotions.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promotionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateDiscountAmount\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateDiscountAmount(coupon: string | null, subTotal: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/promotions/promotions.service.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                coupon\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subTotal\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPromotionDto: CreatePromotionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/promotions/promotions.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPromotionDto\n                                            \n                                                            CreatePromotionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/promotions/promotions.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/promotions/promotions.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getValidPromotion\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValidPromotion(code: string, subTotal: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/promotions/promotions.service.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subTotal\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isValidPromotion\n                        \n                    \n                \n            \n            \n                \n                        \n                    isValidPromotion(subTotal: number, promotion: Promotion)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/promotions/promotions.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subTotal\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                promotion\n                                            \n                                                            Promotion\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/promotions/promotions.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePromotionDto: UpdatePromotionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/promotions/promotions.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePromotionDto\n                                            \n                                                            UpdatePromotionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreatePromotionDto } from './dto/create-promotion.dto';\nimport { UpdatePromotionDto } from './dto/update-promotion.dto';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Promotion, PromotionDocument } from './schemas/promotion.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport { CouponStatus, DiscountType } from 'src/common/enums/enums';\nimport { CUSTOM_MESSAGES } from 'src/common/enums/custom-messages.enum';\n\n@Injectable()\nexport class PromotionsService {\n  constructor(\n    @InjectModel(Promotion.name) private promotionModel: SoftDeleteModel,\n  ) {}\n\n  async create(createPromotionDto: CreatePromotionDto, user: IUser) {\n    const { coupon, start_date, end_date, discount_type, discount_amount, condition } =\n      createPromotionDto;\n    const isExist = await this.promotionModel.findOne({ coupon: coupon });\n    if (isExist) {\n      throw new BadRequestException(CUSTOM_MESSAGES.PROMOTION_EXIST);\n    }\n\n    if (start_date >= end_date) {\n      throw new BadRequestException(CUSTOM_MESSAGES.INVALID_DISCOUNT_DATE_RANGE);\n    }\n\n    if (discount_type === DiscountType.FIXED_AMOUNT && discount_amount  100)\n    ) {\n      throw new BadRequestException(CUSTOM_MESSAGES.INVALID_DISCOUNT_PERCENTAGE);\n    }\n\n    return await this.promotionModel.create({\n      ...createPromotionDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async findAll(query: string) {\n    const { filter, sort, population } = aqp(query);\n    const current = +filter.current;\n    const pageSize = +filter.pageSize;\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (current - 1) * pageSize;\n    let limit = pageSize ? pageSize : 10;\n\n    const totalItems = (await this.promotionModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / limit);\n    const defaultSort = sort ? (sort as unknown as string) : '-updatedAt';\n\n    const result = await this.promotionModel\n      .find(filter)\n      .skip(offset)\n      .limit(limit)\n      .sort(defaultSort)\n      .populate(population);\n\n    return {\n      meta: {\n        current: current,\n        pageSize: pageSize,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(_id: string) {\n    return await this.promotionModel.findById(_id);\n  }\n\n  async update(id: string, updatePromotionDto: UpdatePromotionDto, user: IUser) {\n    const { coupon, start_date, end_date, discount_type, discount_amount, condition } =\n      updatePromotionDto;\n\n    const promotion = await this.promotionModel.findOne({ _id: id });\n    if (!promotion) {\n      throw new BadRequestException(CUSTOM_MESSAGES.PROMOTION_NOT_EXIST);\n    }\n\n    if (coupon && coupon !== promotion.coupon) {\n      const isNameExist = await this.promotionModel.findOne({\n        coupon: coupon,\n      });\n      if (isNameExist) {\n        throw new BadRequestException(CUSTOM_MESSAGES.PROMOTION_EXIST);\n      }\n    }\n\n    if (start_date >= end_date) {\n      throw new BadRequestException(CUSTOM_MESSAGES.INVALID_DISCOUNT_DATE_RANGE);\n    }\n\n    if (discount_type === DiscountType.FIXED_AMOUNT && discount_amount  100)\n    ) {\n      throw new BadRequestException(CUSTOM_MESSAGES.INVALID_DISCOUNT_PERCENTAGE);\n    }\n\n    return await this.promotionModel.updateOne(\n      { _id: id },\n      {\n        ...updatePromotionDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    const promotion = await this.promotionModel.findOne({ _id: id });\n    if (!promotion) {\n      throw new BadRequestException(CUSTOM_MESSAGES.PROMOTION_NOT_EXIST);\n    }\n\n    await this.promotionModel.updateOne(\n      { id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return await this.promotionModel.softDelete({ id });\n  }\n\n  async getValidPromotion(code: string, subTotal: number) {\n    const promotion = await this.promotionModel.findOne({ coupon: code });\n\n    if (promotion) {\n      return this.isValidPromotion(subTotal, promotion) ? promotion : null;\n    } else {\n      throw new BadRequestException(CUSTOM_MESSAGES.PROMOTION_NOT_EXIST);\n    }\n  }\n\n  private isValidPromotion(subTotal: number, promotion: Promotion): boolean {\n    const now = new Date();\n\n    if (\n      now  promotion.end_date ||\n      !(promotion.status === CouponStatus.ACTIVE)\n    ) {\n      throw new BadRequestException(CUSTOM_MESSAGES.PROMOTION_EXPIRED);\n    }\n\n    if (promotion.condition && subTotal  {\n    if (!coupon) return 0;\n\n    const promotion = await this.promotionModel.findOne({ coupon: coupon });\n\n    return promotion.discount_type === DiscountType.FIXED_AMOUNT\n      ? subTotal - promotion.discount_amount\n      : subTotal * (promotion.discount_amount / 100);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryDto.html":{"url":"classes/QueryDto.html","title":"class - QueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dtos/query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                qs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        qs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: String, example: 'current=1&pageSize=2&populate=role&fields=-fullname&fullname=Khánh&sort=createdAt', description: 'Build query string để thực hiện phân trang, tìm kiếm, sắp xếp, lấy thêm dữ liệu từ Related documents'})@IsOptional()@IsString({message: 'Query string phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dtos/query.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiQuery } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class QueryDto {\n  @ApiProperty({\n    required: false,\n    type: String,\n    example: 'current=1&pageSize=2&populate=role&fields=-fullname&fullname=Khánh&sort=createdAt',\n    description:\n      'Build query string để thực hiện phân trang, tìm kiếm, sắp xếp, lấy thêm dữ liệu từ Related documents',\n  })\n  @IsOptional()\n  @IsString({ message: 'Query string phải là kiểu String' })\n  qs: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/users/dto/register-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PickType(CreateUserDto, [\n  'fullname',\n  'email',\n  'password',\n] as const)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class RegisterUserDto extends PickType(CreateUserDto, [\n  'fullname',\n  'email',\n  'password',\n] as const) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveCartItemsDto.html":{"url":"classes/RemoveCartItemsDto.html","title":"class - RemoveCartItemsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveCartItemsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/carts/dto/remove-cart-items.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'DECREASE', enum: CartRemoveType, required: true})@IsNotEmpty({message: 'Loại không được để trống'})@IsEnum(CartRemoveType, {message: 'Loại không hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/carts/dto/remove-cart-items.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { CartRemoveType } from '../cart-remove-type.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class RemoveCartItemsDto {\n  @ApiProperty({\n    example: 'DECREASE',\n    enum: CartRemoveType,\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Loại không được để trống' })\n  @IsEnum(CartRemoveType, { message: 'Loại không hợp lệ' })\n  type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Response {\n  author: string;\n  statusCode: number;\n  message: string;\n  data: T;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Review.html":{"url":"classes/Review.html","title":"class - Review","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Review\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/reviews/schemas/review.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                comment\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                product\n                            \n                            \n                                    \n                                score\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/reviews/schemas/review.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/reviews/schemas/review.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/reviews/schemas/review.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/reviews/schemas/review.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/reviews/schemas/review.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/reviews/schemas/review.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/reviews/schemas/review.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true, min: 1, max: 5})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/reviews/schemas/review.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/reviews/schemas/review.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/reviews/schemas/review.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/reviews/schemas/review.schema.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { User } from 'src/models/users/schemas/user.schema';\nimport { Product } from 'src/models/products/schemas/product.schema';\n\nexport type ReviewDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Review {\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId,\n    ref: Product.name,\n    required: true,\n  })\n  product: mongoose.Schema.Types.ObjectId;\n\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId,\n    ref: User.name,\n    required: true,\n  })\n  user: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: Number, required: true, min: 1, max: 5 })\n  score: number;\n\n  @Prop()\n  comment: String;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const ReviewSchema = SchemaFactory.createForClass(Review);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReviewsController.html":{"url":"controllers/ReviewsController.html","title":"controller - ReviewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReviewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/reviews/reviews.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reviews\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createReviewDto: CreateReviewDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Tạo mới đánh giá')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/models/reviews/reviews.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createReviewDto\n                                            \n                                                            CreateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ApiQuery(API_PARAM_QUERY)@ResponseMessage('Lấy danh sách đánh giá')\n                \n            \n\n                    \n                        \n                            Defined in src/models/reviews/reviews.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Lấy thông tin của đánh giá')@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/models/reviews/reviews.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Xóa đánh giá')@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/models/reviews/reviews.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateReviewDto: UpdateReviewDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Cập nhật đánh giá')@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/models/reviews/reviews.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateReviewDto\n                                            \n                                                            UpdateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { ReviewsService } from './reviews.service';\nimport { CreateReviewDto } from './dto/create-review.dto';\nimport { UpdateReviewDto } from './dto/update-review.dto';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport { User } from 'src/common/decorators/user.decorator';\nimport { ValidateObjectIdPipe } from 'src/common/pipes/validate_object_id.pipe';\nimport { ResponseMessage } from 'src/common/decorators/response.decorator';\nimport { ApiTags, ApiQuery } from '@nestjs/swagger';\nimport { Public } from 'src/auth/auth.decorator';\nimport { API_PARAM_QUERY } from 'src/common/constants/constants';\n\n@ApiTags('reviews')\n@Controller('reviews')\nexport class ReviewsController {\n  constructor(private readonly reviewsService: ReviewsService) {}\n\n  @ResponseMessage('Tạo mới đánh giá')\n  @Post()\n  async create(@Body() createReviewDto: CreateReviewDto, @User() user: IUser) {\n    return await this.reviewsService.create(createReviewDto, user);\n  }\n\n  @Get()\n  @Public()\n  @ApiQuery(API_PARAM_QUERY)\n  @ResponseMessage('Lấy danh sách đánh giá')\n  async findAll(@Query('qs') qs: string) {\n    console.log(qs);\n    return await this.reviewsService.findAll(qs);\n  }\n\n  @ResponseMessage('Lấy thông tin của đánh giá')\n  @Get(':id')\n  async findOne(@Param('id', ValidateObjectIdPipe) _id: string) {\n    return await this.reviewsService.findOne(_id);\n  }\n\n  @ResponseMessage('Cập nhật đánh giá')\n  @Patch(':id')\n  update(\n    @Param('id', ValidateObjectIdPipe) id: string,\n    @Body() updateReviewDto: UpdateReviewDto,\n    @User() user: IUser,\n  ) {\n    return this.reviewsService.update(id, updateReviewDto, user);\n  }\n\n  @ResponseMessage('Xóa đánh giá')\n  @Delete(':id')\n  remove(@Param('id', ValidateObjectIdPipe) _id: string, @User() user: IUser) {\n    return this.reviewsService.remove(_id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewsModule.html":{"url":"modules/ReviewsModule.html","title":"module - ReviewsModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_exports\n\n\n\ncluster_ReviewsModule_imports\n\n\n\ncluster_ReviewsModule_providers\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nProductsModule->ReviewsModule\n\n\n\n\n\nReviewsService \n\nReviewsService \n\nReviewsService  -->\n\nReviewsModule->ReviewsService \n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/reviews/reviews.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReviewsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReviewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReviewsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReviewsService } from './reviews.service';\nimport { ReviewsController } from './reviews.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Review, ReviewSchema } from './schemas/review.schema';\nimport { ProductsModule } from '../products/products.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Review.name, schema: ReviewSchema }]),\n    ProductsModule,\n  ],\n  controllers: [ReviewsController],\n  providers: [ReviewsService],\n  exports: [ReviewsService],\n})\nexport class ReviewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReviewsService.html":{"url":"injectables/ReviewsService.html","title":"injectable - ReviewsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReviewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/reviews/reviews.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getAvgRating\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reviewModel: SoftDeleteModel, productService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/models/reviews/reviews.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reviewModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createReviewDto: CreateReviewDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/reviews/reviews.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createReviewDto\n                                            \n                                                            CreateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/reviews/reviews.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/reviews/reviews.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAvgRating\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAvgRating(productId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/reviews/reviews.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/reviews/reviews.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updateReviewDto: UpdateReviewDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/reviews/reviews.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateReviewDto\n                                            \n                                                            UpdateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateReviewDto } from './dto/create-review.dto';\nimport { UpdateReviewDto } from './dto/update-review.dto';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Review, ReviewDocument } from './schemas/review.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport aqp from 'api-query-params';\nimport { ProductsService } from '../products/products.service';\n\n@Injectable()\nexport class ReviewsService {\n  constructor(\n    @InjectModel(Review.name) private reviewModel: SoftDeleteModel,\n    private productService: ProductsService,\n  ) {}\n\n  async create(createReviewDto: CreateReviewDto, user: IUser) {\n    const { productId, ...rest } = createReviewDto;\n\n    const product = await this.productService.findOne(productId);\n\n    if (!product) throw new BadRequestException('Sản phẩm không tồn tại');\n\n    const existReview = await this.reviewModel.exists({\n      user: user._id,\n      product: productId,\n    });\n\n    if (existReview) throw new BadRequestException('Bạn đã đánh giá cho sản phẩm này rồi!');\n\n    return await this.reviewModel.create({\n      user: user._id,\n      product: productId,\n      ...rest,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async findAll(query: string) {\n    const { filter, sort, population } = aqp(query);\n    const current = +filter.current || 1;\n    const pageSize = +filter.pageSize || 10;\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (current - 1) * pageSize;\n    let limit = pageSize ? pageSize : 10;\n\n    const totalItems = (await this.reviewModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / limit);\n\n    let defaultSort = sort ? (sort as unknown as string) : '-updatedAt';\n\n    const result = await this.reviewModel\n      .find(filter)\n      .skip(offset)\n      .limit(limit)\n      .sort(defaultSort)\n      .populate(population);\n\n    return {\n      meta: {\n        current: current,\n        pageSize: pageSize,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(_id: string) {\n    return await this.reviewModel.findOne({ _id });\n  }\n\n  async update(_id: string, updateReviewDto: UpdateReviewDto, user: IUser) {\n    return await this.reviewModel.updateOne(\n      { _id },\n      {\n        ...updateReviewDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(_id: string, user: IUser) {\n    await this.reviewModel.updateOne(\n      { _id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n\n    return await this.reviewModel.softDelete({ _id });\n  }\n\n  async getAvgRating(productId: string): Promise {\n    const reviews = await this.reviewModel.find({ product: productId }).exec();\n    const sum = reviews.reduce((accumulator, review) => accumulator + review.score, 0);\n    return sum / reviews.length;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/roles/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/roles/schemas/role.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/roles/schemas/role.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/roles/schemas/role.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/roles/schemas/role.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/roles/schemas/role.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/roles/schemas/role.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/roles/schemas/role.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/roles/schemas/role.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/roles/schemas/role.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/roles/schemas/role.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/roles/schemas/role.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Permission } from 'src/models/permissions/schemas/permission.schema';\n\nexport type RoleDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Role {\n  @Prop()\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  isActive: boolean;\n\n  @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n  permissions: Permission[];\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Tạo mới vai trò')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/models/roles/roles.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Lấy danh sách vai trò với phân trang')@Get()@ApiQuery(API_PARAM_QUERY)\n                \n            \n\n                    \n                        \n                            Defined in src/models/roles/roles.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Lấy thông tin của vai trò')@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/models/roles/roles.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Xóa một vai trò')@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/models/roles/roles.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Cập nhật thông tin của một vai trò')@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/models/roles/roles.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport { User } from 'src/common/decorators/user.decorator';\nimport { ResponseMessage } from 'src/common/decorators/response.decorator';\nimport { ValidateObjectIdPipe } from 'src/common/pipes/validate_object_id.pipe';\nimport { ApiQuery, ApiTags } from '@nestjs/swagger';\nimport { QueryDto } from 'src/common/dtos/query.dto';\nimport { API_PARAM_QUERY } from 'src/common/constants/constants';\n\n@ApiTags('roles')\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) {}\n\n  @ResponseMessage('Tạo mới vai trò')\n  @Post()\n  create(@Body() createRoleDto: CreateRoleDto, @User() user: IUser) {\n    return this.rolesService.create(createRoleDto, user);\n  }\n\n  @ResponseMessage('Lấy danh sách vai trò với phân trang')\n  @Get()\n  @ApiQuery(API_PARAM_QUERY)\n  findAll(@Query('qs') qs: string) {\n    return this.rolesService.findAll(qs);\n  }\n\n  @ResponseMessage('Lấy thông tin của vai trò')\n  @Get(':id')\n  findOne(@Param('id', ValidateObjectIdPipe) id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @ResponseMessage('Cập nhật thông tin của một vai trò')\n  @Patch(':id')\n  update(\n    @Param('id', ValidateObjectIdPipe) _id: string,\n    @Body() updateRoleDto: UpdateRoleDto,\n    @User() user: IUser,\n  ) {\n    return this.rolesService.update(_id, updateRoleDto, user);\n  }\n\n  @ResponseMessage('Xóa một vai trò')\n  @Delete(':id')\n  remove(@Param('id', ValidateObjectIdPipe) id: string, @User() user: IUser) {\n    return this.rolesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from './schemas/role.schema';\nimport { PermissionsModule } from '../permissions/permissions.module';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }])],\n  controllers: [RolesController],\n  providers: [RolesService],\n  exports: [RolesService],\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                permissionsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByName\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel, moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/models/roles/roles.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/roles/roles.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/roles/roles.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/roles/roles.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/roles/roles.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/roles/roles.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/roles/roles.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/roles/roles.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        permissionsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PermissionsService\n\n                    \n                \n                    \n                        \n                                Defined in src/models/roles/roles.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException, OnModuleInit } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Role, RoleDocument } from './schemas/role.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport aqp from 'api-query-params';\nimport { RoleType } from 'src/common/enums/enums';\nimport { PermissionsService } from '../permissions/permissions.service';\nimport { ModuleRef } from '@nestjs/core';\n\n@Injectable()\nexport class RolesService implements OnModuleInit {\n  private permissionsService: PermissionsService;\n\n  constructor(\n    @InjectModel(Role.name) private roleModel: SoftDeleteModel,\n    private moduleRef: ModuleRef,\n  ) {}\n\n  onModuleInit() {\n    this.permissionsService = this.moduleRef.get(PermissionsService, { strict: false });\n  }\n\n  async findAll(query: string) {\n    const { filter, sort, population } = aqp(query);\n    const current = +filter.current;\n    const pageSize = +filter.pageSize;\n    delete filter.current;\n    delete filter.pageSize;\n\n    filter.name = { $ne: RoleType.ADMIN };\n\n    let offset = (current - 1) * pageSize;\n    let limit = pageSize ? pageSize : 10;\n\n    const totalItems = (await this.roleModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / limit);\n\n    let defaultSort = sort ? (sort as unknown as string) : '-updatedAt';\n\n    const result = await this.roleModel\n      .find(filter)\n      .skip(offset)\n      .limit(limit)\n      .sort(defaultSort)\n      .populate(population);\n\n    return {\n      meta: {\n        current, //trang hiện tại\n        pageSize, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n\n  async findOne(id: string) {\n    return await this.roleModel.findById(id).populate('permissions');\n  }\n\n  async findOneByName(name: string) {\n    return await this.roleModel.findOne({ name });\n  }\n\n  async create(createRoleDto: CreateRoleDto, user: IUser) {\n    const { name, permissions } = createRoleDto;\n\n    const existingRole = await this.roleModel.findOne({ name });\n    if (existingRole) {\n      throw new BadRequestException(`Role ${name} đã tồn tại!`);\n    }\n\n    const invalidPermissions = await this.permissionsService.checkExistPermissions(permissions);\n    if (invalidPermissions.length > 0) {\n      throw new NotFoundException(`Permissions không tồn tại: ${invalidPermissions.join(', ')}`);\n    }\n\n    return await this.roleModel.create({\n      ...createRoleDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async update(_id: string, updateRoleDto: UpdateRoleDto, user: IUser) {\n    const role = await this.roleModel.findOne({ _id });\n    if (role && role.name === RoleType.ADMIN) {\n      throw new BadRequestException('Bạn không được phép cập nhật Role ADMIN');\n    }\n\n    const invalidPermissions = await this.permissionsService.checkExistPermissions(\n      updateRoleDto.permissions,\n    );\n    if (invalidPermissions.length > 0) {\n      throw new NotFoundException(`Permissions không tồn tại: ${invalidPermissions.join(', ')}`);\n    }\n\n    return await this.roleModel.updateOne(\n      { _id },\n      {\n        ...updateRoleDto,\n        updatedBy: {\n          _id: user._id,\n          email: user._id,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    const role = await this.roleModel.findOne({ _id: id });\n\n    if (role && role.name === RoleType.ADMIN)\n      throw new BadRequestException('Bạn không được phép xóa Role ADMIN');\n\n    await this.roleModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.roleModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SwaggerDocumentOptions.html":{"url":"interfaces/SwaggerDocumentOptions.html","title":"interface - SwaggerDocumentOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SwaggerDocumentOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/swagger-options.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            deepScanRoutes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            extraModels\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ignoreGlobalPrefix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            include\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            operationIdFactory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deepScanRoutes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deepScanRoutes:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, swagger will also load routes from the modules imported by include modules\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extraModels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extraModels:     Function[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Function[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Additional, extra models that should be inspected and included in the specification\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreGlobalPrefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ignoreGlobalPrefix:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, swagger will ignore the global prefix set through setGlobalPrefix() method\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        include\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        include:     Function[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Function[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of modules to include in the specification\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operationIdFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operationIdFactory:         function\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : () => controllerKey_methodKey\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom operationIdFactory that will be used to generate the operationId\nbased on the controllerKey and methodKey\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SwaggerDocumentOptions {\n  /**\n   * List of modules to include in the specification\n   */\n  include?: Function[];\n\n  /**\n   * Additional, extra models that should be inspected and included in the specification\n   */\n  extraModels?: Function[];\n\n  /**\n   * If `true`, swagger will ignore the global prefix set through `setGlobalPrefix()` method\n   */\n  ignoreGlobalPrefix?: boolean;\n\n  /**\n   * If `true`, swagger will also load routes from the modules imported by `include` modules\n   */\n  deepScanRoutes?: boolean;\n\n  /**\n   * Custom operationIdFactory that will be used to generate the `operationId`\n   * based on the `controllerKey` and `methodKey`\n   * @default () => controllerKey_methodKey\n   */\n  operationIdFactory?: (controllerKey: string, methodKey: string) => string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/transform.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/transform.interceptor.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Response } from '../interfaces/response.interface';\nimport { Reflector } from '@nestjs/core';\nimport { RESPONSE_MESSAGE } from '../decorators/response.decorator';\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    const message =\n      this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) || '';\n\n    return next.handle().pipe(\n      map((data) => ({\n        author: 'Code bao ghiền - Phạm Duy Khánh',\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message: message,\n        data: data,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAddressDto.html":{"url":"classes/UpdateAddressDto.html","title":"class - UpdateAddressDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAddressDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/addresses/dto/update-address.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateAddressDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAddressDto } from './create-address.dto';\n\nexport class UpdateAddressDto extends PartialType(CreateAddressDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/categories/dto/update-category.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCategoryDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCategoryDto } from './create-category.dto';\n\nexport class UpdateCategoryDto extends PartialType(CreateCategoryDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrderDto.html":{"url":"classes/UpdateOrderDto.html","title":"class - UpdateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/orders/dto/update-order.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  PickType(CreateOrderDto, ['payment_method', 'note'] as const),\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                customer_full_name\n                            \n                            \n                                    \n                                    \n                                customer_phone_number\n                            \n                            \n                                    \n                                    \n                                payment_method\n                            \n                            \n                                    \n                                    \n                                shipping_address\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        customer_full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'Nguyễn Văn A', description: 'Họ và tên người nhận', required: false})@IsString({message: 'Họ và tên phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/dto/update-order.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        customer_phone_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: '0987654321', description: 'Số điện thoại liên lạc', required: false})@IsString({message: 'Số điện thoại phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/dto/update-order.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        payment_method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: PaymentMethod, example: 'Ví điện tử VNPay', description: 'Phương thức thanh toán', required: false})@IsEnum(PaymentMethod, {message: 'Phương thức thanh toán không hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/dto/update-order.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        shipping_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: '123 Đường ABC, Phường XYZ, Quận DEF, TPHCM', description: 'Địa chỉ cụ thể', required: false})@IsString({message: 'Địa chỉ phải là kiểu String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/dto/update-order.dto.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, IntersectionType, OmitType, PartialType, PickType } from '@nestjs/swagger';\nimport { CreateOrderDto } from './create-order.dto';\nimport { IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { CreateAddressDto } from 'src/models/addresses/dto/create-address.dto';\nimport { PaymentMethod } from 'src/common/enums/enums';\n\nexport class UpdateOrderDto extends PartialType(\n  PickType(CreateOrderDto, ['payment_method', 'note'] as const),\n) {\n  @ApiProperty({\n    type: String,\n    example: 'Nguyễn Văn A',\n    description: 'Họ và tên người nhận',\n    required: false,\n  })\n  @IsString({ message: 'Họ và tên phải là kiểu String' })\n  customer_full_name: string;\n\n  @ApiProperty({\n    type: String,\n    example: '0987654321',\n    description: 'Số điện thoại liên lạc',\n    required: false,\n  })\n  @IsString({ message: 'Số điện thoại phải là kiểu String' })\n  customer_phone_number: string;\n\n  @ApiProperty({\n    enum: PaymentMethod,\n    example: 'Ví điện tử VNPay',\n    description: 'Phương thức thanh toán',\n    required: false,\n  })\n  @IsEnum(PaymentMethod, { message: 'Phương thức thanh toán không hợp lệ' })\n  payment_method: string;\n\n  @ApiProperty({\n    type: String,\n    example: '123 Đường ABC, Phường XYZ, Quận DEF, TPHCM',\n    description: 'Địa chỉ cụ thể',\n    required: false,\n  })\n  @IsString({ message: 'Địa chỉ phải là kiểu String' })\n  shipping_address: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrderStatusDto.html":{"url":"classes/UpdateOrderStatusDto.html","title":"class - UpdateOrderStatusDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrderStatusDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/orders/dto/update-order-status.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                order_status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        order_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: OrderStatus, example: 'Chờ xử lý', description: 'Trạng thái đơn hàng', required: true})@IsNotEmpty({message: 'Trạng thái đơn hàng không được bỏ trống'})@IsEnum(OrderStatus, {message: 'Trạng thái đơn hàng không hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/dto/update-order-status.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNotEmpty } from 'class-validator';\nimport { OrderStatus } from 'src/common/enums/status.enum';\n\nexport class UpdateOrderStatusDto {\n  @ApiProperty({\n    enum: OrderStatus,\n    example: 'Chờ xử lý',\n    description: 'Trạng thái đơn hàng',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Trạng thái đơn hàng không được bỏ trống' })\n  @IsEnum(OrderStatus, { message: 'Trạng thái đơn hàng không hợp lệ' })\n  order_status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePaymentStatusDto.html":{"url":"classes/UpdatePaymentStatusDto.html","title":"class - UpdatePaymentStatusDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePaymentStatusDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/orders/dto/update-payment-status.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                payment_status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        payment_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: PaymentStatus, example: 'Đang chờ xử lý', description: 'Trạng thái thanh toán', required: true})@IsNotEmpty({message: 'Trạng thái thanh toán không được bỏ trống'})@IsEnum(PaymentStatus, {message: 'Trạng thái thanh toán không hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/orders/dto/update-payment-status.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNotEmpty } from 'class-validator';\nimport { PaymentStatus } from 'src/common/enums/enums';\n\nexport class UpdatePaymentStatusDto {\n  @ApiProperty({\n    enum: PaymentStatus,\n    example: 'Đang chờ xử lý',\n    description: 'Trạng thái thanh toán',\n    required: true,\n  })\n  @IsNotEmpty({ message: 'Trạng thái thanh toán không được bỏ trống' })\n  @IsEnum(PaymentStatus, { message: 'Trạng thái thanh toán không hợp lệ' })\n  payment_status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/permissions/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/products/dto/update-product.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateProductDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePromotionDto.html":{"url":"classes/UpdatePromotionDto.html","title":"class - UpdatePromotionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePromotionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/promotions/dto/update-promotion.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePromotionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePromotionDto } from './create-promotion.dto';\n\nexport class UpdatePromotionDto extends PartialType(CreatePromotionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateReviewDto.html":{"url":"classes/UpdateReviewDto.html","title":"class - UpdateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/reviews/dto/update-review.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(CreateReviewDto, ['productId'] as const),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType, PartialType } from '@nestjs/swagger';\nimport { CreateReviewDto } from './create-review.dto';\n\nexport class UpdateReviewDto extends PartialType(\n  OmitType(CreateReviewDto, ['productId'] as const),\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/roles/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  OmitType(CreateUserDto, ['email', 'password'] as const),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType, PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(\n  OmitType(CreateUserDto, ['email', 'password'] as const),\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                fullname\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refresh_token\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/schemas/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/schemas/user.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/schemas/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/schemas/user.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/schemas/user.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/schemas/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fullname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/schemas/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/schemas/user.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/schemas/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refresh_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/schemas/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/schemas/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/schemas/user.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/users/schemas/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Role } from 'src/models/roles/schemas/role.schema';\n\nexport type UserDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class User {\n  @Prop({ required: true })\n  email: string;\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop({ required: true })\n  fullname: string;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  refresh_token: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name, required: true })\n  role: Role;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Tạo mới người dùng')\n                \n            \n\n                    \n                        \n                            Defined in src/models/users/users.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiParam(API_PARAM_QUERY)@ResponseMessage('Lấy danh sách người dùng')\n                \n            \n\n                    \n                        \n                            Defined in src/models/users/users.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Lấy thông tin người dùng')\n                \n            \n\n                    \n                        \n                            Defined in src/models/users/users.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Xóa người dùng')\n                \n            \n\n                    \n                        \n                            Defined in src/models/users/users.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, user: IUser, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Cập nhật thông tin người dùng')\n                \n            \n\n                    \n                        \n                            Defined in src/models/users/users.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from 'src/common/decorators/user.decorator';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { ValidateObjectIdPipe } from 'src/common/pipes/validate_object_id.pipe';\nimport { ResponseMessage } from 'src/common/decorators/response.decorator';\nimport { API_PARAM_QUERY } from 'src/common/constants/constants';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @ResponseMessage('Tạo mới người dùng')\n  async create(@Body() createUserDto: CreateUserDto) {\n    return await this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  @ApiParam(API_PARAM_QUERY)\n  @ResponseMessage('Lấy danh sách người dùng')\n  async findAll(@Query() query: string) {\n    return await this.usersService.findAll(query);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Lấy thông tin người dùng')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Cập nhật thông tin người dùng')\n  async update(\n    @Param('id', ValidateObjectIdPipe) id: string,\n    @User() user: IUser,\n    @Body() updateUserDto: UpdateUserDto,\n  ) {\n    return await this.usersService.update(id, updateUserDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Xóa người dùng')\n  remove(@Param('id', ValidateObjectIdPipe) id: string, @User() user: IUser) {\n    return this.usersService.remove(user, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nRolesModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { RolesModule } from '../roles/roles.module';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]), RolesModule],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                adminEmail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findUserByEmail\n                            \n                            \n                                    Async\n                                findUserByToken\n                            \n                            \n                                    Async\n                                getHashPassword\n                            \n                            \n                                    Async\n                                isValidPassword\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateUserToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, rolesService: RolesService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/models/users/users.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/users/users.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/users/users.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/users/users.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/users/users.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserByToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/users/users.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getHashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/users/users.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    isValidPassword(password: string, hashPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/users/users.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hashPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(user: IUser, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/users/users.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/users/users.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserToken(_id: string, refresh_token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/users/users.service.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refresh_token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        adminEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/users/users.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User, UserDocument } from './schemas/user.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { RolesService } from '../roles/roles.service';\nimport aqp from 'api-query-params';\nimport { IUser } from 'src/common/interfaces/user.interface';\nimport { ConfigService } from '@nestjs/config';\nvar bcrypt = require('bcryptjs');\n\n@Injectable()\nexport class UsersService {\n  private readonly adminEmail: string;\n\n  constructor(\n    @InjectModel(User.name) private userModel: SoftDeleteModel,\n    private readonly rolesService: RolesService,\n    private readonly configService: ConfigService,\n  ) {\n    this.adminEmail = this.configService.get('ADMIN_EMAIL');\n  }\n\n  async create(createUserDto: CreateUserDto) {\n    const existingUser = await this.findUserByEmail(createUserDto.email);\n    if (existingUser) {\n      throw new BadRequestException('Email đã tồn tại');\n    }\n\n    const hashedPassword = await this.getHashPassword(createUserDto.password);\n    const role = await this.rolesService.findOne(createUserDto.roleId);\n\n    if (!role) {\n      throw new NotFoundException('Role không tồn tại');\n    }\n\n    return await this.userModel.create({\n      ...createUserDto,\n      password: hashedPassword,\n      role: role._id,\n    });\n  }\n\n  async findAll(query: string) {\n    console.warn(query);\n    const { filter, sort, population } = aqp(query);\n    const current = +filter.current || 1;\n    const pageSize = +filter.pageSize || 10;\n    delete filter.current;\n    delete filter.pageSize;\n\n    const totalItems = await this.userModel.countDocuments(filter);\n    const totalPages = Math.ceil(totalItems / pageSize);\n\n    let defaultSort = sort ? (sort as unknown as string) : '-updatedAt';\n\n    const result = await this.userModel\n      .find(filter)\n      .select('-password')\n      .skip((current - 1) * pageSize)\n      .limit(pageSize)\n      .sort(defaultSort)\n      .populate(population);\n\n    return {\n      meta: {\n        current,\n        pageSize,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    const user = await this.userModel.findById(id);\n    if (!user) {\n      throw new NotFoundException('Tài khoản không tồn tại');\n    }\n\n    return user;\n  }\n\n  async findUserByEmail(email: string) {\n    return await this.userModel.findOne({ email });\n  }\n\n  async findUserByToken(refreshToken: string) {\n    return await this.userModel.findOne({ refresh_token: refreshToken });\n  }\n\n  async update(id: string, updateUserDto: UpdateUserDto, user: IUser) {\n    const existingUser = await this.findOne(id);\n\n    if (existingUser.email === this.adminEmail) {\n      throw new BadRequestException('Bạn không có quyền cập nhật tài khoản ADMIN');\n    }\n\n    return await this.userModel.updateOne(\n      { _id: id },\n      {\n        ...updateUserDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(user: IUser, id: string) {\n    const existingUser = await this.findOne(id);\n\n    if (existingUser.email === this.adminEmail) {\n      throw new BadRequestException('Bạn không có quyền xóa tài khoản ADMIN');\n    }\n\n    await this.userModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n\n    return this.userModel.softDelete({ _id: id });\n  }\n\n  async updateUserToken(_id: string, refresh_token: string) {\n    return await this.userModel.updateOne({ _id }, { refresh_token });\n  }\n\n  async getHashPassword(password: string) {\n    const saltOrRounds = 10;\n    return await bcrypt.hash(password, saltOrRounds);\n  }\n\n  async isValidPassword(password: string, hashPassword: string) {\n    return await bcrypt.compareSync(password, hashPassword);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utils.html":{"url":"classes/Utils.html","title":"class - Utils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getDataChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getDataChange\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDataChange(data1: Object, data2: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/utils.ts:2\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data1\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data2\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Utils {\n  static getDataChange(data1: Object, data2: Object) {\n    const keys = Object.keys(data1);\n    let changes = {};\n    for (const key of keys) {\n      if (data1[key] !== data2[key]) {\n        changes[key] = data2[key];\n      }\n    }\n    return Object.keys(changes).length > 0 ? changes : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateObjectIdPipe.html":{"url":"injectables/ValidateObjectIdPipe.html","title":"injectable - ValidateObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidateObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/validate_object_id.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/pipes/validate_object_id.pipe.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata, BadRequestException } from '@nestjs/common';\nimport mongoose from 'mongoose';\nimport { CUSTOM_MESSAGES } from '../enums/custom-messages.enum';\n\n@Injectable()\nexport class ValidateObjectIdPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    if (!mongoose.Types.ObjectId.isValid(value))\n      throw new BadRequestException(CUSTOM_MESSAGES.ERROR_MONGO_ID);\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            modelModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            class\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            class\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/constants/constants.ts\n            \n            variable\n            API_PARAM_QUERY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants/constants.ts\n            \n            variable\n            OrderStatusTransitions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants/constants.ts\n            \n            variable\n            PaymentStatusTransitions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants/constants.ts\n            \n            variable\n            TAX_RATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/cart-exists.decorator.ts\n            \n            function\n            CartExists\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/product-exists.decorator.ts\n            \n            function\n            ProductExists\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/response.decorator.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/response.decorator.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dtos/query.dto.ts\n            \n            class\n            QueryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interfaces/order-summary.interface.ts\n            \n            interface\n            OrderSummary\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/interfaces/response.interface.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/interfaces/swagger-options.interface.ts\n            \n            interface\n            SwaggerDocumentOptions\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/common/interfaces/user.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/pipes/validate_object_id.pipe.ts\n            \n            injectable\n            ValidateObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/validators/cart-exists.rule.ts\n            \n            injectable\n            CartExistsRule\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/validators/product-exists.rule.ts\n            \n            injectable\n            ProductExistsRule\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/multer.config.ts\n            \n            variable\n            deleteFileFromDiskStorage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/multer.config.ts\n            \n            variable\n            multerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/multer.config.ts\n            \n            variable\n            multerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/swagger.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/filters/all_exception.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/database.controller.ts\n            \n            controller\n            DatabaseController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.service.ts\n            \n            injectable\n            DatabaseService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/master-data.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/master-data.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/master-data.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/addresses/addresses.controller.ts\n            \n            controller\n            AddressesController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/addresses/addresses.service.ts\n            \n            injectable\n            AddressesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/addresses/dto/apply-address.dto.ts\n            \n            class\n            ApplyAddressDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/addresses/dto/create-address.dto.ts\n            \n            class\n            CreateAddressDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/addresses/dto/update-address.dto.ts\n            \n            class\n            UpdateAddressDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/addresses/schemas/address.schema.ts\n            \n            class\n            Address\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/addresses/schemas/address.schema.ts\n            \n            variable\n            AddressSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/carts/carts.controller.ts\n            \n            controller\n            CartsController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/carts/carts.service.ts\n            \n            injectable\n            CartsService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/models/carts/dto/cart-item.dto.ts\n            \n            class\n            CartItemDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/carts/dto/create-cart.dto.ts\n            \n            class\n            CreateCartDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/carts/dto/remove-cart-items.dto.ts\n            \n            class\n            RemoveCartItemsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/carts/schemas/cart.schema.ts\n            \n            class\n            Cart\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/carts/schemas/cart.schema.ts\n            \n            variable\n            CartSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/categories/categories.controller.ts\n            \n            controller\n            CategoriesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/categories/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/categories/dto/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/categories/dto/update-category.dto.ts\n            \n            class\n            UpdateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/categories/schemas/category.schema.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/models/categories/schemas/category.schema.ts\n            \n            variable\n            CategorySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/files/dto/file-upload.dto.ts\n            \n            class\n            FileUploadDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/orders/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/orders/dto/update-order-status.dto.ts\n            \n            class\n            UpdateOrderStatusDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/orders/dto/update-order.dto.ts\n            \n            class\n            UpdateOrderDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/orders/dto/update-payment-status.dto.ts\n            \n            class\n            UpdatePaymentStatusDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/orders/orders.controller.ts\n            \n            controller\n            OrdersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/orders/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/orders/schemas/order.schema.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/models/orders/schemas/order.schema.ts\n            \n            variable\n            OrderSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/permissions/schemas/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/models/permissions/schemas/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/products/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/models/products/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/models/products/schemas/product.schema.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/models/products/schemas/product.schema.ts\n            \n            variable\n            ProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/promotions/dto/apply-promotion.dto.ts\n            \n            class\n            ApplyPromotionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/promotions/dto/create-promotion.dto.ts\n            \n            class\n            CreatePromotionDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/promotions/dto/update-promotion.dto.ts\n            \n            class\n            UpdatePromotionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/promotions/promotions.controller.ts\n            \n            controller\n            PromotionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/promotions/promotions.service.ts\n            \n            injectable\n            PromotionsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/promotions/schemas/promotion.schema.ts\n            \n            class\n            Promotion\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/models/promotions/schemas/promotion.schema.ts\n            \n            variable\n            PromotionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/reviews/dto/create-review.dto.ts\n            \n            class\n            CreateReviewDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/reviews/dto/update-review.dto.ts\n            \n            class\n            UpdateReviewDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/reviews/reviews.controller.ts\n            \n            controller\n            ReviewsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/reviews/reviews.service.ts\n            \n            injectable\n            ReviewsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/reviews/schemas/review.schema.ts\n            \n            class\n            Review\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/models/reviews/schemas/review.schema.ts\n            \n            variable\n            ReviewSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/roles/schemas/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/models/roles/schemas/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/users/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/users/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/models/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/models/users/users.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/utils.ts\n            \n            class\n            Utils\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : 10.0.0\n        \n            @nestjs/config : 3.2.2\n        \n            @nestjs/core : 10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : 10.0.5\n        \n            @nestjs/passport : 10.0.3\n        \n            @nestjs/platform-express : 10.0.0\n        \n            @nestjs/swagger : 7.3.1\n        \n            @nestjs/throttler : 6.0.0\n        \n            @types/ms : 0.7.34\n        \n            api-query-params : 5.4.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : 0.5.1\n        \n            class-validator : 0.14.1\n        \n            cookie-parser : ^1.4.6\n        \n            helmet : 7.1.0\n        \n            mongoose : 8.3.1\n        \n            ms : 2.1.3\n        \n            passport : 0.7.0\n        \n            passport-jwt : 4.0.1\n        \n            passport-local : 1.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rxjs : 7.8.1\n        \n            soft-delete-plugin-mongoose : 1.0.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CartRemoveType   (src/.../cart-remove-type.enum.ts)\n                        \n                        \n                            ColorsType   (src/.../enums.ts)\n                        \n                        \n                            CouponStatus   (src/.../enums.ts)\n                        \n                        \n                            CUSTOM_MESSAGES   (src/.../custom-messages.enum.ts)\n                        \n                        \n                            DiscountType   (src/.../enums.ts)\n                        \n                        \n                            GenderType   (src/.../enums.ts)\n                        \n                        \n                            OrderStatus   (src/.../status.enum.ts)\n                        \n                        \n                            PaymentMethod   (src/.../enums.ts)\n                        \n                        \n                            PaymentStatus   (src/.../enums.ts)\n                        \n                        \n                            RoleType   (src/.../enums.ts)\n                        \n                        \n                            ShippingMethod   (src/.../enums.ts)\n                        \n                        \n                            SizesType   (src/.../enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/models/carts/cart-remove-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CartRemoveType\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 SINGLE\n                            \n                        \n                        \n                            \n                                Value : SINGLE\n                            \n                        \n                        \n                            \n                                 DESCREASE\n                            \n                        \n                        \n                            \n                                Value : DECREASE\n                            \n                        \n            \n        \n\n    src/common/enums/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorsType\n                    \n                \n                        \n                            \n                                 Black\n                            \n                        \n                        \n                            \n                                Value : Đen\n                            \n                        \n                        \n                            \n                                 White\n                            \n                        \n                        \n                            \n                                Value : Trắng\n                            \n                        \n                        \n                            \n                                 Gray\n                            \n                        \n                        \n                            \n                                Value : Xám\n                            \n                        \n                        \n                            \n                                 Brown\n                            \n                        \n                        \n                            \n                                Value : Nâu\n                            \n                        \n                        \n                            \n                                 Red\n                            \n                        \n                        \n                            \n                                Value : Đỏ\n                            \n                        \n                        \n                            \n                                 Yellow\n                            \n                        \n                        \n                            \n                                Value : Vàng\n                            \n                        \n                        \n                            \n                                 Orange\n                            \n                        \n                        \n                            \n                                Value : Cam\n                            \n                        \n                        \n                            \n                                 Pink\n                            \n                        \n                        \n                            \n                                Value : Hồng\n                            \n                        \n                        \n                            \n                                 Blue\n                            \n                        \n                        \n                            \n                                Value : Xanh dương\n                            \n                        \n                        \n                            \n                                 Green\n                            \n                        \n                        \n                            \n                                Value : Xanh lá\n                            \n                        \n                        \n                            \n                                 Purple\n                            \n                        \n                        \n                            \n                                Value : Tím\n                            \n                        \n                        \n                            \n                                 PastelPink\n                            \n                        \n                        \n                            \n                                Value : Hồng pastel\n                            \n                        \n                        \n                            \n                                 PastelBlue\n                            \n                        \n                        \n                            \n                                Value : Xanh pastel\n                            \n                        \n                        \n                            \n                                 PastelYellow\n                            \n                        \n                        \n                            \n                                Value : Vàng pastel\n                            \n                        \n                        \n                            \n                                 PastelPurple\n                            \n                        \n                        \n                            \n                                Value : Tím pastel\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CouponStatus\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : Hoạt động\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : Không hoạt động\n                            \n                        \n                        \n                            \n                                 EXPIRED\n                            \n                        \n                        \n                            \n                                Value : Hết hạn\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DiscountType\n                    \n                \n                        \n                            \n                                 PERCENTAGE\n                            \n                        \n                        \n                            \n                                Value : Phần trăm\n                            \n                        \n                        \n                            \n                                 FIXED_AMOUNT\n                            \n                        \n                        \n                            \n                                Value : Số tiền\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GenderType\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : Nam\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : Nữ\n                            \n                        \n                        \n                            \n                                 UNISEX\n                            \n                        \n                        \n                            \n                                Value : Unisex\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PaymentMethod\n                    \n                \n                        \n                            \n                                 Cod\n                            \n                        \n                        \n                            \n                                Value : Thanh toán khi nhận hàng\n                            \n                        \n                        \n                            \n                                 VNPay\n                            \n                        \n                        \n                            \n                                Value : Ví điện tử VNPay\n                            \n                        \n                        \n                            \n                                 Momo\n                            \n                        \n                        \n                            \n                                Value : Ví điện tử Momo\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PaymentStatus\n                    \n                \n                        \n                            \n                                 Pending\n                            \n                        \n                        \n                            \n                                Value : Chờ thanh toán\n                            \n                        \n                        \n                            \n                                 Paid\n                            \n                        \n                        \n                            \n                                Value : Đã thanh toán\n                            \n                        \n                        \n                            \n                                 Failed\n                            \n                        \n                        \n                            \n                                Value : Thất bại\n                            \n                        \n                        \n                            \n                                 Cancelled\n                            \n                        \n                        \n                            \n                                Value : Đã hủy\n                            \n                        \n                        \n                            \n                                 Refunded\n                            \n                        \n                        \n                            \n                                Value : Đã hoàn tiền\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RoleType\n                    \n                \n                        \n                            \n                                 CUSTOMER\n                            \n                        \n                        \n                            \n                                Value : Khách hàng\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : Quản trị viên\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ShippingMethod\n                    \n                \n                        \n                            \n                                 Standard\n                            \n                        \n                        \n                            \n                                Value : Giao hàng tiêu chuẩn\n                            \n                        \n                        \n                            \n                                 Express\n                            \n                        \n                        \n                            \n                                Value : Giao hàng nhanh\n                            \n                        \n                        \n                            \n                                 SameDay\n                            \n                        \n                        \n                            \n                                Value : Giao hàng hỏa tốc\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SizesType\n                    \n                \n                        \n                            \n                                 XS\n                            \n                        \n                        \n                            \n                                Value : XS\n                            \n                        \n                        \n                            \n                                 S\n                            \n                        \n                        \n                            \n                                Value : S\n                            \n                        \n                        \n                            \n                                 M\n                            \n                        \n                        \n                            \n                                Value : M\n                            \n                        \n                        \n                            \n                                 L\n                            \n                        \n                        \n                            \n                                Value : L\n                            \n                        \n                        \n                            \n                                 XL\n                            \n                        \n                        \n                            \n                                Value : XL\n                            \n                        \n                        \n                            \n                                 XXL\n                            \n                        \n                        \n                            \n                                Value : XXL\n                            \n                        \n            \n        \n\n    src/common/enums/custom-messages.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CUSTOM_MESSAGES\n                    \n                \n                        \n                            \n                                 UNAUTHORIZED_TOKEN\n                            \n                        \n                        \n                            \n                                Value : Tài khoản hoặc mật khẩu không chính xác\n                            \n                        \n                        \n                            \n                                 INVALID_TOKEN\n                            \n                        \n                        \n                            \n                                Value : Token không hợp lệ\n                            \n                        \n                        \n                            \n                                 TOKEN_EXPIRED\n                            \n                        \n                        \n                            \n                                Value : Token hết hạn\n                            \n                        \n                        \n                            \n                                 FORBIDDEN\n                            \n                        \n                        \n                            \n                                Value : Bạn không có quyền truy cập vào API này\n                            \n                        \n                        \n                            \n                                 ERROR_MONGO_ID\n                            \n                        \n                        \n                            \n                                Value : ID phải là kiểu MongoId\n                            \n                        \n                        \n                            \n                                 CATEGORY_EXIST\n                            \n                        \n                        \n                            \n                                Value : Tên danh mục đã tồn tại\n                            \n                        \n                        \n                            \n                                 CATEGORY_ID_NOT_EXIST\n                            \n                        \n                        \n                            \n                                Value : ID danh mục không tồn tại\n                            \n                        \n                        \n                            \n                                 CATEGORY_HAS_PRODUCT\n                            \n                        \n                        \n                            \n                                Value : Bạn xóa tôi thì những sản phẩm sẽ bị mồ côi\n                            \n                        \n                        \n                            \n                                 PRODUCT_EXIST\n                            \n                        \n                        \n                            \n                                Value : Sản phẩm đã tồn tại\n                            \n                        \n                        \n                            \n                                 CART_ID_NOT_EXIST\n                            \n                        \n                        \n                            \n                                Value : ID giỏ hàng không tồn tại\n                            \n                        \n                        \n                            \n                                 CART_ITEM_ID_NOT_EXIST\n                            \n                        \n                        \n                            \n                                Value : ID sản phẩm trong giỏ hàng không tồn tại\n                            \n                        \n                        \n                            \n                                 CART_EXIST\n                            \n                        \n                        \n                            \n                                Value : Giỏ hàng đã  tồn tại\n                            \n                        \n                        \n                            \n                                 ADDRESS_ID_NOT_EXIST\n                            \n                        \n                        \n                            \n                                Value : ID địa chỉ nhận hàng không tồn tại\n                            \n                        \n                        \n                            \n                                 PERMISSION_EXIST\n                            \n                        \n                        \n                            \n                                Value : Quyền đã tồn tại\n                            \n                        \n                        \n                            \n                                 PERMISSION_ID_NOT_EXIST\n                            \n                        \n                        \n                            \n                                Value : ID quyền không tồn tại\n                            \n                        \n                        \n                            \n                                 PROMOTION_NOT_EXIST\n                            \n                        \n                        \n                            \n                                Value : Mã giảm giá không tồn tại\n                            \n                        \n                        \n                            \n                                 PROMOTION_EXIST\n                            \n                        \n                        \n                            \n                                Value : Mã giảm giá đã tồn tại\n                            \n                        \n                        \n                            \n                                 PROMOTION_INVALID\n                            \n                        \n                        \n                            \n                                Value : Mã giảm giá không hợp lệ\n                            \n                        \n                        \n                            \n                                 PROMOTION_EXPIRED\n                            \n                        \n                        \n                            \n                                Value : Mã giảm giá không còn hiệu lực\n                            \n                        \n                        \n                            \n                                 PROMOTION_CONDITIONS_NOT_MET\n                            \n                        \n                        \n                            \n                                Value : Không đủ điều kiện áp dụng\n                            \n                        \n                        \n                            \n                                 INVALID_DISCOUNT_DATE_RANGE\n                            \n                        \n                        \n                            \n                                Value : Ngày kết thúc phải lớn hơn ngày bắt đầu\n                            \n                        \n                        \n                            \n                                 INVALID_DISCOUNT_AMOUNT\n                            \n                        \n                        \n                            \n                                Value : Số tiền giảm giá không hợp lệ\n                            \n                        \n                        \n                            \n                                 INVALID_DISCOUNT_PERCENTAGE\n                            \n                        \n                        \n                            \n                                Value : Phần trăm giảm giá không hợp lệ\n                            \n                        \n                        \n                            \n                                 COLOR_NOT_EXIST\n                            \n                        \n                        \n                            \n                                Value : Màu sắc không tồn tại\n                            \n                        \n                        \n                            \n                                 SIZE_NOT_EXIST\n                            \n                        \n                        \n                            \n                                Value : Kích cỡ không tồn tại\n                            \n                        \n                        \n                            \n                                 OUT_OF_STOCK\n                            \n                        \n                        \n                            \n                                Value : Sản phẩm không còn đủ hàng\n                            \n                        \n                        \n                            \n                                 ORDER_NOT_EXIST\n                            \n                        \n                        \n                            \n                                Value : Đơn hàng không tồn tại\n                            \n                        \n                        \n                            \n                                 ORDER_CANNOT_UPDATE\n                            \n                        \n                        \n                            \n                                Value : Đơn hàng không thể cập nhật\n                            \n                        \n                        \n                            \n                                 ORDER_STATUS_INVALID\n                            \n                        \n                        \n                            \n                                Value : Trạng thái đơn hàng không hợp lệ\n                            \n                        \n            \n        \n\n    src/common/enums/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderStatus\n                    \n                \n                        \n                            \n                                 Pending\n                            \n                        \n                        \n                            \n                                Value : Chờ xử lý\n                            \n                        \n                        \n                            \n                                 Confirmed\n                            \n                        \n                        \n                            \n                                Value : Đã xác nhận\n                            \n                        \n                        \n                            \n                                 Shipping\n                            \n                        \n                        \n                            \n                                Value : Đang giao hàng\n                            \n                        \n                        \n                            \n                                 Delivered\n                            \n                        \n                        \n                            \n                                Value : Đã giao hàng\n                            \n                        \n                        \n                            \n                                 Cancelled\n                            \n                        \n                        \n                            \n                                Value : Đã hủy\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            CartExists   (src/.../cart-exists.decorator.ts)\n                        \n                        \n                            ProductExists   (src/.../product-exists.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/decorators/cart-exists.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CartExists\n                        \n                    \n                \n            \n            \n                \nCartExists(validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/decorators/product-exists.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductExists\n                        \n                    \n                \n            \n            \n                \nProductExists(validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFashion E-commerce Backend\nBackend cung cấp API cho ứng dụng bán hàng thời trang, quản lý sản phẩm, đơn hàng, người dùng và các chức năng liên quan.\nTính năng chính:\n👚 Quản lý sản phẩm: \n\nThêm, sửa, xóa, tìm kiếm sản phẩm.\nQuản lý danh mục sản sản phẩm, thuộc tính và biến thể.\nTải lên và lưu trữ hình ảnh của sản phẩm.\nPhân trang, tìm kiếm và sắp xếp sản phẩm.\n\n👨‍👨‍👧‍👦 Quản lý người dùng:\n\nĐăng ký và xác thực người dùng.\nQuản lý hồ sơ người dùng và đơn hàng.\nQuản lý lịch sử đánh giá.\nPhân trang, tìm kiếm và sắp xếp người dùng.\n\n🛒 Quản lý giỏ hàng:\n\nThêm, sửa, xóa sản phẩm trong giỏ hàng.\nTính toán tổng giá trị giỏ hàng.\n\n📦 Quản lý đơn hàng:\n\nĐặt hàng, theo dõi trạng thái đơn hàng.\nXử lý thanh toán và hoàn thành đơn hàng.\nPhân trang, tìm kiếm và sắp xếp đơn hàng.\n\n⭐ Quản lý đánh giá:\n\nViết đánh giá sản phẩm.\nXếp hạng sản phẩm.\nPhân trang, tìm kiếm và sắp xếp đánh giá.\n\n💰 Quản lý khuyến mãi:\n\nTạo và quản lý mã giảm giá.\nÁp dụng khuyến mãi cho đơn hàng.\nPhân trang, tìm kiếm và sắp xếp khuyến mãi.\n\n📍 Quản lý địa chỉ nhận hàng:\n\nThêm, sửa, xóa địa chỉ nhận hàng.\nChọn địa chỉ nhận hàng cho đơn hàng.\n\n🔐 Quản lý phân quyền:\n\nCấp quyền truy cập cho người dùng vào các chức năng khác nhau của hệ thống.\nQuản lý vai trò và quyền hạn của người dùng.\nPhân trang, tìm kiếm và sắp xếp vai trò và quyền hạn.\n\nCông nghệ:\n\nBackend Framework: NestJS\nDatabse: MongoDB\nCloud Platform: Render Platform\nORM: Mongoose\nSecurity: Helmet, CORS\n\nTài liệu tham khảo cho API:\n\n Swagger: 👉 Tài liệu Swagger \n Compodoc: 👉 Tài liệu Swagger \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AddressesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PromotionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddressesModule\n\n\n\ncluster_AddressesModule_exports\n\n\n\ncluster_AddressesModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CartsModule\n\n\n\ncluster_CartsModule_exports\n\n\n\ncluster_CartsModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_exports\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_exports\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_PromotionsModule\n\n\n\ncluster_PromotionsModule_exports\n\n\n\ncluster_PromotionsModule_providers\n\n\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_exports\n\n\n\ncluster_ReviewsModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAddressesService \n\nAddressesService \n\n\n\nAddressesModule\n\nAddressesModule\n\nAddressesService  -->\n\nAddressesModule->AddressesService \n\n\n\n\n\nCartsModule\n\nCartsModule\n\nCartsModule -->\n\nAddressesModule->CartsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressesModule->AppModule\n\n\n\n\n\nAddressesService\n\nAddressesService\n\nAddressesModule -->\n\nAddressesService->AddressesModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nCartsModule->OrdersModule\n\n\n\nAppModule -->\n\nCartsModule->AppModule\n\n\n\n\n\nCartsService \n\nCartsService \n\nCartsService  -->\n\nCartsModule->CartsService \n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCategoriesService \n\nCategoriesService \n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nOrdersService \n\nOrdersService \n\nOrdersService  -->\n\nOrdersModule->OrdersService \n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nPermissionsService \n\nPermissionsService \n\nPermissionsService  -->\n\nPermissionsModule->PermissionsService \n\n\n\n\n\nProductsModule\n\nProductsModule\n\nCartsModule -->\n\nProductsModule->CartsModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nProductsModule->ReviewsModule\n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\n\n\nPromotionsModule\n\nPromotionsModule\n\nCartsModule -->\n\nPromotionsModule->CartsModule\n\n\n\nAppModule -->\n\nPromotionsModule->AppModule\n\n\n\n\n\nPromotionsService \n\nPromotionsService \n\nPromotionsService  -->\n\nPromotionsModule->PromotionsService \n\n\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nReviewsService \n\nReviewsService \n\nReviewsService  -->\n\nReviewsModule->ReviewsService \n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nRolesModule->UsersModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCartExistsRule\n\nCartExistsRule\n\nAppModule -->\n\nCartExistsRule->AppModule\n\n\n\n\n\nProductExistsRule\n\nProductExistsRule\n\nAppModule -->\n\nProductExistsRule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCartsService\n\nCartsService\n\nCartsModule -->\n\nCartsService->CartsModule\n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nDatabaseModule -->\n\nDatabaseService->DatabaseModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nDatabaseModule -->\n\nRolesService->DatabaseModule\n\n\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabaseModule -->\n\nUsersService->DatabaseModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nPromotionsService\n\nPromotionsService\n\nPromotionsModule -->\n\nPromotionsService->PromotionsModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    43 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AddressDocument   (src/.../address.schema.ts)\n                        \n                        \n                            CartDocument   (src/.../cart.schema.ts)\n                        \n                        \n                            CategoryDocument   (src/.../category.schema.ts)\n                        \n                        \n                            OrderDocument   (src/.../order.schema.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ProductDocument   (src/.../product.schema.ts)\n                        \n                        \n                            PromotionDocument   (src/.../promotion.schema.ts)\n                        \n                        \n                            ReviewDocument   (src/.../review.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/models/addresses/schemas/address.schema.ts\n    \n    \n        \n            \n                \n                    \n                    AddressDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/models/carts/schemas/cart.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CartDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/models/categories/schemas/category.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CategoryDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/models/orders/schemas/order.schema.ts\n    \n    \n        \n            \n                \n                    \n                    OrderDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/models/permissions/schemas/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/models/products/schemas/product.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ProductDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/models/promotions/schemas/promotion.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PromotionDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/models/reviews/schemas/review.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ReviewDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/models/roles/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/models/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AddressSchema   (src/.../address.schema.ts)\n                        \n                        \n                            ADMIN_ROLE   (src/.../master-data.ts)\n                        \n                        \n                            API_PARAM_QUERY   (src/.../constants.ts)\n                        \n                        \n                            bcrypt   (src/.../users.service.ts)\n                        \n                        \n                            CartSchema   (src/.../cart.schema.ts)\n                        \n                        \n                            CategorySchema   (src/.../category.schema.ts)\n                        \n                        \n                            config   (src/.../swagger.config.ts)\n                        \n                        \n                            deleteFileFromDiskStorage   (src/.../multer.config.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../master-data.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../auth.decorator.ts)\n                        \n                        \n                            modelModule   (src/.../app.module.ts)\n                        \n                        \n                            multerConfig   (src/.../multer.config.ts)\n                        \n                        \n                            multerOptions   (src/.../multer.config.ts)\n                        \n                        \n                            OrderSchema   (src/.../order.schema.ts)\n                        \n                        \n                            OrderStatusTransitions   (src/.../constants.ts)\n                        \n                        \n                            PaymentStatusTransitions   (src/.../constants.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            ProductSchema   (src/.../product.schema.ts)\n                        \n                        \n                            PromotionSchema   (src/.../promotion.schema.ts)\n                        \n                        \n                            Public   (src/.../auth.decorator.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../response.decorator.ts)\n                        \n                        \n                            ResponseMessage   (src/.../response.decorator.ts)\n                        \n                        \n                            ReviewSchema   (src/.../review.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            TAX_RATE   (src/.../constants.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                        \n                            USER_ROLE   (src/.../master-data.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/models/addresses/schemas/address.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AddressSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Address)\n                    \n                \n\n\n        \n    \n\n    src/database/master-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Quản trị viên'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    _id: '66b19f9e976a2992552002cf',\n    name: 'Đăng nhập',\n    apiPath: '/api/v1/auth/login',\n    method: 'POST',\n    module: 'AUTH',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:47:49.369Z',\n    updatedAt: '2023-06-15T06:54:05.131Z',\n    __v: 0,\n    updatedBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n  },\n  {\n    _id: '66b1a039e463b2594905bd94',\n    name: 'Đăng ký tài khoản',\n    apiPath: '/api/v1/auth/signup',\n    method: 'POST',\n    module: 'AUTH',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:47:49.369Z',\n    updatedAt: '2023-06-15T06:54:05.131Z',\n    __v: 0,\n    updatedBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n  },\n  {\n    _id: '66b1a082dceab9ffa83859b2',\n    name: 'Lấy thông tin người dùng bằng token',\n    apiPath: '/api/v1/auth/account',\n    method: 'GET',\n    module: 'AUTH',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:47:49.369Z',\n    updatedAt: '2023-06-15T06:54:05.131Z',\n    __v: 0,\n    updatedBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n  },\n  {\n    _id: '66b1a0f083f52957f939db71',\n    name: 'Đổi token mới',\n    apiPath: '/api/v1/auth/refresh',\n    method: 'GET',\n    module: 'AUTH',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:47:49.369Z',\n    updatedAt: '2023-06-15T06:54:05.131Z',\n    __v: 0,\n    updatedBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n  },\n\n  {\n    _id: '648ab415f4328bd3153ee211',\n    name: 'Lấy danh sách sản phẩm',\n    apiPath: '/api/v1/products',\n    method: 'GET',\n    module: 'PRODUCTS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:47:49.369Z',\n    updatedAt: '2023-06-15T06:54:05.131Z',\n    __v: 0,\n    updatedBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n  },\n  {\n    _id: '648ab436f4328bd3153ee216',\n    name: 'Tạo mới sản phẩm',\n    apiPath: '/api/v1/products',\n    method: 'POST',\n    module: 'PRODUCTS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:48:22.224Z',\n    updatedAt: '2023-06-15T06:48:22.224Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab4d5f4328bd3153ee21b',\n    name: 'Cập nhật sản phẩm',\n    apiPath: '/api/v1/products/:id',\n    method: 'PATCH',\n    module: 'PRODUCTS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:51:01.241Z',\n    updatedAt: '2023-06-15T06:51:01.241Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab4ebf4328bd3153ee220',\n    name: 'Xóa sản phẩm',\n    apiPath: '/api/v1/products/:id',\n    method: 'DELETE',\n    module: 'PRODUCTS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:51:23.973Z',\n    updatedAt: '2023-06-15T06:51:23.973Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab5a8072f2a2ef910638d',\n    name: 'Lấy thông tin sản phẩm',\n    apiPath: '/api/v1/products/:id',\n    method: 'GET',\n    module: 'PRODUCTS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:54:32.799Z',\n    updatedAt: '2023-06-15T06:54:32.799Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6d3fa16b294212e4033',\n    name: 'Tạo mới người dùng',\n    apiPath: '/api/v1/users',\n    method: 'POST',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:59:31.898Z',\n    updatedAt: '2023-06-15T06:59:31.898Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6e7fa16b294212e4038',\n    name: 'Lấy thông tin người dùng',\n    apiPath: '/api/v1/users/:id',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:59:51.041Z',\n    updatedAt: '2023-06-15T06:59:51.041Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6fdfa16b294212e403d',\n    name: 'Lấy danh sách người dùng',\n    apiPath: '/api/v1/users',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:13.364Z',\n    updatedAt: '2023-06-15T07:00:13.364Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab719fa16b294212e4042',\n    name: 'Cập nhật người dùng',\n    apiPath: '/api/v1/users/:id',\n    method: 'PATCH',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:41.934Z',\n    updatedAt: '2023-06-15T07:00:41.934Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab728fa16b294212e4047',\n    name: 'Xóa người dùng',\n    apiPath: '/api/v1/users/:id',\n    method: 'DELETE',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:56.274Z',\n    updatedAt: '2023-06-15T07:00:56.274Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab750fa16b294212e404c',\n    name: 'Upload hình ảnh',\n    apiPath: '/api/v1/files/upload',\n    method: 'POST',\n    module: 'FILES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:01:36.923Z',\n    updatedAt: '2023-06-15T07:01:36.923Z',\n    __v: 0,\n  },\n  {\n    _id: '66b48f8f40dcef39a3b69366',\n    name: 'Xóa hình ảnh',\n    apiPath: '/api/v1/files/:fileName',\n    method: 'DELETE',\n    module: 'FILES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:01:36.923Z',\n    updatedAt: '2023-06-15T07:01:36.923Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad488dafdb9754f40b846',\n    name: 'Tạo mới danh mục',\n    apiPath: '/api/v1/categories',\n    method: 'POST',\n    module: 'CATEGORIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:16.508Z',\n    updatedAt: '2023-06-15T09:06:16.508Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad499dafdb9754f40b84b',\n    name: 'Lấy thông tin danh mục',\n    apiPath: '/api/v1/categories/:id',\n    method: 'GET',\n    module: 'CATEGORIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:33.697Z',\n    updatedAt: '2023-06-15T09:06:33.697Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4a6dafdb9754f40b850',\n    name: 'Cập nhật danh mục',\n    apiPath: '/api/v1/categories/:id',\n    method: 'PATCH',\n    module: 'CATEGORIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:46.085Z',\n    updatedAt: '2023-06-15T09:06:46.085Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4ccdafdb9754f40b859',\n    name: 'Lấy danh sách danh mục',\n    apiPath: '/api/v1/categories',\n    method: 'GET',\n    module: 'CATEGORIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:07:24.175Z',\n    updatedAt: '2023-06-15T09:07:24.175Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4d9dafdb9754f40b85e',\n    name: 'Xóa danh mục',\n    apiPath: '/api/v1/categories/:id',\n    method: 'DELETE',\n    module: 'CATEGORIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:07:37.896Z',\n    updatedAt: '2023-06-15T09:07:37.896Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4fedafdb9754f40b863',\n    name: 'Tạo mới địa chỉ nhận hàng',\n    apiPath: '/api/v1/addresses',\n    method: 'POST',\n    module: 'ADDRESSES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:14.659Z',\n    updatedAt: '2023-06-15T09:08:14.659Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad511dafdb9754f40b868',\n    name: 'Lấy danh sách địa chỉ nhận hàng bởi người dùng',\n    apiPath: '/api/v1/addresses',\n    method: 'GET',\n    module: 'ADDRESSES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:33.395Z',\n    updatedAt: '2023-06-15T09:08:33.395Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad522dafdb9754f40b86d',\n    name: 'Lấy thông tin địa chỉ nhận hàng',\n    apiPath: '/api/v1/addresses/:id',\n    method: 'GET',\n    module: 'ADDRESSES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:50.801Z',\n    updatedAt: '2023-06-15T09:08:50.801Z',\n    __v: 0,\n  },\n  {\n    _id: '66b23378479f3a391f6de1d1',\n    name: 'Cập nhật chỉ nhận hàng',\n    apiPath: '/api/v1/addresses/:id',\n    method: 'PATCH',\n    module: 'ADDRESSES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:15.785Z',\n    updatedAt: '2023-06-15T09:09:15.785Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad53bdafdb9754f40b872',\n    name: 'Xóa địa chỉ nhận hàng',\n    apiPath: '/api/v1/addresses/:id',\n    method: 'DELETE',\n    module: 'ADDRESSES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:15.785Z',\n    updatedAt: '2023-06-15T09:09:15.785Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad56ddafdb9754f40b87c',\n    name: 'Tạo mới giỏ hàng',\n    apiPath: '/api/v1/carts',\n    method: 'POST',\n    module: 'CARTS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:05.961Z',\n    updatedAt: '2023-06-15T09:10:05.961Z',\n    __v: 0,\n  },\n  {\n    _id: '66b1907d501d62fae994efde',\n    name: 'Lấy thông tin giỏ hàng',\n    apiPath: '/api/v1/carts/:id',\n    method: 'GET',\n    module: 'CARTS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:05.961Z',\n    updatedAt: '2023-06-15T09:10:05.961Z',\n    __v: 0,\n  },\n  {\n    _id: '66b191a1f6b6fb427a86fbcf',\n    name: 'Cập nhật giỏ hàng',\n    apiPath: '/api/v1/carts/:id',\n    method: 'PATCH',\n    module: 'CARTS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:05.961Z',\n    updatedAt: '2023-06-15T09:10:05.961Z',\n    __v: 0,\n  },\n  {\n    _id: '66b191a9ec8b8a81d95f0529',\n    name: 'Áp dụng mã giảm giá',\n    apiPath: '/api/v1/carts/:id/promotions',\n    method: 'POST',\n    module: 'CARTS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:05.961Z',\n    updatedAt: '2023-06-15T09:10:05.961Z',\n    __v: 0,\n  },\n  {\n    _id: '66b191af653fc6a655b6bfb5',\n    name: 'Áp dụng địa chỉ nhận hàng',\n    apiPath: '/api/v1/carts/:id/addresses',\n    method: 'POST',\n    module: 'CARTS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:05.961Z',\n    updatedAt: '2023-06-15T09:10:05.961Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad59adafdb9754f40b881',\n    name: 'Create a permission',\n    apiPath: '/api/v1/permissions',\n    method: 'POST',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:50.946Z',\n    updatedAt: '2023-06-15T09:10:50.946Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5aedafdb9754f40b886',\n    name: 'Fetch Permission with paginate',\n    apiPath: '/api/v1/permissions',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:10.914Z',\n    updatedAt: '2023-06-15T09:11:10.914Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5c5dafdb9754f40b88b',\n    name: 'Fetch permission by id',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:33.234Z',\n    updatedAt: '2023-06-15T09:11:33.234Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5d4dafdb9754f40b890',\n    name: 'Update a permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'PATCH',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:48.081Z',\n    updatedAt: '2023-06-15T09:11:48.081Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5ebdafdb9754f40b895',\n    name: 'Delete a permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'DELETE',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:11.323Z',\n    updatedAt: '2023-06-15T09:12:11.323Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad613dafdb9754f40b89a',\n    name: 'Create Role',\n    apiPath: '/api/v1/roles',\n    method: 'POST',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:51.974Z',\n    updatedAt: '2023-06-15T09:12:51.974Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad622dafdb9754f40b89f',\n    name: 'Fetch roles with paginate',\n    apiPath: '/api/v1/roles',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:06.618Z',\n    updatedAt: '2023-06-15T09:13:06.618Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad630dafdb9754f40b8a6',\n    name: 'Fetch role by id',\n    apiPath: '/api/v1/roles/:id',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:20.853Z',\n    updatedAt: '2023-06-15T09:13:20.853Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad640dafdb9754f40b8ab',\n    name: 'Update Role',\n    apiPath: '/api/v1/roles/:id',\n    method: 'PATCH',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:36.836Z',\n    updatedAt: '2023-06-15T09:13:36.836Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad650dafdb9754f40b8b0',\n    name: 'Delete a Role',\n    apiPath: '/api/v1/roles/:id',\n    method: 'DELETE',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:52.798Z',\n    updatedAt: '2023-06-15T09:13:52.798Z',\n    __v: 0,\n  },\n  //Promotions\n  {\n    _id: '66b191b5574ad802a0589a87',\n    name: 'Tạo mới mã giảm giá',\n    apiPath: '/api/v1/promotions',\n    method: 'POST',\n    module: 'PROMOTIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:51.974Z',\n    updatedAt: '2023-06-15T09:12:51.974Z',\n    __v: 0,\n  },\n  {\n    _id: '66b1921c9fc65d4c44e67792',\n    name: 'Lấy danh sách mã giảm giá',\n    apiPath: '/api/v1/promotions',\n    method: 'GET',\n    module: 'PROMOTIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:06.618Z',\n    updatedAt: '2023-06-15T09:13:06.618Z',\n    __v: 0,\n  },\n  {\n    _id: '66b192270095b129a1d9bf29',\n    name: 'Lấy thông tin mã giảm giá',\n    apiPath: '/api/v1/promotions/:id',\n    method: 'GET',\n    module: 'PROMOTIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:20.853Z',\n    updatedAt: '2023-06-15T09:13:20.853Z',\n    __v: 0,\n  },\n  {\n    _id: '66b1923badabf9c5dfe92b53',\n    name: 'Cập nhật mã giảm giá',\n    apiPath: '/api/v1/promotions/:id',\n    method: 'PATCH',\n    module: 'PROMOTIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:36.836Z',\n    updatedAt: '2023-06-15T09:13:36.836Z',\n    __v: 0,\n  },\n  {\n    _id: '66b19254443d9a73d13e3c04',\n    name: 'Xóa mã giảm giá',\n    apiPath: '/api/v1/promotions/:id',\n    method: 'DELETE',\n    module: 'PROMOTIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:52.798Z',\n    updatedAt: '2023-06-15T09:13:52.798Z',\n    __v: 0,\n  },\n  // Reviews\n  {\n    _id: '66b192b2cf1438d644e4b1d8',\n    name: 'Tạo mới đánh giá',\n    apiPath: '/api/v1/reviews',\n    method: 'POST',\n    module: 'REVIEWS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:51.974Z',\n    updatedAt: '2023-06-15T09:12:51.974Z',\n    __v: 0,\n  },\n  {\n    _id: '66b192c78f53552b5fce7df2',\n    name: 'Lấy danh sách đánh giá',\n    apiPath: '/api/v1/reviews',\n    method: 'GET',\n    module: 'REVIEWS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:06.618Z',\n    updatedAt: '2023-06-15T09:13:06.618Z',\n    __v: 0,\n  },\n  {\n    _id: '66b192dba213d537f77e9de5',\n    name: 'Lấy thông tin đánh giá',\n    apiPath: '/api/v1/reviews/:id',\n    method: 'GET',\n    module: 'REVIEWS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:20.853Z',\n    updatedAt: '2023-06-15T09:13:20.853Z',\n    __v: 0,\n  },\n  {\n    _id: '66b192ece8ba550a7158c94a',\n    name: 'Cập nhật đánh giá',\n    apiPath: '/api/v1/reviews/:id',\n    method: 'PATCH',\n    module: 'REVIEWS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:36.836Z',\n    updatedAt: '2023-06-15T09:13:36.836Z',\n    __v: 0,\n  },\n  {\n    _id: '66b19309350e28832fe8350b',\n    name: 'Xóa đánh giá',\n    apiPath: '/api/v1/reviews/:id',\n    method: 'DELETE',\n    module: 'REVIEWS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:52.798Z',\n    updatedAt: '2023-06-15T09:13:52.798Z',\n    __v: 0,\n  },\n  //Orders\n  {\n    _id: '66b1934e8101f94033fdd60d',\n    name: 'Tạo mới đơn hàng',\n    apiPath: '/api/v1/orders',\n    method: 'POST',\n    module: 'ORDERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:51.974Z',\n    updatedAt: '2023-06-15T09:12:51.974Z',\n    __v: 0,\n  },\n  {\n    _id: '66b1936b1d011920962d999c',\n    name: 'Lấy danh sách đơn hàng',\n    apiPath: '/api/v1/orders',\n    method: 'GET',\n    module: 'ORDERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:06.618Z',\n    updatedAt: '2023-06-15T09:13:06.618Z',\n    __v: 0,\n  },\n  {\n    _id: '66b1937104add905a56447d8',\n    name: 'Lấy thông tin dơn hàng',\n    apiPath: '/api/v1/orders/:id',\n    method: 'GET',\n    module: 'ORDERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:20.853Z',\n    updatedAt: '2023-06-15T09:13:20.853Z',\n    __v: 0,\n  },\n  {\n    _id: '66b193826fe6774e942c2500',\n    name: 'Cập nhật đơn hàng',\n    apiPath: '/api/v1/orders/:id',\n    method: 'PATCH',\n    module: 'ORDERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'khanh@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:36.836Z',\n    updatedAt: '2023-06-15T09:13:36.836Z',\n    __v: 0,\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Khách hàng'\n                    \n                \n\n\n        \n    \n\n    src/common/constants/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_PARAM_QUERY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'qs',\n  required: false,\n  type: String,\n  example: 'current=1&pageSize=2&populate=role&fields=-fullname&fullname=Khánh&sort=createdAt',\n  description:\n    'Build query string để thực hiện phân trang, tìm kiếm, sắp xếp, lấy thêm dữ liệu từ Related documents',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OrderStatusTransitions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  [OrderStatus.Pending]: [OrderStatus.Confirmed, OrderStatus.Cancelled],\n  [OrderStatus.Confirmed]: [OrderStatus.Shipping, OrderStatus.Cancelled],\n  [OrderStatus.Shipping]: [OrderStatus.Delivered],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PaymentStatusTransitions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  [PaymentStatus.Pending]: [PaymentStatus.Paid, PaymentStatus.Failed, PaymentStatus.Cancelled],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TAX_RATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 10 / 100\n                    \n                \n\n\n        \n    \n\n    src/models/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    src/models/carts/schemas/cart.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Cart)\n                    \n                \n\n\n        \n    \n\n    src/models/categories/schemas/category.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CategorySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Category)\n                    \n                \n\n\n        \n    \n\n    src/config/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n  .setTitle('Danh sách API thương hiệu K-Project')\n  .setDescription('API chuyên biệt cho việc quản lý và tự động hóa các hoạt động bán hàng.')\n  .setVersion('1.0.0')\n  .addBearerAuth(\n    {\n      type: 'http',\n      scheme: 'Bearer',\n      bearerFormat: 'JWT',\n      in: 'header',\n    },\n    'token',\n  )\n  .addSecurityRequirements('token')\n  .build()\n                    \n                \n\n\n        \n    \n\n    src/config/multer.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deleteFileFromDiskStorage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (fileName: string) => {\n  const filePath = `${multerConfig.dest}/${fileName}`;\n  if (existsSync(filePath)) {\n    unlinkSync(filePath);\n    return {\n      deleted: 1,\n    };\n  } else {\n    return {\n      deleted: 0,\n    };\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        multerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  dest: 'public/images',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        multerOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  // Enable file size limits\n  limits: {\n    fileSize: 1024 * 1024 * 5,\n  },\n  // Check the mimetypes to allow for upload\n  fileFilter: (req: any, file: any, cb: any) => {\n    if (file.mimetype.match(/\\/(jpg|jpeg|png)$/)) {\n      // Allow storage of file\n      cb(null, true);\n    } else {\n      // Reject file\n      cb(\n        new HttpException(\n          `Unsupported file type ${extname(file.originalname)}`,\n          HttpStatus.BAD_REQUEST,\n        ),\n        false,\n      );\n    }\n  },\n  storage: diskStorage({\n    destination: (req: any, file: any, cb: any) => {\n      const uploadPath = multerConfig.dest;\n      if (!existsSync(uploadPath)) {\n        mkdirSync(uploadPath);\n      }\n      cb(null, uploadPath);\n    },\n    filename: (req: any, file: any, cb: any) => {\n      cb(null, `${uuid()}${extname(file.originalname)}`);\n    },\n  }),\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        modelModule\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  AuthModule,\n  UsersModule,\n  RolesModule,\n  PermissionsModule,\n  CategoriesModule,\n  ProductsModule,\n  ReviewsModule,\n  PromotionsModule,\n  AddressesModule,\n  OrdersModule,\n  CartsModule,\n  FilesModule,\n  CartsModule,\n  DatabaseModule,\n]\n                    \n                \n\n\n        \n    \n\n    src/models/orders/schemas/order.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrderSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Order)\n                    \n                \n\n\n        \n    \n\n    src/models/permissions/schemas/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/models/products/schemas/product.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Product)\n                    \n                \n\n\n        \n    \n\n    src/models/promotions/schemas/promotion.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PromotionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Promotion)\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n  SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n\n    src/models/reviews/schemas/review.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ReviewSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Review)\n                    \n                \n\n\n        \n    \n\n    src/models/roles/schemas/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: string, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n  user.permissions = undefined;\n\n  return data ? user?.[data] : user;\n})\n                    \n                \n\n\n        \n    \n\n    src/models/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
